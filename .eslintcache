[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"16","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx":"17","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx":"18","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"19","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx":"20","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"21","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx":"22","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx":"23","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js":"24","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx":"25","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\PopUpImageHover.jsx":"26","C:\\Work\\Vectary\\backup\\material_ui\\src\\context\\texturePropertyContext.jsx":"27"},{"size":5865,"mtime":1610115454522,"results":"28","hashOfConfig":"29"},{"size":1158,"mtime":1610038841731,"results":"30","hashOfConfig":"29"},{"size":825,"mtime":1610046204842,"results":"31","hashOfConfig":"29"},{"size":532,"mtime":1609763545216,"results":"32","hashOfConfig":"29"},{"size":3669,"mtime":1610023436721,"results":"33","hashOfConfig":"29"},{"size":2723,"mtime":1610035759123,"results":"34","hashOfConfig":"29"},{"size":5093,"mtime":1610035465391,"results":"35","hashOfConfig":"29"},{"size":811,"mtime":1610097349552,"results":"36","hashOfConfig":"29"},{"size":2438,"mtime":1610046160250,"results":"37","hashOfConfig":"29"},{"size":5911,"mtime":1610098771615,"results":"38","hashOfConfig":"29"},{"size":964,"mtime":1610042199192,"results":"39","hashOfConfig":"29"},{"size":8640,"mtime":1610097042231,"results":"40","hashOfConfig":"29"},{"size":1224,"mtime":1610035606263,"results":"41","hashOfConfig":"29"},{"size":2346,"mtime":1609762210809,"results":"42","hashOfConfig":"29"},{"size":5635,"mtime":1610098859353,"results":"43","hashOfConfig":"29"},{"size":876,"mtime":1610044454191,"results":"44","hashOfConfig":"29"},{"size":1139,"mtime":1610098659398,"results":"45","hashOfConfig":"29"},{"size":2542,"mtime":1610021513988,"results":"46","hashOfConfig":"29"},{"size":718,"mtime":1610114473846,"results":"47","hashOfConfig":"29"},{"size":768,"mtime":1609762580592,"results":"48","hashOfConfig":"29"},{"size":190,"mtime":1609763437270,"results":"49","hashOfConfig":"29"},{"size":860,"mtime":1610025191652,"results":"50","hashOfConfig":"29"},{"size":486,"mtime":1610024174169,"results":"51","hashOfConfig":"29"},{"size":362,"mtime":1608257534771,"results":"52","hashOfConfig":"29"},{"size":1795,"mtime":1609754441871,"results":"53","hashOfConfig":"29"},{"size":1509,"mtime":1609245326458,"results":"54","hashOfConfig":"29"},{"size":933,"mtime":1609752199673,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11grfy6",{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js",["132","133","134"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx",["135","136","137"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { generateInputs } from \"../TestData/generators\"\r\n\r\n\r\n\r\nfunction Switch(props){\r\n    const {\r\n        id,\r\n        axis,\r\n        unit\r\n        } = props\r\n        const checkboxRef = useRef(null)\r\n        const [state, setState] = useState(false)\r\n\r\n        console.log(id, axis)\r\n        function handleChange(e){\r\n            console.log(checkboxRef.current.checked)\r\n            \r\n            setState(!state)\r\n            checkboxRef.current.checked = state\r\n        }\r\n\r\n    return(\r\n        <div id={id} onClick={handleChange} className={` w_56 h-full flex justify-between items-center ml-2`}>\r\n            <p className=\"font-normal text-sx text-midGrey pl-1\">{axis}</p>\r\n            <div  className={` ${state ? \"bg-primary justify-end\" :  \"bg-midGrey\"}  rounded-xl w_24 h-3 flex `}>\r\n\r\n                <div id=\"knot\" className=\"w-2 h-2 bg-almostWhite m-0.5 rounded-xl\">\r\n                        <input ref={checkboxRef} className=\"opacity-0 w-0 h-0\" type=\"checkbox\" />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Switch",["138","139"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx",["140"],"import React from \"react\"\r\nimport  Plus from \"../img/Symbols/Sprites/Signs_Plus_1.svg\"\r\n\r\n\r\n\r\nfunction TextureButton(props) {\r\n    const {\r\n        setOpenPopup,\r\n        openPopup,\r\n        type,\r\n        className,\r\n    \r\n    } = props\r\n\r\n    function handleClick(){\r\n        setOpenPopup(!openPopup)\r\n    }\r\n    return(\r\n        <>\r\n        <button onClick={handleClick}  className={`${className !== undefined ? className : \"ml-2\"} ${type == \"circle\" ? \"rounded-xl overflow-hidden bg-lightGrey\" \r\n        : type=== \"transparent\" ? \"\" : \"bg-lightGrey\"} \r\n        icon   focus:ring focus:outline-none rounded-sm flex justify-center items-center `}>\r\n            <img src={`${props.img || Plus}`}  alt={`${props.alt || \"add texture\"}`}/>\r\n        </button>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TextureButton",["141","142"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["143","144","145","146","147","148","149"],"import React, { useEffect, useState } from \"react\"\r\nimport Draggable from 'react-draggable';\r\n\r\nimport {gradients} from \"../TestData/DefaultData\"\r\n\r\nimport {map_range, map_float_range} from \"../TestData/functions\"\r\n\r\n\r\nfunction ColoredSlider(props){\r\n    const {\r\n        setProgress,\r\n        progress,\r\n        disabled,\r\n        min,\r\n        max,\r\n        decimal,\r\n        propName,\r\n        hasButton\r\n    } = props\r\n\r\n    const maximumPosition = 171\r\n\r\n    const[drag, setDrag] = useState(false)\r\n    const [lastPosition, setLastPosition] = useState(0)\r\n    const [dragPos, setDragPos] = useState(0)\r\n\r\n    const [background, setBackground] = useState(\"\")\r\n\r\n    const [knotColor, setKnotColor] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n      \r\n\r\n        switch(propName.toLowerCase()) {\r\n            case \"hue\":\r\n                setKnotColor(`hsl(${map_range(progress, -180, 180, 0, 360 )}, 100%, 50%)`)\r\n                setBackground(gradients.hue)\r\n            break;\r\n            case \"saturation\":\r\n                setKnotColor(`hsl(180, ${map_range(progress, -100, 100, 0, 100 )}%, 50%)`)\r\n                setBackground(gradients.saturation)\r\n            break;\r\n            case \"brightness\":\r\n                setKnotColor(` hsl(180, 0%, ${map_range(progress, -100, 100, 0, 100 )}%)`)\r\n                setBackground(gradients.brightness)\r\n            break;\r\n            \r\n        }\r\n        \r\n    }, [propName])\r\n\r\n\r\n    useEffect(()=>{\r\n        switch(propName.toLowerCase()) {\r\n            case \"hue\":\r\n                setKnotColor(`hsl(${map_range(progress, -180, 180, 0, 360 )}, 100%, 50%)`)\r\n               \r\n            break;\r\n            case \"saturation\":\r\n                setKnotColor(`hsl(180, ${map_range(progress, -100, 100, 0, 100 )}%, 50%)`)\r\n               \r\n            break;\r\n            case \"brightness\":\r\n                setKnotColor(`hsl(180, 0%, ${map_range(progress, -100, 100, 0, 100 )}%)`)\r\n              \r\n            break;\r\n            \r\n        }\r\n       \r\n       \r\n    }, [progress])\r\n\r\n    useEffect(() => {\r\n        \r\n            setDragPos(maximumPosition/2)\r\n        \r\n    }, [max])\r\n\r\n\r\n    function Drag(){\r\n        setDrag(true)\r\n    }\r\n\r\n    function DragOff(){\r\n        setDrag(false)\r\n    }\r\n\r\n    function setValue(e, o){\r\n       \r\n\r\n        \r\n        if(!disabled){\r\n            if(o.x < maximumPosition) {\r\n                setDragPos(o.x)\r\n            }else{\r\n                setDragPos(maximumPosition)\r\n            }\r\n            if(decimal === true){\r\n                setProgress(map_float_range(o.x, 0,maximumPosition,0,max))\r\n            }else{\r\n                setProgress(map_range(o.x, 0,maximumPosition, min || 0,max))\r\n            }\r\n           \r\n            setLastPosition(o.x)\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"flex items-center h_16 w-full\">\r\n        <Draggable\r\n        axis={disabled ? \"none\" : \"x\"}\r\n        bounds={{left: 0, top: 0, right: maximumPosition, bottom: 0}}\r\n        onStart={Drag}\r\n        onStop={DragOff}\r\n        onDrag={setValue}\r\n        position={{x: dragPos, y: 0}}\r\n        >\r\n            \r\n                <div className={`absolute  ${drag ? \"knotBig\" : \"knot\" } b_border flex justify-center items-center border-solid border-2 border-almostWhite`} \r\n                style={{\r\n                    backgroundColor: knotColor\r\n                }}>\r\n                \r\n                </div>\r\n            \r\n        </Draggable>\r\n        <div className={`w-full h-1 rounded-xl`} style={{\r\n            background: \"rgb(255,0,0)\",\r\n            background: `${background}`\r\n        }}></div>\r\n        \r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ColoredSlider",["150","151"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx",["152","153","154","155"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport Draggable from 'react-draggable';\r\n\r\nimport {map_range, map_float_range} from \"../TestData/functions\"\r\n\r\nfunction Slider(props) {\r\n    const {\r\n        setProgress,\r\n        disabled,\r\n        min,\r\n        max,\r\n        decimal,\r\n        hasButton,\r\n        progress,\r\n        maxLimit\r\n    } = props\r\n\r\n    const maximumPosition =  171\r\n\r\n    const[drag, setDrag] = useState(false)\r\n    const [lastPosition, setLastPosition] = useState(0)\r\n    const [dragPos, setDragPos] = useState(0)\r\n\r\n    const sliderComponentRef = useRef(null)\r\n\r\n    const remappedValue = (o) => {\r\n        if(decimal){\r\n            return map_float_range(o, 0,maximumPosition,0,max) }\r\n         else{\r\n             return map_range(o, 0,maximumPosition, min || 0,max)}\r\n            } \r\n\r\n        const reveredRemap = (pos) => {\r\n            if(decimal){\r\n                return map_float_range(pos, min || 0, max, 0, maximumPosition)\r\n            }else{\r\n                return  map_range(pos, min || 0, max,  0,maximumPosition)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(max > 100){\r\n           // setDragPos(maximumPosition/2)\r\n        }\r\n    }, [max])\r\n\r\n    useEffect(() => {\r\n        if(progress !== dragPos  ){\r\n           \r\n            setDragPos(reveredRemap(progress))\r\n        }\r\n\r\n    }, [progress])\r\n\r\n\r\n\r\n    function Drag(){\r\n        setDrag(true)\r\n    }\r\n\r\n    function DragOff(){\r\n        setDrag(false)\r\n    }\r\n\r\n    function setValue(e, o){\r\n       \r\n\r\n        \r\n        if(!disabled){\r\n            if(o.x < maximumPosition) {\r\n                setDragPos(o.x)\r\n            }else{\r\n                setDragPos(maximumPosition)\r\n            }\r\n          \r\n                setProgress(remappedValue(o.x))\r\n            \r\n           \r\n            setLastPosition(o.x)\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div ref={sliderComponentRef} className=\"flex items-center h_16 relative\">\r\n        <Draggable\r\n        axis={disabled ? \"none\" : \"x\"}\r\n        bounds={{left: 0, top: 0, right: maximumPosition, bottom: 0}}\r\n        onStart={Drag}\r\n        onStop={DragOff}\r\n        onDrag={setValue}\r\n        position={{x: dragPos, y:  0}}\r\n        >\r\n            \r\n            <div className={`relative  ${drag ? \"knotBig\" : \"knot\" } ${disabled ? \"bg-softGrey\" : \"bg-midGrey\"} \r\n            z-10 flex justify-center items-center border-solid border-2 border-almostWhite`}>\r\n                <div className={`${drag ? \"knotMidBig\" : \"knotMid\"}  bg-almostWhite`}></div>\r\n                \r\n            </div>\r\n        </Draggable>\r\n        <div className={`track bg-softGrey track absolute`}></div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Slider","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["156","157","158","159","160","161","162","163","164","165","166","167"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["168","169","170","171","172","173","174","175","176","177","178","179"],"import React, { useEffect, useState, useRef, useContext, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport {setDefaultTexture} from \"../TestData/functions\"\r\n\r\nimport {generateInputs, payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport colorPicker from \"../img/Symbols/Sprites/PipetteColor.svg\"\r\n\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nfunction LabeledInput(props) {\r\n    const {\r\n        id,\r\n        label,\r\n        labelType,\r\n        input,\r\n        type,\r\n        handleChange,\r\n        hasButton\r\n    } = props\r\n    const mainProperty = props.mainProperty !== undefined ? props.mainProperty : true\r\n    const [inputs, setInputs] = useState([])\r\n    const {globalState, dispatch}= useContext(TexturePorpertyContext)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const initialRender = useRef(true)\r\n    const [localLabel, setLocalLabel] = useState(\"\")\r\n\r\n    const [values, setValues] = useState({})\r\n\r\n    const payload = payloadGenerator(label)\r\n   \r\n   \r\n\r\n    useEffect(()=>{\r\n        console.log(mainProperty)\r\n        type == \"colorPicker\" ? setLocalLabel(input.iterable[0].label) : setLocalLabel(label)\r\n       \r\n        \r\n\r\n        setInputs(generateInputs(input, type || null))\r\n    }, [])\r\n\r\n    return(\r\n        <div className={`w-full h_24 flex ${mainProperty ? \"px-4\" : type=== \"colorPicker\" ? \"mt-5\" : \"my-4\"}`}>\r\n            <div className={` w-full flex items-center justify-between`}>\r\n               \r\n                <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"} \r\n                ${type === \"colorPicker\" && \" bg-lightGrey h-full w_48 flex justify-center items-center\"} \r\n                text-xs`}>{ localLabel}</p>\r\n                    \r\n\r\n        <div className=\"flex\">\r\n                <div className=\"flex\">\r\n\r\n                    {inputs && inputs.map((inp) => {\r\n                        return inp\r\n                    })}\r\n\r\n                </div>\r\n                {hasButton && <TextureButton \r\n                type=\"transparent\"\r\n                openPopup={openPopup} \r\n                className={`${!mainProperty ? \"ml-1\" : \"ml-2\" }`} \r\n                img={colorPicker} \r\n                alt=\"pick a color\" \r\n                setOpenPopup={setOpenPopup}/>}\r\n        </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx",["180","181","182","183","184"],"import React, { useContext, useEffect, useRef, useState,useLayoutEffect } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n \r\nimport {generateProperties} from \"../TestData/generators\"\r\n\r\nimport Dropdown from \"../components/dropdown\"\r\nimport PopUpView from \"../components/popUpView\"\r\nimport Tab from \"../components/Tab\"\r\n\r\nfunction useOutsideAlerter(ref, dispatch, globalState) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if(globalState.MetaData.WorkspaceRef && event.target === globalState.MetaData.WorkspaceRef.current){\r\n                    \r\n                    dispatch({type: \"CLOSE_POPUP\"})\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, globalState]);\r\n}\r\n\r\nArray.prototype.move = function (from, to) {\r\n    this.splice(to, 0, this.splice(from, 1)[0]);\r\n  };\r\n\r\nfunction TexturePopup(props) {\r\n    const {globalState, dispatch}= useContext(TexturePorpertyContext)\r\n    \r\n    const [open, setOpen] = useState(true)\r\n    const [hover, setHover] = useState(false)\r\n    const popUpWindow = useRef(null)\r\n    \r\n    const [activeProperty, setActiveProperty] = useState(0) // The index of the active property e.g. Metalness\r\n    const [activeTexture, setActiveTexture] = useState(0) //The index of the active TextureType (Solid / Gradient / Image)\r\n    const [activeTab, setActiveTab] = useState(0) //The index of the active submenu currently open (e.g. Adjust / Transform)\r\n    const [activeType, setActiveType] = useState(0) // \r\n\r\n\r\n    const [properties, setProperties] = useState([])\r\n\r\n    useOutsideAlerter(popUpWindow, dispatch, globalState)\r\n\r\n    useEffect(() => {\r\n     \r\n\r\n           setOpen(globalState.MetaData.activeTexturePopup !== \"\")\r\n           setActiveTab(0)\r\n           setActiveType(0)\r\n           setActiveTexture(0)\r\n           if(globalState.MetaData.activeTexturePopup !== \"\") {\r\n               const globalStateCopy = globalState\r\n            let currentSelection = globalStateCopy.MaterialPorperties.filter(x => x.id === globalState.MetaData.activeTexturePopup)[0]\r\n            setActiveProperty(globalState.MaterialPorperties.indexOf(currentSelection))\r\n\r\n            \r\n           }\r\n        \r\n    }, [globalState.MetaData.activeTexturePopup])\r\n\r\n   useEffect(() => {\r\n   \r\n    if(activeProperty !== undefined && globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        const path = {\r\n            activeProperty: activeProperty,\r\n            activeTexture: activeTexture,\r\n            activeTab: activeTab,\r\n        }\r\n            const currentlySelectedProps = globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes[activeTab]\r\n            setProperties(currentlySelectedProps)\r\n            const newProperties = generateProperties(currentlySelectedProps, path)\r\n            setProperties(newProperties)\r\n\r\n\r\n            \r\n    }\r\n    const test = {\r\n        activeProperty: activeProperty,\r\n        activeTexture: activeTexture,\r\n        activeTab: activeTab,\r\n        activeType: activeType\r\n    }\r\n\r\n    console.table(test)\r\n\r\n    if( globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        console.log(globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture])\r\n    }\r\n\r\n   }, [activeProperty,activeTexture, activeTab, activeType, open])\r\n\r\n    function handleHoverStart() {\r\n       \r\n        setHover(true)\r\n    }\r\n\r\n    function handleHoverEnd(){\r\n        \r\n        setHover(false)\r\n    }\r\n\r\n\r\n  \r\n    return(\r\n        <Draggable\r\n        bounds=\"parent\"\r\n        handle=\"handle\"\r\n        positionOffset={{x:248, y:98}}\r\n        defaultPosition={{x: window.innerWidth-(4 * 248 + 40), y: 98}}\r\n   >\r\n       {globalState.MaterialPorperties[activeType] ? \r\n         <div ref={popUpWindow} \r\n         className={`${open ? \"\" : \"hidden\"} \r\n         w_props-row  bg-white absolute rounded-sm overflow-hidden`} \r\n         style={{minHeight: \"350px\"}}>\r\n\r\n               <PopUpView  \r\n                       globalState={globalState}\r\n                       activeType={activeType}\r\n                       handleHoverStart={handleHoverStart}\r\n                       handleHoverEnd={handleHoverEnd}\r\n                       hover={hover}\r\n                       activeTexture={activeTexture}\r\n                       setActiveTexture={setActiveType}\r\n                       activeProperty={activeProperty}\r\n                       type={globalState.MaterialPorperties[activeProperty].textureTypes[activeType]}\r\n               />  \r\n           \r\n               \r\n             <div id=\"popUp_Properties transition-all duration-100 \" className=\"p-4\">\r\n                \r\n                 \r\n                <Dropdown list={globalState.MaterialPorperties[activeProperty].textureTypes} type=\"solid\" dropdownSelection={activeTexture} setDropdownSelection={setActiveTexture} />\r\n                \r\n\r\n               {globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes.length > 1 && \r\n                <Tab tabOptions={ globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes} active={activeTab} setActive={setActiveTab}/>\r\n                } \r\n                \r\n\r\n               {properties && properties.map((prop) => {\r\n                   return prop\r\n               })}\r\n\r\n             </div>\r\n         </div>\r\n         : <div></div> }\r\n   </Draggable>\r\n    )\r\n}\r\n\r\n\r\nexport default TexturePopup",["185","186"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx",["187","188"],"import React, { useEffect, useState } from \"react\"\r\nimport { generateInputs, defaultInputs } from \"../TestData/generators\"\r\n\r\nimport Switch from \"../components/Switch\"\r\n\r\n\r\nfunction LabeledSwitch(props){\r\n    const {\r\n        label,\r\n        labelType,\r\n        padding,\r\n        handleChange,\r\n        input\r\n        } = props\r\n    const [inputs, setInputs] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        setInputs(generateInputs(input  || defaultInputs.single(), \"switch\"))\r\n    }, [input])\r\n\r\n    return(\r\n        <div className={` ${padding && \"px-4\"} flex w-full h_24 text-xs font-semibold justify-between items-center`}>\r\n\r\n            <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"}`}>{label}</p>\r\n            <div className=\"flex\">\r\n                {inputs.map((elem, index) => {\r\n                    return elem\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledSwitch","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js",["189","190","191"],"import React, {useState} from \"react\"\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultImages = [{\r\n    name: \"texture_001.png\",\r\n    src: \"https://i.pinimg.com/originals/2c/c1/3e/2cc13e6422218aa521474b36346b85f9.jpg\",\r\n    active: true\r\n},{\r\n    name: \"texture_002.png\",\r\n    src: \"https://image.shutterstock.com/z/stock-photo-white-crick-wall-texture-background-229832425.jpg\",\r\n    active: false\r\n}]\r\n\r\n\r\nexport const ImageTabTypes = () => { return [\r\n    {\r\n        name: \"Adjust\",\r\n        properties: [{\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Hue\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Saturation\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Brightness\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Contrast\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"switch\",\r\n            label: \"Invert\",\r\n            input: {\r\n                type: \"single\",\r\n                on: false\r\n            }\r\n        }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Transform\",\r\n        properties: [\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Tiling\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Offset\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Rotation\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"single\",\r\n                iterable: null,\r\n                unit: \"°\"\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"switch\",\r\n            label: \"Invert\",\r\n            input: {\r\n                type: \"double\",\r\n                on: false\r\n            }\r\n        }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Overlay\",\r\n        properties: [{\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            colorSlider: true,\r\n            max: 180,\r\n            min: -180,\r\n            rigid: true,\r\n            label: \"Hue\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            colorSlider: true,\r\n            max: 180,\r\n            min: -180,\r\n            rigid: true,\r\n            label: \"Saturation\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            colorSlider: true,\r\n            max: 180,\r\n            min: -180,\r\n            rigid: true,\r\n            label: \"Brightness\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            hasButton: true,\r\n            input: {\r\n                type: \"colorPicker\"\r\n                \r\n            }\r\n        }\r\n        ]\r\n    }\r\n]}\r\n\r\n\r\nconst GradientTabTypes = () => {\r\n    return  [\r\n        {\r\n            name: \"Adjust\",\r\n            properties: [{\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Hue\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Saturation\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Brightness\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"number\",\r\n                hasButton: true,\r\n                input: {\r\n                    type: \"colorPicker\"\r\n                    \r\n                }\r\n            }\r\n            ]\r\n        },\r\n        {\r\n        name: \"Transform\",\r\n        properties: [\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Tiling\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Offset\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Rotation\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"single\",\r\n                iterable: null,\r\n                unit: \"°\"\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"switch\",\r\n            label: \"Invert\",\r\n            input: {\r\n                type: \"double\",\r\n                on: false\r\n            }\r\n        }\r\n        ]\r\n    }\r\n]\r\n\r\n}\r\n\r\n\r\nconst SolidTabTypes = () => {\r\n    return [\r\n        {\r\n            name: \"Adjust\",\r\n            properties: [{\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Hue\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Saturation\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Brightness\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"number\",\r\n                hasButton: true,\r\n                input: {\r\n                    type: \"colorPicker\"\r\n                    \r\n                }\r\n            }\r\n            ]\r\n        },\r\n    ]\r\n}\r\n\r\n\r\n\r\nexport const TextureTypes  =() => {return [\r\n    {name: \"Image\",\r\n    active: true,\r\n    tabTypes: ImageTabTypes()\r\n    },\r\n    {name: \"Gradient\",\r\n    active: false,\r\n    tabTypes: GradientTabTypes()\r\n    }, \r\n    {name: \"Solid\",\r\n    active: false,\r\n    tabTypes: SolidTabTypes()\r\n    },\r\n\r\n\r\n]}\r\n\r\nexport const convertToColor = (hue, sat, brightness) => {\r\n    return `hsl(${hue}, ${sat}%, ${brightness}%)`\r\n}\r\n\r\nexport const convertToGradient = (...gradients) => {\r\n    console.log(gradients)\r\n}\r\n\r\nexport const gradients = {\r\n    hue: \"linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(254,255,0,1) 25%, rgba(0,254,255,1) 50%, rgba(252,0,255,1) 75%, rgba(255,0,0,1) 100%)\",\r\n    saturation:\"linear-gradient(90deg, hsl(180,0%,50%) 0%, hsl(180,100%,50%) 100%)\",\r\n    brightness: \"linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 100%)\"\r\n}\r\n\r\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["192","193"],"import React from \"react\"\r\n\r\nexport const MaterialPropertyReducer =(state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ONE_PROP\":\r\n            return [\r\n               ...state,\r\n             state.filter(x => x.id === action.payload.id).length === 0 &&\r\n             {       \r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                textureTypes: action.payload.textureTypes,\r\n                images: action.payload.images ? action.payload.images : [] \r\n     }           \r\n                    \r\n                \r\n            ]\r\n            case \"REMOVE_ONE_PROP\": \r\n            return state.filter(item => item.id !== action.id)\r\n\r\n            case \"UPDATE_POPUP_PROPERTY\": \r\n            const path = action.payload.path\r\n            \r\n            const newState = state\r\n            newState[path.activeProperty]\r\n            .textureTypes[path.activeTexture]\r\n            .tabTypes[path.activeTab]\r\n            .properties.filter(x => x.id === action.payload.id)[0]\r\n            .progress = action.payload.progress\r\n      \r\n            return newState\r\n            break;\r\n\r\n            default: \r\n            return state\r\n            \r\n    } \r\n        \r\n\r\n}","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx",["194","195","196","197","198","199","200"],"import React, { useContext, useState } from \"react\"\r\nimport DownArrowBlack from \"../img/Symbols/Sprites/Signs_ArrowDown_1.svg\"\r\nimport DownArrowWhite from \"../img/Symbols/Sprites/Signs_ArrowDown_3.svg\"\r\n\r\n\r\nfunction Dropdown(props){\r\n    const {\r\n        type,\r\n        list,\r\n        optionTitle,\r\n        dropdownSelection,\r\n        setDropdownSelection\r\n    } = props\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n    const handleSelection = (e) => {\r\n        const selectionTarget = parseInt(e.target.id.split(\"-\")[1])\r\n        \r\n        setDropdownSelection(selectionTarget)\r\n       \r\n    }\r\n\r\n    function handleDropdown(){\r\n        setDropdownOpen(!dropdownOpen)\r\n    }\r\n\r\n    return (\r\n        <div id=\"texture_dropdown\" \r\n        onClick={handleDropdown}\r\n        className={` cursor-pointer w-full mb-4 h_24  rounded z-10 relative\r\n         ${dropdownOpen ? \" \" : \"overflow-hidden\" } ${type == \"solid\" ? \"text-almostBlack \" : \"border border-almostWhite\"}`} \r\n       >\r\n\r\n            <ul id=\"texture_dropdown-list \" \r\n            className={`list-none ${dropdownOpen ? \" bg-almostBlack text-almostWhite border border-almostBlack\" \r\n            : type == \"solid\" ? \"bg-lightGrey border border-lightGrey\" : \"border border-almostBlack\"} w_wide-10 ` }\r\n\r\n             style={{\r\n\r\n                outline: \"thin solid #252525\"\r\n            }}>\r\n\r\n                {optionTitle &&  <li className=\"pl-1 text-sm  flex justify-between\">{optionTitle}\r\n                <img src={type == \"solid\" ? DownArrowBlack : DownArrowWhite} className=\"w_24 h_24  flex justify-center items-center select-none\"></img></li>\r\n                }\r\n               \r\n\r\n                {list && list.map((item,index) => {\r\n                    return <li key={index} \r\n                    onClick={handleSelection}\r\n                    id={`dropdown_item_${optionTitle}-${index}`}\r\n                    className={`${index === dropdownSelection && dropdownOpen ? \"bg-darkGrey\" : \"\"} \r\n                    pl-1 text-sm h_24 flex w-full justify-between\r\n                    ${index > 0 && \"hover:bg-darkGrey\"}`}>{item.name} {(index == 0 && type === \"solid\") && <img src={dropdownOpen ? DownArrowWhite : DownArrowBlack} /> } </li>\r\n                })}\r\n              \r\n                \r\n            </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dropdown",["201","202"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx",["203","204","205","206","207","208"],"import React from \"react\"\r\nimport TextSlider  from \"../containers/TextSlider\"\r\nimport Input from \"../components/Input\"\r\nimport LabeledSwitch from \"../containers/LabeledSwitch\"\r\nimport LabeledInput from \"../containers/LabeledInput\"\r\n\r\nimport {TextureTypes} from \"./DefaultData\"\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport Switch from \"../components/Switch\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultInputs = {\r\n    single: (unit = null) => {\r\n       return {\r\n            iterable: [0],\r\n            unit: unit \r\n        }\r\n    },\r\n    double: (unit = null, iterable) => {\r\n        return {\r\n            iterable: iterable ? [\"X\", \"Y\"] : [0, 0],\r\n            unit: unit \r\n        }\r\n    },\r\n    triple: (unit = null, iterable) => {\r\n        return {\r\n            iterable: iterable ? [\"X\", \"Y\", \"Z\"] : [0, 0, 0],\r\n            unit: unit \r\n        }\r\n    },\r\n    color: () => {\r\n        return {\r\n            iterable: [\r\n                {\r\n                    label: \"RGB\",\r\n                    default: [255,255,255]\r\n                },\r\n                {\r\n                    label: \"HSB\",\r\n                    default: [360, 100, 100]\r\n                },\r\n                {\r\n                    label: \"HEX\",\r\n                    default: [\"#fffff\"]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport  const newSwitch = (swt) => {\r\n                  \r\n    switch (swt.type){\r\n        case \"single\": \r\n            return defaultInputs.single()\r\n\r\n        case \"double\":\r\n            return defaultInputs.double(null, true)\r\n  \r\n    }\r\n}\r\n\r\nexport const generateProperties = (listOfProperties, path) => {\r\n    let propertyArray = []\r\n    console.log(listOfProperties, path)\r\n    listOfProperties.properties.map((property, index) =>{\r\n        \r\n        switch(property.type) {\r\n            case \"slider\":\r\n                propertyArray.push( <TextSlider \r\n                    id={property.id}\r\n                    key={property.id} \r\n                    path={path}\r\n                    propName={property.label} \r\n                    active={true} \r\n                    decimal={false} \r\n                    colorSlider={property.colorSlider || false}\r\n                    maximum={property.max} \r\n                    minimum={property.min}\r\n                    labelType={\"normal\"}\r\n                    unit={null} \r\n                    \r\n                    hasButton={false}/>)\r\n                    break;\r\n            case \"switch\":\r\n               \r\n              console.log(newSwitch(property.input), property.input , \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\")\r\n\r\n                    propertyArray.push(\r\n                        <LabeledSwitch\r\n                            key={property.id}\r\n                            label={property.label}\r\n                            labelType={\"normal\"}\r\n                            input={newSwitch(property.input)}\r\n                        />\r\n                    )\r\n\r\n                    break;\r\n            case \"number\":\r\n                const newNumberInput = (input) => {\r\n                    switch (input.type){\r\n                        case \"single\":\r\n                            return defaultInputs.single(input.unit, input.iterable)\r\n                       \r\n                        case \"double\":\r\n                            return defaultInputs.double(input.unit, input.iterable)\r\n                        \r\n                        case \"triple\": \r\n                            return defaultInputs.triple(input.unit, input.iterable)\r\n\r\n                        case \"colorPicker\":\r\n                            return defaultInputs.color()\r\n                       \r\n                    }\r\n                }\r\n               \r\n                console.log(\"HERE\")\r\n                propertyArray.push(\r\n                \r\n                <LabeledInput \r\n                key={property.id}\r\n                id={_uniqueId(\"LabeledInput-\")}  \r\n                label={property.label}  \r\n                labelType={`${property.labelType}`}    \r\n                hasButton={property.hasButton}  \r\n                type={property.input.type}\r\n                mainProperty={false}\r\n                input={newNumberInput(property.input)}   />\r\n                \r\n                )\r\n\r\n                    break;\r\n            \r\n        }\r\n    })\r\n    return propertyArray\r\n}\r\n\r\n\r\nexport const generateInputs = (inputs, type = null) => {\r\n    \r\n    const inputIterable = inputs.iterable || [0]\r\n\r\n    const inputArray = []   \r\n\r\n    console.log(inputIterable)\r\n    inputIterable.map((elem, index) => {\r\n        \r\n        const newiterable = (inputs.iterable && inputs.iterable[0] != 0) ? inputs.iterable[index] : \"\"\r\n        const newUnit = (inputs.iterable && inputs.unit != null) ? inputs.unit : \"\"\r\n\r\n        const newId = uuidv4()\r\n\r\n        switch(type) {\r\n            case \"switch\": \r\n            inputArray.push(<Switch key={newId} id={newId} axis={newiterable} unit={newUnit}  />)\r\n            break;\r\n\r\n            case \"colorPicker\": \r\n            console.log(\"COLORPICKER\")\r\n           \r\n            inputArray.push(<Input key={newId} id={newId} unit={null} value={inputIterable[0].default[index]} color={true}/>)\r\n\r\n            break;\r\n\r\n            default:\r\n            inputArray.push(<Input key={newId} iterable={newiterable} unit={newUnit} />)\r\n            break;\r\n        }\r\n\r\n    })\r\n    \r\n    return inputArray\r\n}\r\n\r\n\r\nexport const payloadGenerator = (type) => {\r\n    const newTabTypes = TextureTypes\r\n  \r\n    return {\r\n      id: _uniqueId(`${type}-`),\r\n      type: type,\r\n      TextureTypes: newTabTypes\r\n    }\r\n  }\r\n\r\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx",[],["209","210"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx",["211","212","213"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport {useOutsideClickDetection} from \"../TestData/functions\"\r\n\r\nfunction SliderParamProp(props) {\r\n    const {\r\n        progress, \r\n        propName, \r\n        disabled,\r\n        labelType,\r\n        setMax,\r\n        setProgress,\r\n        maxLimit,\r\n        unit,\r\n        colorSlider\r\n    } = props\r\n    const [toInput, setToInput] = useState(false)\r\n    const inputRef = useRef(null)\r\n    const textRef = useRef(null)\r\n    useOutsideClickDetection(inputRef, setToInput)\r\n\r\n    const inputid = _uniqueId(\"prop_input-\")\r\n\r\n    \r\n   useEffect(()=>{\r\n       inputRef.current.value = progress\r\n       textRef.current.textContent = progress\r\n       document.querySelector(`#${inputid}`).select()\r\n   }, [toInput])\r\n\r\n    function switchToInput(){\r\n        if(!disabled ){\r\n            setToInput(!toInput)\r\n        }\r\n      \r\n    }\r\n    function keyHandler(e) {\r\n        if(e.key == \"Enter\" ){\r\n            if(e.target.value <= maxLimit){\r\n                setMax(maxLimit)\r\n\r\n            }else{\r\n                setMax(e.target.value * 2)\r\n\r\n            }\r\n            switchToInput()\r\n            setProgress(e.target.value)\r\n\r\n        }\r\n    }\r\n    function changeHandler(e){\r\n        \r\n            if(e.target.value <= maxLimit){\r\n                setMax(maxLimit)\r\n\r\n            }else{\r\n                setMax(e.target.value * 2)\r\n\r\n            }\r\n            setProgress(e.target.value)\r\n        \r\n        \r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"flex flex-row h_16 text-xs justify-between\">\r\n            <p  className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"}`}>{propName}</p>\r\n            <div className=\"flex \" >\r\n                \r\n                <input id={`${inputid}`}\r\n                 type=\"number\"\r\n                 className={` ${toInput ? \"\" : \"hidden\"} bg-none w_40 text-right appearance-hide`} \r\n                 placeholder={progress} \r\n                 autoFocus\r\n                 onFocus={(e) => {e.target.select()}}\r\n                 onKeyDown={keyHandler}\r\n                 onChange={changeHandler}\r\n                  ref={inputRef}/> \r\n\r\n                <p onClick={switchToInput} ref={textRef} className={`${disabled ? \"text-softGrey\" : \"\"} ${toInput ? \"hidden\" : \"\"}`}>{progress}</p>\r\n                <p className={`${disabled ? \"text-softGrey\" : \"\"}`}>{unit === null ? \"\" : unit || \"%\"}</p>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SliderParamProp","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["214"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx",["215"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx",["216","217","218"],"import React, { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\nfunction MaterialList(){\r\n    const [legacyCodeLoader, setLegacyCodeLoader] = useState(\"\")\r\n\r\n    const iframe = `<iframe src=\"https://robertcsollei-vectary.github.io/hostingLegacyMaterialList/\" width=\"248\" height=\"225\"> </iframe>`\r\n   \r\n    return(\r\n        <div id=\"matList\" className=\"material_list\" dangerouslySetInnerHTML={{__html: iframe}}>\r\n            \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialList","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js",[],["219","220"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx",["221","222","223"],"import React, {useEffect} from \"react\"\r\n\r\nexport function map_range(value, low1, high1, low2, high2) {\r\n    return Math.floor(low2 + ((high2 - low2) * (value - low1)) / (high1 - low1))\r\n}\r\n\r\nexport function map_float_range(value, low1, high1, low2, high2) {\r\n    return (low2 + ((high2 - low2) * (value - low1)) / (high1 - low1)).toFixed(3)\r\n}\r\n\r\n\r\nexport function useOutsideClickDetection(ref, setProp) {\r\n    useEffect(() => {\r\n\r\n        function handleClikcOutseideElement(event){\r\n            if(ref.current && !ref.current.contains(event.target)){\r\n               setProp(false)\r\n            }\r\n        }\r\n\r\n\r\n        document.addEventListener(\"mousedown\", handleClikcOutseideElement)\r\n\r\n        return ()=> {\r\n            document.addEventListener(\"mousedown\", handleClikcOutseideElement)\r\n           \r\n        }\r\n\r\n    }, [ref])\r\n}\r\n\r\n\r\nexport function useOutsideClickDetectionSwitch(ref, setProp, prop) {\r\n    useEffect(() => {\r\n\r\n        function handleClikcOutseideElement(event){\r\n            if(ref.current && !ref.current.contains(event.target)){\r\n               setProp(!prop)\r\n            }\r\n        }\r\n\r\n\r\n        document.addEventListener(\"mousedown\", handleClikcOutseideElement)\r\n\r\n        return ()=> {\r\n            document.addEventListener(\"mousedown\", handleClikcOutseideElement)\r\n           \r\n        }\r\n\r\n    }, [ref])\r\n}\r\n\r\n\r\nexport function setDefaultTexture(payload, id){\r\n        \r\n    payload.img = [{\r\n        name: \"texture_001.png\",\r\n        src: \"https://i.pinimg.com/originals/2c/c1/3e/2cc13e6422218aa521474b36346b85f9.jpg\",\r\n        active: true\r\n    },{\r\n        name: \"texture_002.png\",\r\n        src: \"https://image.shutterstock.com/z/stock-photo-white-crick-wall-texture-background-229832425.jpg\",\r\n        active: false\r\n    }]\r\n    payload.id = id\r\n   }\r\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\PopUpImageHover.jsx",["224","225"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\context\\texturePropertyContext.jsx",["226"],{"ruleId":"227","severity":1,"message":"228","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":17},{"ruleId":"227","severity":1,"message":"231","line":27,"column":10,"nodeType":"229","messageId":"230","endLine":27,"endColumn":21},{"ruleId":"232","severity":1,"message":"233","line":35,"column":6,"nodeType":"234","endLine":35,"endColumn":20,"suggestions":"235"},{"ruleId":"227","severity":1,"message":"236","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"237","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":24},{"ruleId":"227","severity":1,"message":"238","line":10,"column":9,"nodeType":"229","messageId":"230","endLine":10,"endColumn":13},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":20,"column":107,"nodeType":"245","messageId":"246","endLine":20,"endColumn":109},{"ruleId":"239","replacedBy":"247"},{"ruleId":"241","replacedBy":"248"},{"ruleId":"227","severity":1,"message":"249","line":18,"column":9,"nodeType":"229","messageId":"230","endLine":18,"endColumn":18},{"ruleId":"227","severity":1,"message":"250","line":24,"column":12,"nodeType":"229","messageId":"230","endLine":24,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":35,"column":9,"nodeType":"253","messageId":"254","endLine":49,"endColumn":10},{"ruleId":"232","severity":1,"message":"255","line":51,"column":8,"nodeType":"234","endLine":51,"endColumn":18,"suggestions":"256"},{"ruleId":"251","severity":1,"message":"252","line":55,"column":9,"nodeType":"253","messageId":"254","endLine":69,"endColumn":10},{"ruleId":"232","severity":1,"message":"257","line":72,"column":8,"nodeType":"234","endLine":72,"endColumn":18,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":129,"column":13,"nodeType":"261","messageId":"246","endLine":129,"endColumn":23},{"ruleId":"239","replacedBy":"262"},{"ruleId":"241","replacedBy":"263"},{"ruleId":"227","severity":1,"message":"249","line":13,"column":9,"nodeType":"229","messageId":"230","endLine":13,"endColumn":18},{"ruleId":"227","severity":1,"message":"264","line":15,"column":9,"nodeType":"229","messageId":"230","endLine":15,"endColumn":17},{"ruleId":"227","severity":1,"message":"250","line":21,"column":12,"nodeType":"229","messageId":"230","endLine":21,"endColumn":24},{"ruleId":"232","severity":1,"message":"265","line":55,"column":8,"nodeType":"234","endLine":55,"endColumn":18,"suggestions":"266"},{"ruleId":"227","severity":1,"message":"267","line":1,"column":58,"nodeType":"229","messageId":"230","endLine":1,"endColumn":73},{"ruleId":"227","severity":1,"message":"268","line":10,"column":9,"nodeType":"229","messageId":"230","endLine":10,"endColumn":25},{"ruleId":"232","severity":1,"message":"269","line":59,"column":8,"nodeType":"234","endLine":59,"endColumn":10,"suggestions":"270"},{"ruleId":"243","severity":1,"message":"244","line":76,"column":75,"nodeType":"245","messageId":"246","endLine":76,"endColumn":77},{"ruleId":"232","severity":1,"message":"271","line":81,"column":8,"nodeType":"234","endLine":81,"endColumn":19,"suggestions":"272"},{"ruleId":"232","severity":1,"message":"273","line":92,"column":8,"nodeType":"234","endLine":92,"endColumn":18,"suggestions":"274"},{"ruleId":"232","severity":1,"message":"275","line":98,"column":8,"nodeType":"234","endLine":98,"endColumn":49,"suggestions":"276"},{"ruleId":"232","severity":1,"message":"277","line":121,"column":8,"nodeType":"234","endLine":121,"endColumn":23,"suggestions":"278"},{"ruleId":"243","severity":1,"message":"279","line":127,"column":42,"nodeType":"245","messageId":"246","endLine":127,"endColumn":44},{"ruleId":"280","severity":1,"message":"281","line":141,"column":17,"nodeType":"282","endLine":141,"endColumn":36},{"ruleId":"243","severity":1,"message":"279","line":160,"column":34,"nodeType":"245","messageId":"246","endLine":160,"endColumn":36},{"ruleId":"243","severity":1,"message":"279","line":173,"column":27,"nodeType":"245","messageId":"246","endLine":173,"endColumn":29},{"ruleId":"227","severity":1,"message":"267","line":1,"column":58,"nodeType":"229","messageId":"230","endLine":1,"endColumn":73},{"ruleId":"227","severity":1,"message":"283","line":5,"column":9,"nodeType":"229","messageId":"230","endLine":5,"endColumn":26},{"ruleId":"227","severity":1,"message":"284","line":15,"column":9,"nodeType":"229","messageId":"230","endLine":15,"endColumn":11},{"ruleId":"227","severity":1,"message":"285","line":20,"column":9,"nodeType":"229","messageId":"230","endLine":20,"endColumn":21},{"ruleId":"227","severity":1,"message":"231","line":25,"column":12,"nodeType":"229","messageId":"230","endLine":25,"endColumn":23},{"ruleId":"227","severity":1,"message":"286","line":25,"column":25,"nodeType":"229","messageId":"230","endLine":25,"endColumn":33},{"ruleId":"227","severity":1,"message":"287","line":27,"column":11,"nodeType":"229","messageId":"230","endLine":27,"endColumn":24},{"ruleId":"227","severity":1,"message":"288","line":30,"column":12,"nodeType":"229","messageId":"230","endLine":30,"endColumn":18},{"ruleId":"227","severity":1,"message":"289","line":30,"column":20,"nodeType":"229","messageId":"230","endLine":30,"endColumn":29},{"ruleId":"227","severity":1,"message":"290","line":32,"column":11,"nodeType":"229","messageId":"230","endLine":32,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":38,"column":14,"nodeType":"245","messageId":"246","endLine":38,"endColumn":16},{"ruleId":"232","severity":1,"message":"291","line":43,"column":8,"nodeType":"234","endLine":43,"endColumn":10,"suggestions":"292"},{"ruleId":"227","severity":1,"message":"267","line":1,"column":57,"nodeType":"229","messageId":"230","endLine":1,"endColumn":72},{"ruleId":"232","severity":1,"message":"293","line":33,"column":8,"nodeType":"234","endLine":33,"endColumn":26,"suggestions":"294"},{"ruleId":"295","severity":1,"message":"296","line":36,"column":1,"nodeType":"297","messageId":"246","endLine":38,"endColumn":4},{"ruleId":"232","severity":1,"message":"298","line":72,"column":8,"nodeType":"234","endLine":72,"endColumn":49,"suggestions":"299"},{"ruleId":"232","severity":1,"message":"300","line":103,"column":7,"nodeType":"234","endLine":103,"endColumn":66,"suggestions":"301"},{"ruleId":"239","replacedBy":"302"},{"ruleId":"241","replacedBy":"303"},{"ruleId":"227","severity":1,"message":"304","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":14},{"ruleId":"227","severity":1,"message":"285","line":12,"column":9,"nodeType":"229","messageId":"230","endLine":12,"endColumn":21},{"ruleId":"227","severity":1,"message":"305","line":1,"column":8,"nodeType":"229","messageId":"230","endLine":1,"endColumn":13},{"ruleId":"227","severity":1,"message":"306","line":1,"column":16,"nodeType":"229","messageId":"230","endLine":1,"endColumn":24},{"ruleId":"227","severity":1,"message":"228","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":17},{"ruleId":"227","severity":1,"message":"305","line":1,"column":8,"nodeType":"229","messageId":"230","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"308","line":33,"column":13,"nodeType":"309","messageId":"310","endLine":33,"endColumn":19},{"ruleId":"227","severity":1,"message":"311","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":27},{"ruleId":"243","severity":1,"message":"244","line":32,"column":60,"nodeType":"245","messageId":"246","endLine":32,"endColumn":62},{"ruleId":"243","severity":1,"message":"244","line":37,"column":20,"nodeType":"245","messageId":"246","endLine":37,"endColumn":22},{"ruleId":"312","severity":1,"message":"313","line":45,"column":17,"nodeType":"314","endLine":45,"endColumn":146},{"ruleId":"243","severity":1,"message":"244","line":45,"column":32,"nodeType":"245","messageId":"246","endLine":45,"endColumn":34},{"ruleId":"243","severity":1,"message":"244","line":55,"column":79,"nodeType":"245","messageId":"246","endLine":55,"endColumn":81},{"ruleId":"312","severity":1,"message":"313","line":55,"column":108,"nodeType":"314","endLine":55,"endColumn":168},{"ruleId":"239","replacedBy":"315"},{"ruleId":"241","replacedBy":"316"},{"ruleId":"251","severity":1,"message":"252","line":54,"column":5,"nodeType":"253","messageId":"254","endLine":61,"endColumn":6},{"ruleId":"317","severity":1,"message":"318","line":67,"column":55,"nodeType":"319","messageId":"320","endLine":67,"endColumn":57},{"ruleId":"251","severity":1,"message":"252","line":69,"column":9,"nodeType":"253","messageId":"254","endLine":135,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":102,"column":21,"nodeType":"253","messageId":"254","endLine":115,"endColumn":22},{"ruleId":"317","severity":1,"message":"318","line":148,"column":37,"nodeType":"319","messageId":"320","endLine":148,"endColumn":39},{"ruleId":"243","severity":1,"message":"279","line":150,"column":68,"nodeType":"245","messageId":"246","endLine":150,"endColumn":70},{"ruleId":"239","replacedBy":"321"},{"ruleId":"241","replacedBy":"322"},{"ruleId":"227","severity":1,"message":"323","line":15,"column":9,"nodeType":"229","messageId":"230","endLine":15,"endColumn":20},{"ruleId":"232","severity":1,"message":"324","line":29,"column":7,"nodeType":"234","endLine":29,"endColumn":16,"suggestions":"325"},{"ruleId":"243","severity":1,"message":"244","line":38,"column":18,"nodeType":"245","messageId":"246","endLine":38,"endColumn":20},{"ruleId":"227","severity":1,"message":"326","line":9,"column":7,"nodeType":"229","messageId":"230","endLine":9,"endColumn":13},{"ruleId":"243","severity":1,"message":"244","line":12,"column":54,"nodeType":"245","messageId":"246","endLine":12,"endColumn":56},{"ruleId":"227","severity":1,"message":"236","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"327","line":6,"column":12,"nodeType":"229","messageId":"230","endLine":6,"endColumn":28},{"ruleId":"227","severity":1,"message":"328","line":6,"column":30,"nodeType":"229","messageId":"230","endLine":6,"endColumn":49},{"ruleId":"239","replacedBy":"329"},{"ruleId":"241","replacedBy":"330"},{"ruleId":"227","severity":1,"message":"305","line":1,"column":8,"nodeType":"229","messageId":"230","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"331","line":29,"column":8,"nodeType":"234","endLine":29,"endColumn":13,"suggestions":"332"},{"ruleId":"232","severity":1,"message":"333","line":50,"column":8,"nodeType":"234","endLine":50,"endColumn":13,"suggestions":"334"},{"ruleId":"312","severity":1,"message":"313","line":21,"column":21,"nodeType":"314","endLine":21,"endColumn":121},{"ruleId":"312","severity":1,"message":"313","line":22,"column":21,"nodeType":"314","endLine":22,"endColumn":124},{"ruleId":"227","severity":1,"message":"335","line":4,"column":9,"nodeType":"229","messageId":"230","endLine":4,"endColumn":21},"no-unused-vars","'_uniqueId' is defined but never used.","Identifier","unusedVar","'globalState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["336"],"'useEffect' is defined but never used.","'generateInputs' is defined but never used.","'unit' is assigned a value but never used.","no-native-reassign",["337"],"no-negated-in-lhs",["338"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["337"],["338"],"'hasButton' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["340"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression",["337"],["338"],"'maxLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dragPos' and 'reveredRemap'. Either include them or remove the dependency array.",["341"],"'useLayoutEffect' is defined but never used.","'payloadGenerator' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["344"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["346"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setDefaultTexture' is defined but never used.","'id' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'initialRender' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'payload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'input', 'label', 'mainProperty', and 'type'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["348"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["349"],"React Hook useEffect has a missing dependency: 'globalState.MaterialPorperties'. Either include it or remove the dependency array.",["350"],["337"],["338"],"'Switch' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["337"],["338"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["337"],["338"],"'colorSlider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inputid' and 'progress'. Either include them or remove the dependency array.",["351"],"'reload' is assigned a value but never used.","'legacyCodeLoader' is assigned a value but never used.","'setLegacyCodeLoader' is assigned a value but never used.",["337"],["338"],"React Hook useEffect has a missing dependency: 'setProp'. Either include it or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["352"],"React Hook useEffect has missing dependencies: 'prop' and 'setProp'. Either include them or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"'TextureTypes' is defined but never used.",{"desc":"354","fix":"355"},"no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"356","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [WorkSpaceRef, dispatch]",{"range":"385","text":"386"},"Update the dependencies array to be: [progress, propName]",{"range":"387","text":"388"},{"range":"389","text":"388"},"Update the dependencies array to be: [dragPos, progress, reveredRemap]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"394","text":"395"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"396","text":"397"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"398","text":"399"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"400","text":"401"},"Update the dependencies array to be: [input, label, mainProperty, type]",{"range":"402","text":"403"},"Update the dependencies array to be: [ref, globalState, dispatch]",{"range":"404","text":"405"},"Update the dependencies array to be: [globalState, globalState.MetaData.activeTexturePopup]",{"range":"406","text":"407"},"Update the dependencies array to be: [activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",{"range":"408","text":"409"},"Update the dependencies array to be: [inputid, progress, toInput]",{"range":"410","text":"411"},"Update the dependencies array to be: [ref, setProp]",{"range":"412","text":"413"},"Update the dependencies array to be: [prop, ref, setProp]",{"range":"414","text":"415"},[1153,1167],"[WorkSpaceRef, dispatch]",[1414,1424],"[progress, propName]",[2018,2028],[1366,1376],"[dragPos, progress, reveredRemap]",[1554,1556],"[dispatch, newId, propName]",[2386,2397],"[dispatch, globalState, id, openPopup, path, propName]",[2697,2707],"[dispatch, id, path, progress]",[2850,2891],"[globalState.MetaData.activeTexturePopup, id, propName]",[3427,3442],"[progress, max, maximum]",[1306,1308],"[input, label, mainProperty, type]",[1199,1217],"[ref, globalState, dispatch]",[2692,2733],"[globalState, globalState.MetaData.activeTexturePopup]",[3752,3811],"[activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",[802,811],"[inputid, progress, toInput]",[829,834],"[ref, setProp]",[1336,1341],"[prop, ref, setProp]"]