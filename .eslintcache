[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInputByPercentage.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\RangeInput.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx":"16"},{"size":8302,"mtime":1610626504004,"results":"17","hashOfConfig":"18"},{"size":6870,"mtime":1610637655346,"results":"19","hashOfConfig":"18"},{"size":5190,"mtime":1610362870507,"results":"20","hashOfConfig":"18"},{"size":5651,"mtime":1610619176640,"results":"21","hashOfConfig":"18"},{"size":5950,"mtime":1610619286455,"results":"22","hashOfConfig":"18"},{"size":9415,"mtime":1610631002807,"results":"23","hashOfConfig":"18"},{"size":2588,"mtime":1610359212155,"results":"24","hashOfConfig":"18"},{"size":2723,"mtime":1610035759123,"results":"25","hashOfConfig":"18"},{"size":8115,"mtime":1610626144177,"results":"26","hashOfConfig":"18"},{"size":2259,"mtime":1610627019331,"results":"27","hashOfConfig":"18"},{"size":914,"mtime":1610630930783,"results":"28","hashOfConfig":"18"},{"size":718,"mtime":1610114473846,"results":"29","hashOfConfig":"18"},{"size":197,"mtime":1610548403904,"results":"30","hashOfConfig":"18"},{"size":6117,"mtime":1610552578127,"results":"31","hashOfConfig":"18"},{"size":1224,"mtime":1610035606263,"results":"32","hashOfConfig":"18"},{"size":776,"mtime":1610362259073,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11grfy6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx",["72","73","74","75"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["76","77","78","79","80","81","82","83","84","85"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["86","87","88","89","90","91","92","93","94","95","96"],"import React, { useEffect, useState, useContext, useRef, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nimport {TextureTypes, defaultImages} from \"../TestData/DefaultData\"\r\n\r\nimport {payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport Slider from \"../components/Slider\"\r\nimport SliderParamProp from \"../components/Slider_Param_Prop\"\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nimport ColoredSlider from \"../components/ColoredSlider\"\r\n\r\n\r\nfunction TextSlider(props){\r\n    const {\r\n        id,\r\n        active, \r\n        decimal,\r\n        maximum,\r\n        minimum,\r\n        unit,\r\n        labelType,\r\n        hasButton = true,\r\n        emptyButtonSpace,\r\n        path\r\n    \r\n    } = props\r\n   \r\n    const propName = props.propName || \"Parameter\"\r\n    const colorSlider = props.colorSlider || false\r\n\r\n    const [progress, setProgress]= useState(0)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [max, setMax] = useState(100)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [offset, setOffset] = useState(0)\r\n\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n\r\n    const sliderRef = useRef(null)\r\n\r\n    const newId =  id ? id : uuidv4()\r\n   \r\n    useEffect(() => {\r\n        \r\n        dispatch({type: \"ADD_ONE_PROP\", payload:{\r\n            id: newId,\r\n            name: propName,\r\n            textureTypes: TextureTypes(),\r\n            images: defaultImages\r\n        }})     \r\n\r\n       \r\n        \r\n   \r\n    }, [])\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        const globalStateCopy = globalState\r\n\r\n       if(path){\r\n           const loadEditedProperties = globalState.MaterialPorperties[path.activeProperty].textureTypes[path.activeTexture].tabTypes[path.activeTab]\r\n           const editedPropertyProgress = loadEditedProperties.properties.filter(x => x.id === id)[0]\r\n           console.log(editedPropertyProgress.progress, editedPropertyProgress.id)\r\n           setProgress(editedPropertyProgress.progress)\r\n       }\r\n        \r\n        if(globalStateCopy.MaterialPorperties.length > 0 && id === undefined){\r\n           \r\n            dispatch({type: \"ADD_ACTIVE_MATERIAL_POPUP\", payload: {\r\n                id: globalStateCopy.MaterialPorperties.filter(x => x.name == propName)[0].id\r\n            }})\r\n        }\r\n            \r\n        \r\n    }, [openPopup])\r\n\r\n    useEffect(() => {\r\n        if(id !== undefined && progress > 0){\r\n            console.log(\"UPDATE\")\r\n            dispatch({type: \"UPDATE_POPUP_PROPERTY\", payload: {\r\n                path: path,\r\n                id: id,\r\n                progress: progress\r\n            }})\r\n        }\r\n    }, [progress])\r\n\r\n    useEffect(() => {\r\n        if(globalState.MetaData.activeTexturePopup === id) {\r\n            console.log(propName)\r\n        }\r\n    }, [globalState.MetaData.activeTexturePopup])\r\n\r\n    useEffect(() => {\r\n        if(globalState.MetaData.offsetY){\r\n            setOffset(globalState.MetaData.offsetY)\r\n        }\r\n    }, [globalState.MetaData.offsetY])\r\n\r\n    useEffect(() => {\r\n        if(active !== undefined){\r\n            setDisabled(!active)\r\n        }\r\n        if(maximum !== undefined){\r\n            setMax(maximum)\r\n        }\r\n    }, [active, maximum])\r\n\r\n    useEffect(() =>{\r\n       // console.log(max, progress, minimum)\r\n        if(progress < maximum){\r\n            setMax(maximum)\r\n        }\r\n\r\n    }, [progress, max])\r\n\r\n    return (\r\n        <div ref={sliderRef} className={`${hasButton === true ? \" h_32 my-2 px-2\" : \"h_24 my-4 \"} text-almostBlack `}>\r\n        <div className={`w-full h-full  flex  justify-between `}>\r\n         \r\n            <div className={`${hasButton != false ? \"w_184\" : \"w-full\"} ${emptyButtonSpace && \"pr-4\"}`}>\r\n\r\n                <SliderParamProp \r\n                \r\n                propName={propName} \r\n                maxLimit={100} \r\n                minimum={minimum}\r\n                \r\n                labelType={labelType || \"title\"}\r\n                progress={progress} \r\n                disabled={disabled} \r\n                setMax={setMax} \r\n                setProgress={setProgress}\r\n                unit={unit}\r\n                progress={progress}\r\n                colorSlider={colorSlider}\r\n                />\r\n\r\n            {colorSlider ?\r\n\r\n            <ColoredSlider \r\n            \r\n            \r\n            setProgress={setProgress} \r\n            propName={propName} \r\n            progress={progress}  \r\n            max={maximum} \r\n            min={minimum} />\r\n\r\n            :\r\n\r\n            <Slider \r\n            offset={offset}   \r\n            hasButton={hasButton != undefined ? hasButton : true} \r\n            setProgress={setProgress} \r\n            disabled={disabled} \r\n            progress={progress} \r\n            max={max} \r\n            maxLimit={100}\r\n            min={minimum}\r\n            decimal={decimal}/>\r\n            \r\n            }\r\n               \r\n\r\n            </div>\r\n               {hasButton && !emptyButtonSpace && <TextureButton openPopup={openPopup} setOpenPopup={setOpenPopup} /> }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextSlider",["97","98"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { useEffect, useState, useRef, useContext, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport DownArrow from \"../img/Symbols/Sprites/ArrowDown.svg\"\r\n\r\nimport {generateInputs, payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport colorPicker from \"../img/Symbols/Sprites/PipetteColor.svg\"\r\n\r\nimport Plus from \"../img/Symbols/Sprites/Plus.svg\"\r\n\r\nimport ColorPlaceholder from \"../img/colorPlaceholder.png\"\r\n\r\nimport Link from \"../img/Symbols/Sprites/Link.svg\"\r\nimport Unlink from \"../img/Symbols/Sprites/Unlink.svg\"\r\n\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nimport {AnisotropyDefaults} from \"../TestData/DefaultData\"\r\n\r\n\r\nimport {TextureTypes, defaultImages} from \"../TestData/DefaultData\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Dropdown from \"../components/dropdown\"\r\n\r\nfunction LabeledInput(props) {\r\n    const {\r\n        id,\r\n        label,\r\n        labelType,\r\n        input,\r\n        type,\r\n        icon,\r\n        path,\r\n        plus,\r\n        hasButton,\r\n        buttonClick\r\n    } = props\r\n    const mainProperty = props.mainProperty !== undefined ? props.mainProperty : true\r\n    const [inputs, setInputs] = useState([])\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [localLabel, setLocalLabel] = useState(\"\")\r\n\r\n    const [buttonIcon, setButtonIcon] = useState(Plus)\r\n\r\n    const [toggleDorpdown, setToggleDropdown] = useState(false)\r\n\r\n    const payload = payloadGenerator(label)\r\n   \r\n   \r\n    const newId =  id ? id : uuidv4()\r\n\r\n    useEffect(()=>{\r\n        console.log(mainProperty)\r\n        type == \"colorPicker\" ? setLocalLabel(input.iterable[0].label) : setLocalLabel(label)\r\n       \r\n        switch (icon) {\r\n            \r\n            case \"picker\":\r\n                setButtonIcon(colorPicker)\r\n                break;\r\n            case \"dropdown\":\r\n                setButtonIcon(DownArrow)\r\n                break;\r\n            case \"solid\": \r\n                setButtonIcon(ColorPlaceholder)\r\n                break;\r\n            case \"link\":\r\n                setButtonIcon(Link)\r\n                break;\r\n            case \"empty\": \r\n                setButtonIcon(Plus)\r\n                break;\r\n            default:\r\n                setButtonIcon(Plus)\r\n        }\r\n\r\n        dispatch({type: \"ADD_ONE_PROP\", payload:{\r\n            id: newId,\r\n            name: label,\r\n            textureTypes: TextureTypes(),\r\n            images: defaultImages\r\n        }}) \r\n\r\n        setInputs(generateInputs(input, type || null))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const globalStateCopy = globalState\r\n\r\n       if(path){\r\n           const loadEditedProperties = globalState.MaterialPorperties[path.activeProperty].textureTypes[path.activeTexture].tabTypes[path.activeTab]\r\n           const editedPropertyProgress = loadEditedProperties.properties.filter(x => x.id === id)[0]\r\n           console.log(editedPropertyProgress.progress, editedPropertyProgress.id)\r\n           //setProgress(editedPropertyProgress.progress)\r\n       }\r\n        \r\n        if(globalStateCopy.MaterialPorperties.length > 0 && id === undefined && openPopup && (icon === undefined || icon === \"empty\")){\r\n         \r\n            dispatch({type: \"ADD_ACTIVE_MATERIAL_POPUP\", payload: {\r\n                id: globalStateCopy.MaterialPorperties.filter(x => x.name == label)[0].id\r\n            }})\r\n        }\r\n        else if(openPopup && icon === \"dropdown\"){\r\n            setToggleDropdown(!toggleDorpdown)\r\n        }else if( icon === \"link\"){\r\n            if(openPopup){\r\n                setButtonIcon(Unlink)\r\n            }else{\r\n                setButtonIcon(Link)\r\n            }\r\n        }\r\n            \r\n        \r\n    }, [openPopup])\r\n\r\n\r\n\r\n    return(\r\n        <div className={`w-full h_24 flex ${ type=== \"colorPicker\" ? \"mt-5\" : \"my-2\"} ${mainProperty ? \"my-2\" : \"my-4\"} text-almostBlack  `}>\r\n            <div className={` w-full flex items-center justify-between relative`}>\r\n               \r\n               {type !== \"colorPicker\" ?\r\n               \r\n               \r\n               <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"} normal-font`}>{localLabel}</p>\r\n               \r\n            :\r\n            <div   \r\n            className={` bg-lightGrey h-full w_48 flex justify-center items-center normal-font`}>\r\n            { localLabel} \r\n            <img className=\"\" src={DownArrow} />\r\n            </div>\r\n         \r\n            }\r\n                    \r\n\r\n        <div className={`flex ${type === \"buttonless\" && \"pr-8\"}`}>\r\n                <div className=\"flex\">\r\n\r\n                    {inputs && inputs.map((inp) => {\r\n                        return inp\r\n                    })}\r\n\r\n                </div>\r\n                {hasButton && <TextureButton \r\n                type={icon === undefined || icon !== \"dropdown\" && \"transparent\"}\r\n                openPopup={openPopup} \r\n                className={`${!mainProperty ? \"ml-1\" : \"ml-2\" }`} \r\n                img={buttonIcon} \r\n                alt=\"\" \r\n                setOpenPopup={setOpenPopup}/>}\r\n                {icon === \"dropdown\" && <Dropdown \r\n                setToggleDropdown={setToggleDropdown} \r\n                list={AnisotropyDefaults} \r\n                defaultState={toggleDorpdown} \r\n                style={{marginTop: \"-4px\"}}\r\n                className={`absolute z-10 w-28 bg-almostBlack text-almostWhite ${!toggleDorpdown && \"hidden\"}`}/>}\r\n        </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledInput",["111","112"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx",["113","114","115","116","117","118"],"import React from \"react\"\r\nimport TextSlider  from \"../containers/TextSlider\"\r\nimport Input from \"../components/Input\"\r\nimport RangeInput from \"../components/RangeInput\"\r\nimport LabeledSwitch from \"../containers/LabeledSwitch\"\r\nimport LabeledInput from \"../containers/LabeledInput\"\r\n\r\nimport {TextureTypes} from \"./DefaultData\"\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport Switch from \"../components/Switch\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultInputs = {\r\n    empty: () => {\r\n        return {\r\n            iterable: [],\r\n            unit: undefined\r\n        }\r\n    },\r\n    single: (unit = null) => {\r\n       return {\r\n            iterable: [0],\r\n            unit: unit \r\n        }\r\n    },\r\n    double: (unit = null, iterable) => {\r\n        return {\r\n            iterable: iterable ? [\"X\", \"Y\"] : [0, 0],\r\n            unit: unit \r\n        }\r\n    },\r\n    triple: (unit = null, iterable) => {\r\n        return {\r\n            iterable: iterable ? [\"X\", \"Y\", \"Z\"] : [0, 0, 0],\r\n            unit: unit \r\n        }\r\n    },\r\n    color: () => {\r\n        return {\r\n            iterable: [\r\n                {\r\n                    label: \"RGB\",\r\n                    default: [255,255,255]\r\n                },\r\n                {\r\n                    label: \"HSB\",\r\n                    default: [360, 100, 100]\r\n                },\r\n                {\r\n                    label: \"HEX\",\r\n                    default: [\"#fffff\"]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport  const newSwitch = (swt) => {\r\n                  \r\n    switch (swt.type){\r\n        case \"single\": \r\n            return defaultInputs.single()\r\n\r\n        case \"double\":\r\n            return defaultInputs.double(null, true)\r\n  \r\n    }\r\n}\r\n\r\nexport const generateProperties = (listOfProperties, path) => {\r\n    let propertyArray = []\r\n    console.log(listOfProperties, path)\r\n    listOfProperties.properties.map((property, index) =>{\r\n        \r\n        switch(property.type) {\r\n            case \"slider\":\r\n                propertyArray.push( <TextSlider \r\n                    id={property.id}\r\n                    key={property.id} \r\n                    path={path}\r\n                    propName={property.label} \r\n                    active={true} \r\n                    decimal={false} \r\n                    colorSlider={property.colorSlider || false}\r\n                    maximum={property.max} \r\n                    minimum={property.min}\r\n                    labelType={\"normal\"}\r\n                    unit={null} \r\n                    \r\n                    hasButton={false}/>)\r\n                    break;\r\n            case \"switch\":\r\n               \r\n              console.log(newSwitch(property.input), property.input , \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\")\r\n\r\n                    propertyArray.push(\r\n                        <LabeledSwitch\r\n                            key={property.id}\r\n                            label={property.label}\r\n                            labelType={\"normal\"}\r\n                            input={newSwitch(property.input)}\r\n                        />\r\n                    )\r\n\r\n                    break;\r\n            case \"number\":\r\n                const newNumberInput = (input) => {\r\n                    switch (input.type){\r\n                        case \"single\":\r\n                            return defaultInputs.single(input.unit, input.iterable)\r\n                       \r\n                        case \"double\":\r\n                            return defaultInputs.double(input.unit, input.iterable)\r\n                        \r\n                        case \"triple\": \r\n                            return defaultInputs.triple(input.unit, input.iterable)\r\n\r\n                        case \"colorPicker\":\r\n                            return defaultInputs.color()\r\n                       \r\n                    }\r\n                }\r\n               \r\n                console.log(\"HERE\")\r\n                propertyArray.push(\r\n                \r\n                <LabeledInput \r\n                key={property.id}\r\n                id={_uniqueId(\"LabeledInput-\")}  \r\n                label={property.label}  \r\n                labelType={`${property.labelType}`}    \r\n                hasButton={property.hasButton}  \r\n                type={property.input.type}\r\n                mainProperty={false}\r\n                input={newNumberInput(property.input)}   />\r\n                \r\n                )\r\n\r\n                    break;\r\n            \r\n        }\r\n    })\r\n    return propertyArray\r\n}\r\n\r\n\r\nexport const generateInputs = (inputs, type = null) => {\r\n    \r\n    const inputIterable = inputs.iterable || [0]\r\n\r\n    const inputArray = []   \r\n\r\n    console.log(inputIterable)\r\n    inputIterable.map((elem, index) => {\r\n        \r\n        const newiterable = (inputs.iterable && inputs.iterable[0] != 0) ? inputs.iterable[index] : \"\"\r\n        const newUnit = (inputs.iterable && inputs.unit != null) ? inputs.unit : \"\"\r\n\r\n        const newId = uuidv4()\r\n\r\n        switch(type) {\r\n            case \"switch\": \r\n            inputArray.push(<Switch key={newId} id={newId} axis={newiterable} unit={newUnit}  />)\r\n            break;\r\n\r\n            case \"colorPicker\": \r\n            console.log(\"COLORPICKER\")\r\n           \r\n            inputArray.push(<Input key={newId} id={newId} unit={null} value={inputIterable[0].default[index]} color={true}/>)\r\n\r\n            break;\r\n            case \"rangeInput\":\r\n\r\n            inputArray.push(<RangeInput key={newId} iterable={newiterable} unit={newUnit} />)\r\n\r\n            break;\r\n\r\n            default:\r\n            inputArray.push(<Input key={newId} iterable={newiterable} unit={newUnit} />)\r\n            break;\r\n        }\r\n\r\n    })\r\n    \r\n    return inputArray\r\n}\r\n\r\n\r\nexport const payloadGenerator = (type) => {\r\n    const newTabTypes = TextureTypes\r\n  \r\n    return {\r\n      id: _uniqueId(`${type}-`),\r\n      type: type,\r\n      TextureTypes: newTabTypes\r\n    }\r\n  }\r\n\r\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js",["119","120","121","122","123","124","125"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx",["126","127","128"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx",["129","130","131","132"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInputByPercentage.jsx",["133","134","135","136","137","138"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\nimport { parse } from \"postcss\"\r\n\r\n\r\nfunction GrowingInputByPercentage(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n    const [update, setUpdate] = useState(0)\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n    const [editableText, setEditableText] = useState(false)\r\n    const [indicator, setIndicator] = useState(false)\r\n    \r\n    const inputRef = useRef(null)\r\n\r\n\r\n\r\n    let limit = 0.1\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\n    let num = 0\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(multiplyer > 0) {\r\n            setGrowIcon(ArrowGrowUp)\r\n        }else{\r\n            setGrowIcon(ArrowGrowDown)\r\n        }\r\n\r\n      \r\n\r\n\r\n       \r\n        if(dynamicValue === false){\r\n            setDynamicValue(0 + unit )\r\n        }else{\r\n            const processedDynamicValue = parseInt(dynamicValue.split(`${unit}`).join(\"\"))\r\n            \r\n            if(processedDynamicValue === 0) {\r\n                setDynamicValue(Math.ceil(2 * multiplyer) + unit)\r\n            }else{\r\n               if(multiplyer > 0.005){\r\n                    setDynamicValue(Math.ceil(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n               }else if (multiplyer < -0.005) {\r\n                     setDynamicValue(Math.floor(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n                \r\n               }else{\r\n                    setDynamicValue(processedDynamicValue + unit)    \r\n               }\r\n            }\r\n            \r\n        }\r\n        \r\n    }, [multiplyer, update])\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n      \r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location, dynamicData) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - location\r\n           let changingFactor = map_float_range(difference, -100, 100, -limit, limit)\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            counter++\r\n           \r\n           \r\n            if(changingFactor > 0){\r\n\r\n                if(changingFactor > limit){\r\n                    return limit\r\n                }else{\r\n                    return changingFactor\r\n                }\r\n\r\n            }else{\r\n                \r\n                if(changingFactor < -limit){\r\n                    return limit * -1\r\n                }else{\r\n                   return changingFactor\r\n                }\r\n\r\n            }\r\n\r\n            \r\n           }\r\n           setTimeout(() => {\r\n              \r\n            //console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            //num += parseInt( adjustChange() )\r\n            setMultiplyer(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    function pauseEvent(e){\r\n        if(e.stopPropagation) e.stopPropagation();\r\n        if(e.preventDefault) e.preventDefault();\r\n        e.cancelBubble=true;\r\n        e.returnValue=false;\r\n        return false;\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        if(selection === \"\") {\r\n            inputRef.current.select()\r\n            setEditableText(true)\r\n        }else{\r\n            setEditableText(false)\r\n        }\r\n        console.log(selection)\r\n      \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n     \r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n       \r\n        \r\n        dragOver = false\r\n\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        if(selection === \"\") {\r\n      \r\n        function infinity() {\r\n           \r\n            if(!dragOver ){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                  // e.target.select()\r\n                    handleDrag(userLocation)\r\n                    \r\n                   // console.log(\"down\")\r\n                    if(counter % 2 === 0){\r\n                        setUpdate(update+ 1)\r\n                       }else{\r\n                        setUpdate(false)\r\n                       }\r\n                      \r\n                    infinity()\r\n                }, 100)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            infinity()\r\n            setEditableText(false)\r\n        }, 500)\r\n    }\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={pauseEvent}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={pauseEvent}\r\n            onFocus={() => {setIndicator(true)}}\r\n            onBlur={() => {setIndicator(false)}}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            { hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n            {(!hover && indicator) &&\r\n              <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n              <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n          </div>}\r\n            \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GrowingInputByPercentage","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx",["139","140","141"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["142"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\RangeInput.jsx",["143","144","145","146","147","148","149","150","151"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["152","153"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx",["154"],{"ruleId":"155","severity":1,"message":"156","line":40,"column":9,"nodeType":"157","messageId":"158","endLine":40,"endColumn":12},{"ruleId":"159","severity":1,"message":"160","line":76,"column":8,"nodeType":"161","endLine":76,"endColumn":28,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":272,"column":17,"nodeType":"165","endLine":272,"endColumn":72},{"ruleId":"163","severity":1,"message":"164","line":281,"column":15,"nodeType":"165","endLine":281,"endColumn":70},{"ruleId":"155","severity":1,"message":"166","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":24},{"ruleId":"155","severity":1,"message":"167","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":19},{"ruleId":"155","severity":1,"message":"168","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":21},{"ruleId":"155","severity":1,"message":"169","line":26,"column":25,"nodeType":"157","messageId":"158","endLine":26,"endColumn":33},{"ruleId":"155","severity":1,"message":"170","line":34,"column":12,"nodeType":"157","messageId":"158","endLine":34,"endColumn":21},{"ruleId":"155","severity":1,"message":"171","line":37,"column":12,"nodeType":"157","messageId":"158","endLine":37,"endColumn":28},{"ruleId":"155","severity":1,"message":"172","line":43,"column":9,"nodeType":"157","messageId":"158","endLine":43,"endColumn":14},{"ruleId":"159","severity":1,"message":"173","line":63,"column":8,"nodeType":"161","endLine":63,"endColumn":20,"suggestions":"174"},{"ruleId":"159","severity":1,"message":"175","line":122,"column":4,"nodeType":"161","endLine":122,"endColumn":6,"suggestions":"176"},{"ruleId":"163","severity":1,"message":"164","line":217,"column":17,"nodeType":"165","endLine":217,"endColumn":72},{"ruleId":"155","severity":1,"message":"177","line":1,"column":58,"nodeType":"157","messageId":"158","endLine":1,"endColumn":73},{"ruleId":"155","severity":1,"message":"178","line":10,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":25},{"ruleId":"159","severity":1,"message":"179","line":61,"column":8,"nodeType":"161","endLine":61,"endColumn":10,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":78,"column":75,"nodeType":"183","messageId":"184","endLine":78,"endColumn":77},{"ruleId":"159","severity":1,"message":"185","line":83,"column":8,"nodeType":"161","endLine":83,"endColumn":19,"suggestions":"186"},{"ruleId":"159","severity":1,"message":"187","line":94,"column":8,"nodeType":"161","endLine":94,"endColumn":18,"suggestions":"188"},{"ruleId":"159","severity":1,"message":"189","line":100,"column":8,"nodeType":"161","endLine":100,"endColumn":49,"suggestions":"190"},{"ruleId":"159","severity":1,"message":"191","line":123,"column":8,"nodeType":"161","endLine":123,"endColumn":23,"suggestions":"192"},{"ruleId":"181","severity":1,"message":"193","line":129,"column":42,"nodeType":"183","messageId":"184","endLine":129,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":143,"column":17,"nodeType":"196","endLine":143,"endColumn":36},{"ruleId":"181","severity":1,"message":"193","line":162,"column":34,"nodeType":"183","messageId":"184","endLine":162,"endColumn":36},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"155","severity":1,"message":"201","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":44},{"ruleId":"155","severity":1,"message":"177","line":1,"column":58,"nodeType":"157","messageId":"158","endLine":1,"endColumn":73},{"ruleId":"155","severity":1,"message":"202","line":36,"column":9,"nodeType":"157","messageId":"158","endLine":36,"endColumn":13},{"ruleId":"155","severity":1,"message":"203","line":38,"column":9,"nodeType":"157","messageId":"158","endLine":38,"endColumn":20},{"ruleId":"155","severity":1,"message":"204","line":50,"column":11,"nodeType":"157","messageId":"158","endLine":50,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":57,"column":14,"nodeType":"183","messageId":"184","endLine":57,"endColumn":16},{"ruleId":"159","severity":1,"message":"205","line":88,"column":8,"nodeType":"161","endLine":88,"endColumn":10,"suggestions":"206"},{"ruleId":"181","severity":1,"message":"182","line":103,"column":75,"nodeType":"183","messageId":"184","endLine":103,"endColumn":77},{"ruleId":"159","severity":1,"message":"207","line":117,"column":8,"nodeType":"161","endLine":117,"endColumn":19,"suggestions":"208"},{"ruleId":"163","severity":1,"message":"164","line":134,"column":13,"nodeType":"165","endLine":134,"endColumn":49},{"ruleId":"209","severity":1,"message":"210","line":149,"column":42,"nodeType":"211","messageId":"212","endLine":149,"endColumn":44},{"ruleId":"209","severity":1,"message":"210","line":149,"column":65,"nodeType":"211","messageId":"212","endLine":149,"endColumn":67},{"ruleId":"197","replacedBy":"213"},{"ruleId":"199","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":61,"column":5,"nodeType":"217","messageId":"218","endLine":68,"endColumn":6},{"ruleId":"219","severity":1,"message":"220","line":74,"column":55,"nodeType":"221","messageId":"222","endLine":74,"endColumn":57},{"ruleId":"215","severity":1,"message":"216","line":76,"column":9,"nodeType":"217","messageId":"218","endLine":142,"endColumn":10},{"ruleId":"215","severity":1,"message":"216","line":109,"column":21,"nodeType":"217","messageId":"218","endLine":122,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":155,"column":37,"nodeType":"221","messageId":"222","endLine":155,"endColumn":39},{"ruleId":"181","severity":1,"message":"193","line":157,"column":68,"nodeType":"183","messageId":"184","endLine":157,"endColumn":70},{"ruleId":"155","severity":1,"message":"223","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":17},{"ruleId":"155","severity":1,"message":"224","line":26,"column":8,"nodeType":"157","messageId":"158","endLine":26,"endColumn":18},{"ruleId":"155","severity":1,"message":"225","line":27,"column":8,"nodeType":"157","messageId":"158","endLine":27,"endColumn":20},{"ruleId":"155","severity":1,"message":"226","line":34,"column":10,"nodeType":"157","messageId":"158","endLine":34,"endColumn":21},{"ruleId":"159","severity":1,"message":"227","line":47,"column":6,"nodeType":"161","endLine":47,"endColumn":20,"suggestions":"228"},{"ruleId":"163","severity":1,"message":"164","line":73,"column":8,"nodeType":"165","endLine":73,"endColumn":86},{"ruleId":"194","severity":1,"message":"195","line":110,"column":128,"nodeType":"196","endLine":110,"endColumn":145},{"ruleId":"155","severity":1,"message":"229","line":15,"column":9,"nodeType":"157","messageId":"158","endLine":15,"endColumn":20},{"ruleId":"159","severity":1,"message":"230","line":29,"column":7,"nodeType":"161","endLine":29,"endColumn":16,"suggestions":"231"},{"ruleId":"181","severity":1,"message":"182","line":38,"column":18,"nodeType":"183","messageId":"184","endLine":38,"endColumn":20},{"ruleId":"155","severity":1,"message":"232","line":13,"column":9,"nodeType":"157","messageId":"158","endLine":13,"endColumn":18},{"ruleId":"155","severity":1,"message":"233","line":15,"column":9,"nodeType":"157","messageId":"158","endLine":15,"endColumn":17},{"ruleId":"155","severity":1,"message":"234","line":21,"column":12,"nodeType":"157","messageId":"158","endLine":21,"endColumn":24},{"ruleId":"159","severity":1,"message":"235","line":55,"column":8,"nodeType":"161","endLine":55,"endColumn":18,"suggestions":"236"},{"ruleId":"155","severity":1,"message":"237","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":15},{"ruleId":"155","severity":1,"message":"238","line":26,"column":12,"nodeType":"157","messageId":"158","endLine":26,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":40,"column":9,"nodeType":"157","messageId":"158","endLine":40,"endColumn":12},{"ruleId":"159","severity":1,"message":"160","line":76,"column":8,"nodeType":"161","endLine":76,"endColumn":28,"suggestions":"239"},{"ruleId":"163","severity":1,"message":"164","line":263,"column":17,"nodeType":"165","endLine":263,"endColumn":72},{"ruleId":"163","severity":1,"message":"164","line":272,"column":15,"nodeType":"165","endLine":272,"endColumn":70},{"ruleId":"155","severity":1,"message":"240","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"241","line":29,"column":8,"nodeType":"161","endLine":29,"endColumn":13,"suggestions":"242"},{"ruleId":"159","severity":1,"message":"243","line":50,"column":8,"nodeType":"161","endLine":50,"endColumn":13,"suggestions":"244"},{"ruleId":"155","severity":1,"message":"245","line":9,"column":7,"nodeType":"157","messageId":"158","endLine":9,"endColumn":13},{"ruleId":"155","severity":1,"message":"167","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":19},{"ruleId":"155","severity":1,"message":"168","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":21},{"ruleId":"155","severity":1,"message":"246","line":22,"column":12,"nodeType":"157","messageId":"158","endLine":22,"endColumn":22},{"ruleId":"155","severity":1,"message":"247","line":22,"column":24,"nodeType":"157","messageId":"158","endLine":22,"endColumn":37},{"ruleId":"155","severity":1,"message":"248","line":32,"column":9,"nodeType":"157","messageId":"158","endLine":32,"endColumn":16},{"ruleId":"159","severity":1,"message":"249","line":48,"column":8,"nodeType":"161","endLine":48,"endColumn":15,"suggestions":"250"},{"ruleId":"155","severity":1,"message":"156","line":98,"column":13,"nodeType":"157","messageId":"158","endLine":98,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":196,"column":17,"nodeType":"165","endLine":196,"endColumn":72},{"ruleId":"163","severity":1,"message":"164","line":205,"column":15,"nodeType":"165","endLine":205,"endColumn":70},{"ruleId":"155","severity":1,"message":"240","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":33,"column":13,"nodeType":"253","messageId":"254","endLine":33,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":12,"column":54,"nodeType":"183","messageId":"184","endLine":12,"endColumn":56},"no-unused-vars","'num' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dynamicValue' and 'unit'. Either include them or remove the dependency array.","ArrayExpression",["255"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'map_float_range' is defined but never used.","'ArrowGrowUp' is defined but never used.","'ArrowGrowDown' is defined but never used.","'dispatch' is assigned a value but never used.","'indicator' is assigned a value but never used.","'inputCoordinates' is assigned a value but never used.","'limit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cursorPos', 'dynamicValue', and 'sliderCursor.style'. Either include them or remove the dependency array. You can also do a functional update 'setDynamicValue(d => ...)' if you only need 'dynamicValue' in the 'setDynamicValue' call.",["256"],"React Hook useEffect has a missing dependency: 'changeCallback'. Either include it or remove the dependency array.",["257"],"'useLayoutEffect' is defined but never used.","'payloadGenerator' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.",["258"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["262"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["263"],"no-negated-in-lhs",["264"],"'useRef' is defined but never used.","'plus' is assigned a value but never used.","'buttonClick' is assigned a value but never used.","'payload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'icon', 'input', 'label', 'mainProperty', 'newId', and 'type'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'icon', 'id', 'label', 'path', and 'toggleDorpdown'. Either include them or remove the dependency array. You can also do a functional update 'setToggleDropdown(t => ...)' if you only need 'toggleDorpdown' in the 'setToggleDropdown' call.",["266"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["263"],["264"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'_uniqueId' is defined but never used.","'RangeInput' is defined but never used.","'GrowingInput' is defined but never used.","'globalState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["267"],"'colorSlider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inputid' and 'progress'. Either include them or remove the dependency array.",["268"],"'hasButton' is assigned a value but never used.","'maxLimit' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dragPos' and 'reveredRemap'. Either include them or remove the dependency array.",["269"],"'parse' is defined but never used.","'editableText' is assigned a value but never used.",["270"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'setProp'. Either include it or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["271"],"React Hook useEffect has missing dependencies: 'prop' and 'setProp'. Either include them or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],"'reload' is assigned a value but never used.","'multiplyer' is assigned a value but never used.","'setMultiplyer' is assigned a value but never used.","'counter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'unit'. Either include it or remove the dependency array.",["273"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"274","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [dynamicValue, multiplyer, unit, update]",{"range":"307","text":"308"},"Update the dependencies array to be: [cursorPos, dynamicValue, multiplyer, sliderCursor.style]",{"range":"309","text":"310"},"Update the dependencies array to be: [changeCallback]",{"range":"311","text":"312"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"313","text":"314"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"315","text":"316"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"317","text":"318"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"319","text":"320"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, icon, input, label, mainProperty, newId, type]",{"range":"323","text":"324"},"Update the dependencies array to be: [dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",{"range":"325","text":"326"},"Update the dependencies array to be: [WorkSpaceRef, dispatch]",{"range":"327","text":"328"},"Update the dependencies array to be: [inputid, progress, toInput]",{"range":"329","text":"330"},"Update the dependencies array to be: [dragPos, progress, reveredRemap]",{"range":"331","text":"332"},{"range":"333","text":"308"},"Update the dependencies array to be: [ref, setProp]",{"range":"334","text":"335"},"Update the dependencies array to be: [prop, ref, setProp]",{"range":"336","text":"337"},"Update the dependencies array to be: [unit, value]",{"range":"338","text":"339"},[1974,1994],"[dynamicValue, multiplyer, unit, update]",[2043,2055],"[cursorPos, dynamicValue, multiplyer, sliderCursor.style]",[3974,3976],"[changeCallback]",[1593,1595],"[dispatch, newId, propName]",[2425,2436],"[dispatch, globalState, id, openPopup, path, propName]",[2736,2746],"[dispatch, id, path, progress]",[2889,2930],"[globalState.MetaData.activeTexturePopup, id, propName]",[3466,3481],"[progress, max, maximum]",[2641,2643],"[dispatch, icon, input, label, mainProperty, newId, type]",[3807,3818],"[dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",[1587,1601],"[WorkSpaceRef, dispatch]",[802,811],"[inputid, progress, toInput]",[1366,1376],"[dragPos, progress, reveredRemap]",[2083,2103],[829,834],"[ref, setProp]",[1336,1341],"[prop, ref, setProp]",[1057,1064],"[unit, value]"]