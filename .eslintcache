[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"5"},{"size":2396,"mtime":1610460351942,"results":"6","hashOfConfig":"7"},{"size":718,"mtime":1610114473846,"results":"8","hashOfConfig":"7"},{"size":995,"mtime":1610362864192,"results":"9","hashOfConfig":"7"},{"size":8810,"mtime":1610369243197,"results":"10","hashOfConfig":"7"},{"size":942,"mtime":1610362481792,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"11grfy6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["23","24"],"import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\n\r\nfunction Input(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        setDynamicValue(0)\r\n    }, [value])\r\n\r\n    const handleInputChange = (e) => {\r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n        e.target.select()\r\n\r\n\r\n    }\r\n    const handleDrag = (e) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - e.clientY\r\n           let changingFactor = parseInt(map_float_range(difference, -1000, 1000, -5, 5))\r\n           const adjustChange = () => {\r\n               console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n               if(difference > 0) {\r\n                   \r\n                    return Math.ceil(dynamicValue +  Math.pow(2, Math.log10(difference )- 1 ))\r\n               }\r\n               else if(difference < 0 ){\r\n                return  Math.floor(dynamicValue -  Math.pow(2, Math.log10(difference  * -1) - 1))\r\n               }\r\n               else{\r\n                   return dynamicValue;\r\n                    \r\n               }\r\n           }\r\n           setTimeout(() => {\r\n            console.log(adjustChange());\r\n            setDynamicValue(adjustChange() )\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    const hangleDragEnd =() => {\r\n       \r\n    }\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect} onDrag={handleDrag} ref={inputRef} value={dynamicValue} onChange={handleInputChange} defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["25"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx",["26","27"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js",["28","29","30"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":36,"column":16,"nodeType":"33","messageId":"34","endLine":36,"endColumn":30},{"ruleId":"31","severity":1,"message":"35","line":61,"column":11,"nodeType":"33","messageId":"34","endLine":61,"endColumn":24},{"ruleId":"31","severity":1,"message":"36","line":9,"column":7,"nodeType":"33","messageId":"34","endLine":9,"endColumn":13},{"ruleId":"31","severity":1,"message":"37","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":14},{"ruleId":"31","severity":1,"message":"38","line":12,"column":9,"nodeType":"33","messageId":"34","endLine":12,"endColumn":21},{"ruleId":"31","severity":1,"message":"39","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":13},{"ruleId":"31","severity":1,"message":"40","line":1,"column":16,"nodeType":"33","messageId":"34","endLine":1,"endColumn":24},{"ruleId":"31","severity":1,"message":"41","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":17},"no-unused-vars","'changingFactor' is assigned a value but never used.","Identifier","unusedVar","'hangleDragEnd' is assigned a value but never used.","'reload' is assigned a value but never used.","'Switch' is defined but never used.","'handleChange' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'_uniqueId' is defined but never used."]