[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\PopUpImageHover.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx":"16","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"17","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx":"18","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx":"19","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx":"20","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx":"21","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx":"22","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx":"23","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx":"24","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx":"25","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js":"26","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js":"27","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\useLongPress.jsx":"28","C:\\Work\\Vectary\\backup\\material_ui\\src\\context\\texturePropertyContext.jsx":"29"},{"size":718,"mtime":1610114473846,"results":"30","hashOfConfig":"31"},{"size":5190,"mtime":1610362870507,"results":"32","hashOfConfig":"31"},{"size":195,"mtime":1610125874422,"results":"33","hashOfConfig":"31"},{"size":1224,"mtime":1610035606263,"results":"34","hashOfConfig":"31"},{"size":860,"mtime":1610025191652,"results":"35","hashOfConfig":"31"},{"size":1714,"mtime":1610373492387,"results":"36","hashOfConfig":"31"},{"size":1162,"mtime":1610353544886,"results":"37","hashOfConfig":"31"},{"size":1795,"mtime":1609754441871,"results":"38","hashOfConfig":"31"},{"size":5251,"mtime":1610369303384,"results":"39","hashOfConfig":"31"},{"size":8683,"mtime":1610369279571,"results":"40","hashOfConfig":"31"},{"size":2723,"mtime":1610035759123,"results":"41","hashOfConfig":"31"},{"size":942,"mtime":1610362481792,"results":"42","hashOfConfig":"31"},{"size":1509,"mtime":1609245326458,"results":"43","hashOfConfig":"31"},{"size":827,"mtime":1610362226250,"results":"44","hashOfConfig":"31"},{"size":776,"mtime":1610362259073,"results":"45","hashOfConfig":"31"},{"size":5775,"mtime":1610380212062,"results":"46","hashOfConfig":"31"},{"size":3669,"mtime":1610023436721,"results":"47","hashOfConfig":"31"},{"size":1139,"mtime":1610098659398,"results":"48","hashOfConfig":"31"},{"size":995,"mtime":1610362864192,"results":"49","hashOfConfig":"31"},{"size":843,"mtime":1610365612070,"results":"50","hashOfConfig":"31"},{"size":3249,"mtime":1610369363567,"results":"51","hashOfConfig":"31"},{"size":532,"mtime":1609763545216,"results":"52","hashOfConfig":"31"},{"size":5635,"mtime":1610098859353,"results":"53","hashOfConfig":"31"},{"size":486,"mtime":1610024174169,"results":"54","hashOfConfig":"31"},{"size":2588,"mtime":1610359212155,"results":"55","hashOfConfig":"31"},{"size":8810,"mtime":1610369243197,"results":"56","hashOfConfig":"31"},{"size":362,"mtime":1608257534771,"results":"57","hashOfConfig":"31"},{"size":1655,"mtime":1610369892929,"results":"58","hashOfConfig":"31"},{"size":933,"mtime":1609752199673,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"11grfy6",{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["138"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["139","140"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["141","142","143","144","145","146","147","148","149","150","151"],"import React, { useEffect, useState, useContext, useRef, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nimport {TextureTypes, defaultImages} from \"../TestData/DefaultData\"\r\n\r\nimport {payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport Slider from \"../components/Slider\"\r\nimport SliderParamProp from \"../components/Slider_Param_Prop\"\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nimport ColoredSlider from \"../components/ColoredSlider\"\r\n\r\n\r\nfunction TextSlider(props){\r\n    const {\r\n        id,\r\n        active, \r\n        decimal,\r\n        maximum,\r\n        minimum,\r\n        unit,\r\n        labelType,\r\n        hasButton = true,\r\n        emptyButtonSpace,\r\n        path\r\n    \r\n    } = props\r\n   \r\n    const propName = props.propName || \"Parameter\"\r\n    const colorSlider = props.colorSlider || false\r\n\r\n    const [progress, setProgress]= useState(0)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [max, setMax] = useState(100)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [offset, setOffset] = useState(0)\r\n\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n\r\n    const sliderRef = useRef(null)\r\n\r\n    const newId =  id ? id : uuidv4()\r\n   \r\n    useEffect(() => {\r\n        \r\n        dispatch({type: \"ADD_ONE_PROP\", payload:{\r\n            id: newId,\r\n            name: propName,\r\n            textureTypes: TextureTypes(),\r\n            images: defaultImages\r\n        }})     \r\n\r\n       \r\n        \r\n   \r\n    }, [])\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        const globalStateCopy = globalState\r\n\r\n       if(path){\r\n           const loadEditedProperties = globalState.MaterialPorperties[path.activeProperty].textureTypes[path.activeTexture].tabTypes[path.activeTab]\r\n           const editedPropertyProgress = loadEditedProperties.properties.filter(x => x.id === id)[0]\r\n           console.log(editedPropertyProgress.progress, editedPropertyProgress.id)\r\n           setProgress(editedPropertyProgress.progress)\r\n       }\r\n        \r\n        if(globalStateCopy.MaterialPorperties.length > 0 && id === undefined){\r\n           \r\n            dispatch({type: \"ADD_ACTIVE_MATERIAL_POPUP\", payload: {\r\n                id: globalStateCopy.MaterialPorperties.filter(x => x.name == propName)[0].id\r\n            }})\r\n        }\r\n            \r\n        \r\n    }, [openPopup])\r\n\r\n    useEffect(() => {\r\n        if(id !== undefined && progress > 0){\r\n            console.log(\"UPDATE\")\r\n            dispatch({type: \"UPDATE_POPUP_PROPERTY\", payload: {\r\n                path: path,\r\n                id: id,\r\n                progress: progress\r\n            }})\r\n        }\r\n    }, [progress])\r\n\r\n    useEffect(() => {\r\n        if(globalState.MetaData.activeTexturePopup === id) {\r\n            console.log(propName)\r\n        }\r\n    }, [globalState.MetaData.activeTexturePopup])\r\n\r\n    useEffect(() => {\r\n        if(globalState.MetaData.offsetY){\r\n            setOffset(globalState.MetaData.offsetY)\r\n        }\r\n    }, [globalState.MetaData.offsetY])\r\n\r\n    useEffect(() => {\r\n        if(active !== undefined){\r\n            setDisabled(!active)\r\n        }\r\n        if(maximum !== undefined){\r\n            setMax(maximum)\r\n        }\r\n    }, [active, maximum])\r\n\r\n    useEffect(() =>{\r\n       // console.log(max, progress, minimum)\r\n        if(progress < maximum){\r\n            setMax(maximum)\r\n        }\r\n\r\n    }, [progress, max])\r\n\r\n    return (\r\n        <div ref={sliderRef} className={`${hasButton === true ? \" h_32 my-2 px-2\" : \"h_24 my-4 \"} text-almostBlack `}>\r\n        <div className={`w-full h-full  flex  justify-between `}>\r\n         \r\n            <div className={`${hasButton != false ? \"w_184\" : \"w-full\"} ${emptyButtonSpace && \"pr-4\"}`}>\r\n\r\n                <SliderParamProp \r\n                \r\n                propName={propName} \r\n                maxLimit={100} \r\n                minimum={minimum}\r\n                \r\n                labelType={labelType || \"title\"}\r\n                progress={progress} \r\n                disabled={disabled} \r\n                setMax={setMax} \r\n                setProgress={setProgress}\r\n                unit={unit}\r\n                progress={progress}\r\n                colorSlider={colorSlider}\r\n                />\r\n\r\n            {colorSlider ?\r\n\r\n            <ColoredSlider \r\n            \r\n            \r\n            setProgress={setProgress} \r\n            propName={propName} \r\n            progress={progress}  \r\n            max={maximum} \r\n            min={minimum} />\r\n\r\n            :\r\n\r\n            <Slider \r\n            offset={offset}   \r\n            hasButton={hasButton != undefined ? hasButton : true} \r\n            setProgress={setProgress} \r\n            disabled={disabled} \r\n            progress={progress} \r\n            max={max} \r\n            maxLimit={100}\r\n            min={minimum}\r\n            decimal={decimal}/>\r\n            \r\n            }\r\n               \r\n\r\n            </div>\r\n               {hasButton && !emptyButtonSpace && <TextureButton openPopup={openPopup} setOpenPopup={setOpenPopup} /> }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextSlider",["152","153"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],["154","155"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["156","157"],"import React from \"react\"\r\n\r\nexport const MaterialPropertyReducer =(state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ONE_PROP\":\r\n            return [\r\n               ...state,\r\n             state.filter(x => x.id === action.payload.id).length === 0 &&\r\n             {       \r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                textureTypes: action.payload.textureTypes,\r\n                images: action.payload.images ? action.payload.images : [] \r\n     }           \r\n                    \r\n                \r\n            ]\r\n            case \"REMOVE_ONE_PROP\": \r\n            return state.filter(item => item.id !== action.id)\r\n\r\n            case \"UPDATE_POPUP_PROPERTY\": \r\n            const path = action.payload.path\r\n            \r\n            const newState = state\r\n            newState[path.activeProperty]\r\n            .textureTypes[path.activeTexture]\r\n            .tabTypes[path.activeTab]\r\n            .properties.filter(x => x.id === action.payload.id)[0]\r\n            .progress = action.payload.progress\r\n      \r\n            return newState\r\n            break;\r\n\r\n            default: \r\n            return state\r\n            \r\n    } \r\n        \r\n\r\n}",["158","159"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["160"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx",["161","162","163"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { generateInputs } from \"../TestData/generators\"\r\n\r\n\r\n\r\nfunction Switch(props){\r\n    const {\r\n        id,\r\n        axis,\r\n        unit\r\n        } = props\r\n        const checkboxRef = useRef(null)\r\n        const [state, setState] = useState(false)\r\n\r\n        console.log(id, axis)\r\n        function handleChange(e){\r\n            console.log(checkboxRef.current.checked)\r\n            \r\n            setState(!state)\r\n            checkboxRef.current.checked = state\r\n        }\r\n\r\n    return(\r\n        <div id={id} onClick={handleChange} className={` w_56 h-full flex justify-between items-center ml-2`}>\r\n            <p className=\"font-normal normal-font text-midGrey pl-1\">{axis}</p>\r\n            <div  className={` ${state ? \"bg-primary justify-end\" :  \"bg-midGrey\"}  rounded-xl w_24 h-3 flex `}>\r\n\r\n                <div id=\"knot\" className=\"w-2 h-2 bg-almostWhite m-0.5 rounded-xl\">\r\n                        <input ref={checkboxRef} className=\"opacity-0 w-0 h-0\" type=\"checkbox\" />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Switch",["164","165"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx",["166","167","168"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["169","170","171","172","173","174","175","176"],"import React, { useEffect, useState, useRef, useContext, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport DownArrow from \"../img/Symbols/Sprites/ArrowDown.svg\"\r\n\r\nimport {generateInputs, payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport colorPicker from \"../img/Symbols/Sprites/PipetteColor.svg\"\r\n\r\nimport Plus from \"../img/Symbols/Sprites/Plus.svg\"\r\n\r\nimport ColorPlaceholder from \"../img/colorPlaceholder.png\"\r\n\r\nimport Link from \"../img/Symbols/Sprites/Link.svg\"\r\n\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nimport {AnisotropyDefaults} from \"../TestData/DefaultData\"\r\n\r\n\r\nimport {TextureTypes, defaultImages} from \"../TestData/DefaultData\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Dropdown from \"../components/dropdown\"\r\n\r\nfunction LabeledInput(props) {\r\n    const {\r\n        id,\r\n        label,\r\n        labelType,\r\n        input,\r\n        type,\r\n        icon,\r\n        path,\r\n        plus,\r\n        hasButton\r\n    } = props\r\n    const mainProperty = props.mainProperty !== undefined ? props.mainProperty : true\r\n    const [inputs, setInputs] = useState([])\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [localLabel, setLocalLabel] = useState(\"\")\r\n\r\n    const [buttonIcon, setButtonIcon] = useState(Plus)\r\n\r\n    const [toggleDorpdown, setToggleDropdown] = useState(false)\r\n\r\n    const payload = payloadGenerator(label)\r\n   \r\n   \r\n    const newId =  id ? id : uuidv4()\r\n\r\n    useEffect(()=>{\r\n        console.log(mainProperty)\r\n        type == \"colorPicker\" ? setLocalLabel(input.iterable[0].label) : setLocalLabel(label)\r\n       \r\n        switch (icon) {\r\n            \r\n            case \"picker\":\r\n                setButtonIcon(colorPicker)\r\n                break;\r\n            case \"dropdown\":\r\n                setButtonIcon(DownArrow)\r\n                break;\r\n            case \"solid\": \r\n                setButtonIcon(ColorPlaceholder)\r\n                break;\r\n            case \"link\":\r\n                setButtonIcon(Link)\r\n                break;\r\n            default:\r\n                setButtonIcon(Plus)\r\n        }\r\n\r\n        dispatch({type: \"ADD_ONE_PROP\", payload:{\r\n            id: newId,\r\n            name: label,\r\n            textureTypes: TextureTypes(),\r\n            images: defaultImages\r\n        }}) \r\n\r\n        setInputs(generateInputs(input, type || null))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const globalStateCopy = globalState\r\n\r\n       if(path){\r\n           const loadEditedProperties = globalState.MaterialPorperties[path.activeProperty].textureTypes[path.activeTexture].tabTypes[path.activeTab]\r\n           const editedPropertyProgress = loadEditedProperties.properties.filter(x => x.id === id)[0]\r\n           console.log(editedPropertyProgress.progress, editedPropertyProgress.id)\r\n           //setProgress(editedPropertyProgress.progress)\r\n       }\r\n        \r\n        if(globalStateCopy.MaterialPorperties.length > 0 && id === undefined && openPopup && icon !== \"dropdown\"){\r\n         \r\n            dispatch({type: \"ADD_ACTIVE_MATERIAL_POPUP\", payload: {\r\n                id: globalStateCopy.MaterialPorperties.filter(x => x.name == label)[0].id\r\n            }})\r\n        }\r\n        else if(openPopup && icon === \"dropdown\"){\r\n            setToggleDropdown(!toggleDorpdown)\r\n        }\r\n            \r\n        \r\n    }, [openPopup])\r\n\r\n\r\n\r\n    return(\r\n        <div className={`w-full h_24 flex ${ type=== \"colorPicker\" ? \"mt-5\" : \"my-2\"} ${mainProperty ? \"my-2\" : \"my-4\"} text-almostBlack  `}>\r\n            <div className={` w-full flex items-center justify-between relative`}>\r\n               \r\n               {type !== \"colorPicker\" ?\r\n               \r\n               \r\n               <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"} normal-font`}>{localLabel}</p>\r\n               \r\n            :\r\n            <div   \r\n            className={` bg-lightGrey h-full w_48 flex justify-center items-center normal-font`}>\r\n            { localLabel} \r\n            <img className=\"\" src={DownArrow} />\r\n            </div>\r\n         \r\n            }\r\n                    \r\n\r\n        <div className={`flex ${type === \"buttonless\" && \"pr-8\"}`}>\r\n                <div className=\"flex\">\r\n\r\n                    {inputs && inputs.map((inp) => {\r\n                        return inp\r\n                    })}\r\n\r\n                </div>\r\n                {hasButton && <TextureButton \r\n                type={!plus && \"transparent\"}\r\n                openPopup={openPopup} \r\n                className={`${!mainProperty ? \"ml-1\" : \"ml-2\" }`} \r\n                img={buttonIcon} \r\n                alt=\"\" \r\n                setOpenPopup={setOpenPopup}/>}\r\n                {icon === \"dropdown\" && <Dropdown \r\n                setToggleDropdown={setToggleDropdown} \r\n                list={AnisotropyDefaults} \r\n                defaultState={toggleDorpdown} \r\n                style={{marginTop: \"-4px\"}}\r\n                className={`absolute z-10 w-28 bg-almostBlack text-almostWhite ${!toggleDorpdown && \"hidden\"}`}/>}\r\n        </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js",["177","178","179","180"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx",["181","182","183","184"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport Draggable from 'react-draggable';\r\n\r\nimport {map_range, map_float_range} from \"../TestData/functions\"\r\n\r\nfunction Slider(props) {\r\n    const {\r\n        setProgress,\r\n        disabled,\r\n        min,\r\n        max,\r\n        decimal,\r\n        hasButton,\r\n        progress,\r\n        maxLimit\r\n    } = props\r\n\r\n    const maximumPosition =  171\r\n\r\n    const[drag, setDrag] = useState(false)\r\n    const [lastPosition, setLastPosition] = useState(0)\r\n    const [dragPos, setDragPos] = useState(0)\r\n\r\n    const sliderComponentRef = useRef(null)\r\n\r\n    const remappedValue = (o) => {\r\n        if(decimal){\r\n            return map_float_range(o, 0,maximumPosition,0,max) }\r\n         else{\r\n             return map_range(o, 0,maximumPosition, min || 0,max)}\r\n            } \r\n\r\n        const reveredRemap = (pos) => {\r\n            if(decimal){\r\n                return map_float_range(pos, min || 0, max, 0, maximumPosition)\r\n            }else{\r\n                return  map_range(pos, min || 0, max,  0,maximumPosition)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(max > 100){\r\n           // setDragPos(maximumPosition/2)\r\n        }\r\n    }, [max])\r\n\r\n    useEffect(() => {\r\n        if(progress !== dragPos  ){\r\n           \r\n            setDragPos(reveredRemap(progress))\r\n        }\r\n\r\n    }, [progress])\r\n\r\n\r\n\r\n    function Drag(){\r\n        setDrag(true)\r\n    }\r\n\r\n    function DragOff(){\r\n        setDrag(false)\r\n    }\r\n\r\n    function setValue(e, o){\r\n       \r\n\r\n        \r\n        if(!disabled){\r\n            if(o.x < maximumPosition) {\r\n                setDragPos(o.x)\r\n            }else{\r\n                setDragPos(maximumPosition)\r\n            }\r\n          \r\n                setProgress(remappedValue(o.x))\r\n            \r\n           \r\n            setLastPosition(o.x)\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div ref={sliderComponentRef} className=\"flex items-center h_16 relative\">\r\n        <Draggable\r\n        axis={disabled ? \"none\" : \"x\"}\r\n        bounds={{left: 0, top: 0, right: maximumPosition, bottom: 0}}\r\n        onStart={Drag}\r\n        onStop={DragOff}\r\n        onDrag={setValue}\r\n        position={{x: dragPos, y:  0}}\r\n        >\r\n            \r\n            <div className={`relative  ${drag ? \"knotBig\" : \"knot\" } ${disabled ? \"bg-softGrey\" : \"bg-midGrey\"} \r\n            z-10 flex justify-center items-center border-solid border-2 border-almostWhite`}>\r\n                <div className={`${drag ? \"knotMidBig\" : \"knotMid\"}  bg-almostWhite`}></div>\r\n                \r\n            </div>\r\n        </Draggable>\r\n        <div className={`track bg-softGrey track absolute`}></div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Slider","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\PopUpImageHover.jsx",["185","186"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx",["187"],"import React from \"react\"\r\n\r\n\r\nfunction Button(props){\r\n    const {\r\n        buttonText,\r\n        label,\r\n        type\r\n    \r\n    } = props\r\n    return(\r\n        <div id=\"upload-texture \" className={`${type == \"circle\" ? \"rounded-xl overflow-hidden\" : \"\"}`}>\r\n            <button className=\"w-full normal-font w-full  focus:ring focus:outline-none\r\n            flex items-center justify-center \r\n            hover:bg-almostWhite hover:text-almostBlack \r\n            transition-colors cursor-pointer mb-1 h_24 \r\n            border border-almostWhite rounded-sm\">{buttonText || \"Button\"}</button>\r\n\r\n            {label && \r\n               <p className=\"w-full text-center normal-font\">{label}</p>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Button","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx",["188","189","190","191","192","193"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["194","195","196","197","198","199","200"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx",["201","202"],"import React, { useEffect, useState } from \"react\"\r\nimport { generateInputs, defaultInputs } from \"../TestData/generators\"\r\n\r\nimport Switch from \"../components/Switch\"\r\n\r\n\r\nfunction LabeledSwitch(props){\r\n    const {\r\n        label,\r\n        labelType,\r\n        padding,\r\n        handleChange,\r\n        input\r\n        } = props\r\n    const [inputs, setInputs] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        setInputs(generateInputs(input  || defaultInputs.single(), \"switch\"))\r\n    }, [input])\r\n\r\n    return(\r\n        <div className={` ${padding && \"px-4 my-2\"} flex w-full h_24 normal-font font-semibold justify-between items-center text-almostBlack`}>\r\n\r\n            <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"}`}>{label}</p>\r\n            <div className=\"flex h_24\">\r\n                {inputs.map((elem, index) => {\r\n                    return elem\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledSwitch","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx",["203"],"import React from \"react\"\r\nimport  Plus from \"../img/Symbols/Sprites/Signs_Plus_1.svg\"\r\n\r\n\r\n\r\nfunction TextureButton(props) {\r\n    const {\r\n        setOpenPopup,\r\n        openPopup,\r\n        type,\r\n        className,\r\n    \r\n    } = props\r\n\r\n    function handleClick(){\r\n        setOpenPopup(!openPopup)\r\n    }\r\n    return(\r\n        <>\r\n        <button onClick={handleClick}  className={`${className !== undefined ? className : \"ml-2\"} ${type == \"circle\" ? \"rounded-xl overflow-hidden bg-lightGrey\" \r\n        : type=== \"transparent\" ? \"\" : \"bg-lightGrey\"} \r\n        icon  focus:outline-none  focus:ring focus:almostBlack rounded-sm flex justify-center items-center `}>\r\n            <img src={`${props.img || Plus}`}  alt={`${props.alt || \"add texture\"}`}/>\r\n        </button>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TextureButton","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx",["204","205","206","207","208","209"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport DownArrowBlack from \"../img/Symbols/Sprites/Signs_ArrowDown_1.svg\"\r\nimport DownArrowWhite from \"../img/Symbols/Sprites/Signs_ArrowDown_3.svg\"\r\n\r\n\r\nfunction Dropdown(props){\r\n    const {\r\n        type,\r\n        list,\r\n        optionTitle,\r\n        dropdownSelection,\r\n        setDropdownSelection,\r\n        className,\r\n        defaultState,\r\n        setToggleDropdown,\r\n        style\r\n    } = props\r\n\r\n    \r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n    const handleSelection = (e) => {\r\n        const selectionTarget = parseInt(e.target.id.split(\"-\")[1])\r\n        if(setToggleDropdown === undefined){\r\n            if(dropdownOpen){\r\n                setDropdownSelection(selectionTarget)\r\n            }\r\n        }else{\r\n            setToggleDropdown(false)\r\n        }\r\n       \r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n       if(defaultState !== undefined){\r\n        setDropdownOpen(defaultState)\r\n       }\r\n    }, [defaultState])\r\n\r\n    function handleDropdown(){\r\n        if(setToggleDropdown === undefined){\r\n\r\n            setDropdownOpen(!dropdownOpen)\r\n        }else{\r\n            setToggleDropdown(!dropdownOpen)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"texture_dropdown\" \r\n        onClick={handleDropdown}\r\n        className={`${className ? className : \"relative w-full\"} cursor-pointer  mb-4 h_24  rounded z-10 \r\n         ${dropdownOpen ? \" \" : \"overflow-hidden\" } ${type == \"solid\" ? \"text-almostBlack \" : \"border border-almostWhite\"}`} \r\n         style={style}\r\n       >\r\n\r\n            <ul id=\"texture_dropdown-list \" \r\n            className={`list-none ${dropdownOpen ? \" bg-almostBlack text-almostWhite border border-almostBlack\" \r\n            : type == \"solid\" ? \"bg-lightGrey border border-lightGrey\" : \"border border-almostBlack\"} w_wide-10 ` }\r\n\r\n             style={{\r\n                transform: `translate(0px, -${dropdownSelection * 24}px)`,\r\n                outline: \"thin solid #252525\"\r\n            }}>\r\n\r\n                {optionTitle &&  <li className=\"pl-1 text-sm  flex justify-between\">{optionTitle}\r\n                <img src={type == \"solid\" ? DownArrowBlack : DownArrowWhite} className=\"w_24 h_24  flex justify-center items-center select-none\"></img></li>\r\n                }\r\n\r\n                 {(type === \"solid\") && \r\n                 <img className=\"absolute right-0 m-0.5\" \r\n                 style={{ transform: `translate(0px, ${dropdownSelection * 24}px)`}} \r\n                 src={dropdownOpen ? DownArrowWhite : DownArrowBlack} /> } \r\n               \r\n                \r\n                {list && list.map((item,index) => {\r\n                    return <li key={index} \r\n                    onClick={handleSelection}\r\n                    id={`dropdown_item_${optionTitle}-${index}`}\r\n                    className={`${index === dropdownSelection && dropdownOpen ? \"bg-darkGrey\" : \"\"} \r\n                    pl-1 text-sm h_24 flex w-full justify-between normal-font font-semibold\r\n                    ${(index !== dropdownSelection && dropdownOpen) && \"hover:bg-darkGrey\"}`}>{item.name}</li>\r\n                })}\r\n              \r\n                \r\n            </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dropdown","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx",[],["210","211"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx",["212","213","214","215","216","217"],"import React from \"react\"\r\nimport TextSlider  from \"../containers/TextSlider\"\r\nimport Input from \"../components/Input\"\r\nimport LabeledSwitch from \"../containers/LabeledSwitch\"\r\nimport LabeledInput from \"../containers/LabeledInput\"\r\n\r\nimport {TextureTypes} from \"./DefaultData\"\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport Switch from \"../components/Switch\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultInputs = {\r\n    single: (unit = null) => {\r\n       return {\r\n            iterable: [0],\r\n            unit: unit \r\n        }\r\n    },\r\n    double: (unit = null, iterable) => {\r\n        return {\r\n            iterable: iterable ? [\"X\", \"Y\"] : [0, 0],\r\n            unit: unit \r\n        }\r\n    },\r\n    triple: (unit = null, iterable) => {\r\n        return {\r\n            iterable: iterable ? [\"X\", \"Y\", \"Z\"] : [0, 0, 0],\r\n            unit: unit \r\n        }\r\n    },\r\n    color: () => {\r\n        return {\r\n            iterable: [\r\n                {\r\n                    label: \"RGB\",\r\n                    default: [255,255,255]\r\n                },\r\n                {\r\n                    label: \"HSB\",\r\n                    default: [360, 100, 100]\r\n                },\r\n                {\r\n                    label: \"HEX\",\r\n                    default: [\"#fffff\"]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport  const newSwitch = (swt) => {\r\n                  \r\n    switch (swt.type){\r\n        case \"single\": \r\n            return defaultInputs.single()\r\n\r\n        case \"double\":\r\n            return defaultInputs.double(null, true)\r\n  \r\n    }\r\n}\r\n\r\nexport const generateProperties = (listOfProperties, path) => {\r\n    let propertyArray = []\r\n    console.log(listOfProperties, path)\r\n    listOfProperties.properties.map((property, index) =>{\r\n        \r\n        switch(property.type) {\r\n            case \"slider\":\r\n                propertyArray.push( <TextSlider \r\n                    id={property.id}\r\n                    key={property.id} \r\n                    path={path}\r\n                    propName={property.label} \r\n                    active={true} \r\n                    decimal={false} \r\n                    colorSlider={property.colorSlider || false}\r\n                    maximum={property.max} \r\n                    minimum={property.min}\r\n                    labelType={\"normal\"}\r\n                    unit={null} \r\n                    \r\n                    hasButton={false}/>)\r\n                    break;\r\n            case \"switch\":\r\n               \r\n              console.log(newSwitch(property.input), property.input , \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\")\r\n\r\n                    propertyArray.push(\r\n                        <LabeledSwitch\r\n                            key={property.id}\r\n                            label={property.label}\r\n                            labelType={\"normal\"}\r\n                            input={newSwitch(property.input)}\r\n                        />\r\n                    )\r\n\r\n                    break;\r\n            case \"number\":\r\n                const newNumberInput = (input) => {\r\n                    switch (input.type){\r\n                        case \"single\":\r\n                            return defaultInputs.single(input.unit, input.iterable)\r\n                       \r\n                        case \"double\":\r\n                            return defaultInputs.double(input.unit, input.iterable)\r\n                        \r\n                        case \"triple\": \r\n                            return defaultInputs.triple(input.unit, input.iterable)\r\n\r\n                        case \"colorPicker\":\r\n                            return defaultInputs.color()\r\n                       \r\n                    }\r\n                }\r\n               \r\n                console.log(\"HERE\")\r\n                propertyArray.push(\r\n                \r\n                <LabeledInput \r\n                key={property.id}\r\n                id={_uniqueId(\"LabeledInput-\")}  \r\n                label={property.label}  \r\n                labelType={`${property.labelType}`}    \r\n                hasButton={property.hasButton}  \r\n                type={property.input.type}\r\n                mainProperty={false}\r\n                input={newNumberInput(property.input)}   />\r\n                \r\n                )\r\n\r\n                    break;\r\n            \r\n        }\r\n    })\r\n    return propertyArray\r\n}\r\n\r\n\r\nexport const generateInputs = (inputs, type = null) => {\r\n    \r\n    const inputIterable = inputs.iterable || [0]\r\n\r\n    const inputArray = []   \r\n\r\n    console.log(inputIterable)\r\n    inputIterable.map((elem, index) => {\r\n        \r\n        const newiterable = (inputs.iterable && inputs.iterable[0] != 0) ? inputs.iterable[index] : \"\"\r\n        const newUnit = (inputs.iterable && inputs.unit != null) ? inputs.unit : \"\"\r\n\r\n        const newId = uuidv4()\r\n\r\n        switch(type) {\r\n            case \"switch\": \r\n            inputArray.push(<Switch key={newId} id={newId} axis={newiterable} unit={newUnit}  />)\r\n            break;\r\n\r\n            case \"colorPicker\": \r\n            console.log(\"COLORPICKER\")\r\n           \r\n            inputArray.push(<Input key={newId} id={newId} unit={null} value={inputIterable[0].default[index]} color={true}/>)\r\n\r\n            break;\r\n\r\n            default:\r\n            inputArray.push(<Input key={newId} iterable={newiterable} unit={newUnit} />)\r\n            break;\r\n        }\r\n\r\n    })\r\n    \r\n    return inputArray\r\n}\r\n\r\n\r\nexport const payloadGenerator = (type) => {\r\n    const newTabTypes = TextureTypes\r\n  \r\n    return {\r\n      id: _uniqueId(`${type}-`),\r\n      type: type,\r\n      TextureTypes: newTabTypes\r\n    }\r\n  }\r\n\r\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx",["218","219","220"],"import React, { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\nfunction MaterialList(){\r\n    const [legacyCodeLoader, setLegacyCodeLoader] = useState(\"\")\r\n\r\n    const iframe = `<iframe src=\"https://robertcsollei-vectary.github.io/hostingLegacyMaterialList/\" width=\"248\" height=\"225\"> </iframe>`\r\n   \r\n    return(\r\n        <div id=\"matList\" className=\"material_list\" dangerouslySetInnerHTML={{__html: iframe}}>\r\n            \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialList",["221","222"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx",["223","224","225"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js",["226","227","228"],"import React, {useState} from \"react\"\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultImages = [{\r\n    name: \"texture_001.png\",\r\n    src: \"https://i.pinimg.com/originals/2c/c1/3e/2cc13e6422218aa521474b36346b85f9.jpg\",\r\n    active: true\r\n},{\r\n    name: \"texture_002.png\",\r\n    src: \"https://image.shutterstock.com/z/stock-photo-white-crick-wall-texture-background-229832425.jpg\",\r\n    active: false\r\n}]\r\n\r\n\r\nexport const ImageTabTypes = () => { return [\r\n    {\r\n        name: \"Adjust\",\r\n        properties: [{\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Hue\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Saturation\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Brightness\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            max: 180,\r\n            min: -180,\r\n            progress: 0,\r\n            setProgress: (value) => {this.progress = value},\r\n            rigid: true,\r\n            label: \"Contrast\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"switch\",\r\n            label: \"Invert\",\r\n            input: {\r\n                type: \"single\",\r\n                on: false\r\n            }\r\n        }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Transform\",\r\n        properties: [\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Tiling\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Offset\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Rotation\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"single\",\r\n                iterable: null,\r\n                unit: \"°\"\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"switch\",\r\n            label: \"Invert\",\r\n            input: {\r\n                type: \"double\",\r\n                on: false\r\n            }\r\n        }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Overlay\",\r\n        properties: [{\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            colorSlider: true,\r\n            max: 180,\r\n            min: -180,\r\n            rigid: true,\r\n            label: \"Hue\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            colorSlider: true,\r\n            max: 180,\r\n            min: -180,\r\n            rigid: true,\r\n            label: \"Saturation\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"slider\",\r\n            unit: \"°\",\r\n            colorSlider: true,\r\n            max: 180,\r\n            min: -180,\r\n            rigid: true,\r\n            label: \"Brightness\"\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            hasButton: true,\r\n            input: {\r\n                type: \"colorPicker\"\r\n                \r\n            }\r\n        }\r\n        ]\r\n    }\r\n]}\r\n\r\n\r\nconst GradientTabTypes = () => {\r\n    return  [\r\n        {\r\n            name: \"Adjust\",\r\n            properties: [{\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Hue\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Saturation\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Brightness\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"number\",\r\n                hasButton: true,\r\n                input: {\r\n                    type: \"colorPicker\"\r\n                    \r\n                }\r\n            }\r\n            ]\r\n        },\r\n        {\r\n        name: \"Transform\",\r\n        properties: [\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Tiling\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Offset\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"double\",\r\n                iterable: null,\r\n                unit: null\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"number\",\r\n            label: \"Rotation\",\r\n            labelType: \"normal\",\r\n            hasButton: false,\r\n            input: {\r\n                type: \"single\",\r\n                iterable: null,\r\n                unit: \"°\"\r\n            }\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            type: \"switch\",\r\n            label: \"Invert\",\r\n            input: {\r\n                type: \"double\",\r\n                on: false\r\n            }\r\n        }\r\n        ]\r\n    }\r\n]\r\n\r\n}\r\n\r\n\r\nconst SolidTabTypes = () => {\r\n    return [\r\n        {\r\n            name: \"Adjust\",\r\n            properties: [{\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Hue\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Saturation\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"slider\",\r\n                unit: \"°\",\r\n                colorSlider: true,\r\n                max: 180,\r\n                min: -180,\r\n                rigid: true,\r\n                label: \"Brightness\"\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                type: \"number\",\r\n                hasButton: true,\r\n                input: {\r\n                    type: \"colorPicker\"\r\n                    \r\n                }\r\n            }\r\n            ]\r\n        },\r\n    ]\r\n}\r\n\r\nexport const AnisotropyDefaults = [\r\n    {\r\n        name: \"option 1\"\r\n    },\r\n    {\r\n        name: \"option 2\"\r\n    },\r\n    {\r\n        name: \"option 3\"\r\n    },\r\n   \r\n]\r\n\r\n\r\n\r\nexport const TextureTypes  =() => {return [\r\n    {name: \"Image\",\r\n    active: true,\r\n    tabTypes: ImageTabTypes()\r\n    },\r\n    {name: \"Gradient\",\r\n    active: false,\r\n    tabTypes: GradientTabTypes()\r\n    }, \r\n    {name: \"Solid\",\r\n    active: false,\r\n    tabTypes: SolidTabTypes()\r\n    },\r\n\r\n\r\n]}\r\n\r\nexport const convertToColor = (hue, sat, brightness) => {\r\n    return `hsl(${hue}, ${sat}%, ${brightness}%)`\r\n}\r\n\r\nexport const convertToGradient = (...gradients) => {\r\n    console.log(gradients)\r\n}\r\n\r\nexport const gradients = {\r\n    hue: \"linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(254,255,0,1) 25%, rgba(0,254,255,1) 50%, rgba(252,0,255,1) 75%, rgba(255,0,0,1) 100%)\",\r\n    saturation:\"linear-gradient(90deg, hsl(180,0%,50%) 0%, hsl(180,100%,50%) 100%)\",\r\n    brightness: \"linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 100%)\"\r\n}\r\n\r\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\useLongPress.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\context\\texturePropertyContext.jsx",["229"],{"ruleId":"230","severity":1,"message":"231","line":9,"column":7,"nodeType":"232","messageId":"233","endLine":9,"endColumn":13},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"230","severity":1,"message":"238","line":1,"column":58,"nodeType":"232","messageId":"233","endLine":1,"endColumn":73},{"ruleId":"230","severity":1,"message":"239","line":10,"column":9,"nodeType":"232","messageId":"233","endLine":10,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":61,"column":8,"nodeType":"242","endLine":61,"endColumn":10,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":78,"column":75,"nodeType":"246","messageId":"247","endLine":78,"endColumn":77},{"ruleId":"240","severity":1,"message":"248","line":83,"column":8,"nodeType":"242","endLine":83,"endColumn":19,"suggestions":"249"},{"ruleId":"240","severity":1,"message":"250","line":94,"column":8,"nodeType":"242","endLine":94,"endColumn":18,"suggestions":"251"},{"ruleId":"240","severity":1,"message":"252","line":100,"column":8,"nodeType":"242","endLine":100,"endColumn":49,"suggestions":"253"},{"ruleId":"240","severity":1,"message":"254","line":123,"column":8,"nodeType":"242","endLine":123,"endColumn":23,"suggestions":"255"},{"ruleId":"244","severity":1,"message":"256","line":129,"column":42,"nodeType":"246","messageId":"247","endLine":129,"endColumn":44},{"ruleId":"257","severity":1,"message":"258","line":143,"column":17,"nodeType":"259","endLine":143,"endColumn":36},{"ruleId":"244","severity":1,"message":"256","line":162,"column":34,"nodeType":"246","messageId":"247","endLine":162,"endColumn":36},{"ruleId":"234","replacedBy":"260"},{"ruleId":"236","replacedBy":"261"},{"ruleId":"234","replacedBy":"262"},{"ruleId":"236","replacedBy":"263"},{"ruleId":"230","severity":1,"message":"264","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":33,"column":13,"nodeType":"267","messageId":"268","endLine":33,"endColumn":19},{"ruleId":"234","replacedBy":"269"},{"ruleId":"236","replacedBy":"270"},{"ruleId":"230","severity":1,"message":"271","line":43,"column":11,"nodeType":"232","messageId":"233","endLine":43,"endColumn":24},{"ruleId":"230","severity":1,"message":"272","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"273","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":24},{"ruleId":"230","severity":1,"message":"274","line":10,"column":9,"nodeType":"232","messageId":"233","endLine":10,"endColumn":13},{"ruleId":"234","replacedBy":"275"},{"ruleId":"236","replacedBy":"276"},{"ruleId":"230","severity":1,"message":"264","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"277","line":29,"column":8,"nodeType":"242","endLine":29,"endColumn":13,"suggestions":"278"},{"ruleId":"240","severity":1,"message":"279","line":50,"column":8,"nodeType":"242","endLine":50,"endColumn":13,"suggestions":"280"},{"ruleId":"230","severity":1,"message":"281","line":1,"column":38,"nodeType":"232","messageId":"233","endLine":1,"endColumn":44},{"ruleId":"230","severity":1,"message":"238","line":1,"column":58,"nodeType":"232","messageId":"233","endLine":1,"endColumn":73},{"ruleId":"230","severity":1,"message":"282","line":48,"column":11,"nodeType":"232","messageId":"233","endLine":48,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":55,"column":14,"nodeType":"246","messageId":"247","endLine":55,"endColumn":16},{"ruleId":"240","severity":1,"message":"283","line":83,"column":8,"nodeType":"242","endLine":83,"endColumn":10,"suggestions":"284"},{"ruleId":"244","severity":1,"message":"245","line":98,"column":75,"nodeType":"246","messageId":"247","endLine":98,"endColumn":77},{"ruleId":"240","severity":1,"message":"285","line":106,"column":8,"nodeType":"242","endLine":106,"endColumn":19,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":123,"column":13,"nodeType":"289","endLine":123,"endColumn":49},{"ruleId":"230","severity":1,"message":"290","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":17},{"ruleId":"230","severity":1,"message":"291","line":9,"column":16,"nodeType":"232","messageId":"233","endLine":9,"endColumn":22},{"ruleId":"230","severity":1,"message":"292","line":28,"column":10,"nodeType":"232","messageId":"233","endLine":28,"endColumn":21},{"ruleId":"240","severity":1,"message":"293","line":38,"column":6,"nodeType":"242","endLine":38,"endColumn":20,"suggestions":"294"},{"ruleId":"230","severity":1,"message":"295","line":13,"column":9,"nodeType":"232","messageId":"233","endLine":13,"endColumn":18},{"ruleId":"230","severity":1,"message":"296","line":15,"column":9,"nodeType":"232","messageId":"233","endLine":15,"endColumn":17},{"ruleId":"230","severity":1,"message":"297","line":21,"column":12,"nodeType":"232","messageId":"233","endLine":21,"endColumn":24},{"ruleId":"240","severity":1,"message":"298","line":55,"column":8,"nodeType":"242","endLine":55,"endColumn":18,"suggestions":"299"},{"ruleId":"287","severity":1,"message":"288","line":21,"column":21,"nodeType":"289","endLine":21,"endColumn":121},{"ruleId":"287","severity":1,"message":"288","line":22,"column":21,"nodeType":"289","endLine":22,"endColumn":124},{"ruleId":"244","severity":1,"message":"245","line":12,"column":54,"nodeType":"246","messageId":"247","endLine":12,"endColumn":56},{"ruleId":"230","severity":1,"message":"238","line":1,"column":57,"nodeType":"232","messageId":"233","endLine":1,"endColumn":72},{"ruleId":"230","severity":1,"message":"300","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":17},{"ruleId":"240","severity":1,"message":"301","line":33,"column":8,"nodeType":"242","endLine":33,"endColumn":26,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":36,"column":1,"nodeType":"305","messageId":"247","endLine":38,"endColumn":4},{"ruleId":"240","severity":1,"message":"306","line":72,"column":8,"nodeType":"242","endLine":72,"endColumn":49,"suggestions":"307"},{"ruleId":"240","severity":1,"message":"308","line":103,"column":7,"nodeType":"242","endLine":103,"endColumn":66,"suggestions":"309"},{"ruleId":"230","severity":1,"message":"295","line":18,"column":9,"nodeType":"232","messageId":"233","endLine":18,"endColumn":18},{"ruleId":"230","severity":1,"message":"297","line":24,"column":12,"nodeType":"232","messageId":"233","endLine":24,"endColumn":24},{"ruleId":"310","severity":1,"message":"311","line":35,"column":9,"nodeType":"312","messageId":"313","endLine":49,"endColumn":10},{"ruleId":"240","severity":1,"message":"314","line":51,"column":8,"nodeType":"242","endLine":51,"endColumn":18,"suggestions":"315"},{"ruleId":"310","severity":1,"message":"311","line":55,"column":9,"nodeType":"312","messageId":"313","endLine":69,"endColumn":10},{"ruleId":"240","severity":1,"message":"316","line":72,"column":8,"nodeType":"242","endLine":72,"endColumn":18,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":129,"column":13,"nodeType":"320","messageId":"247","endLine":129,"endColumn":23},{"ruleId":"230","severity":1,"message":"321","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":14},{"ruleId":"230","severity":1,"message":"322","line":12,"column":9,"nodeType":"232","messageId":"233","endLine":12,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":20,"column":107,"nodeType":"246","messageId":"247","endLine":20,"endColumn":109},{"ruleId":"230","severity":1,"message":"323","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":27},{"ruleId":"244","severity":1,"message":"245","line":54,"column":60,"nodeType":"246","messageId":"247","endLine":54,"endColumn":62},{"ruleId":"244","severity":1,"message":"245","line":60,"column":20,"nodeType":"246","messageId":"247","endLine":60,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":68,"column":17,"nodeType":"289","endLine":68,"endColumn":146},{"ruleId":"244","severity":1,"message":"245","line":68,"column":32,"nodeType":"246","messageId":"247","endLine":68,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":72,"column":18,"nodeType":"289","endLine":74,"endColumn":73},{"ruleId":"234","replacedBy":"324"},{"ruleId":"236","replacedBy":"325"},{"ruleId":"310","severity":1,"message":"311","line":54,"column":5,"nodeType":"312","messageId":"313","endLine":61,"endColumn":6},{"ruleId":"326","severity":1,"message":"327","line":67,"column":55,"nodeType":"328","messageId":"329","endLine":67,"endColumn":57},{"ruleId":"310","severity":1,"message":"311","line":69,"column":9,"nodeType":"312","messageId":"313","endLine":135,"endColumn":10},{"ruleId":"310","severity":1,"message":"311","line":102,"column":21,"nodeType":"312","messageId":"313","endLine":115,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":148,"column":37,"nodeType":"328","messageId":"329","endLine":148,"endColumn":39},{"ruleId":"244","severity":1,"message":"256","line":150,"column":68,"nodeType":"246","messageId":"247","endLine":150,"endColumn":70},{"ruleId":"230","severity":1,"message":"272","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"330","line":6,"column":12,"nodeType":"232","messageId":"233","endLine":6,"endColumn":28},{"ruleId":"230","severity":1,"message":"331","line":6,"column":30,"nodeType":"232","messageId":"233","endLine":6,"endColumn":49},{"ruleId":"234","replacedBy":"332"},{"ruleId":"236","replacedBy":"333"},{"ruleId":"230","severity":1,"message":"334","line":15,"column":9,"nodeType":"232","messageId":"233","endLine":15,"endColumn":20},{"ruleId":"240","severity":1,"message":"335","line":29,"column":7,"nodeType":"242","endLine":29,"endColumn":16,"suggestions":"336"},{"ruleId":"244","severity":1,"message":"245","line":38,"column":18,"nodeType":"246","messageId":"247","endLine":38,"endColumn":20},{"ruleId":"230","severity":1,"message":"264","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":13},{"ruleId":"230","severity":1,"message":"337","line":1,"column":16,"nodeType":"232","messageId":"233","endLine":1,"endColumn":24},{"ruleId":"230","severity":1,"message":"290","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":17},{"ruleId":"230","severity":1,"message":"338","line":4,"column":9,"nodeType":"232","messageId":"233","endLine":4,"endColumn":21},"no-unused-vars","'reload' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["339"],"no-negated-in-lhs",["340"],"'useLayoutEffect' is defined but never used.","'payloadGenerator' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.","ArrayExpression",["341"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["345"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["339"],["340"],["339"],["340"],"'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["339"],["340"],"'hangleDragEnd' is assigned a value but never used.","'useEffect' is defined but never used.","'generateInputs' is defined but never used.","'unit' is assigned a value but never used.",["339"],["340"],"React Hook useEffect has a missing dependency: 'setProp'. Either include it or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["346"],"React Hook useEffect has missing dependencies: 'prop' and 'setProp'. Either include them or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["347"],"'useRef' is defined but never used.","'payload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'icon', 'input', 'label', 'mainProperty', 'newId', and 'type'. Either include them or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'icon', 'id', 'label', 'path', and 'toggleDorpdown'. Either include them or remove the dependency array. You can also do a functional update 'setToggleDropdown(t => ...)' if you only need 'toggleDorpdown' in the 'setToggleDropdown' call.",["349"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'_uniqueId' is defined but never used.","'uuidv4' is defined but never used.","'globalState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["350"],"'hasButton' is assigned a value but never used.","'maxLimit' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dragPos' and 'reveredRemap'. Either include them or remove the dependency array.",["351"],"'Draggable' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["352"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'globalState.MaterialPorperties'. Either include it or remove the dependency array.",["354"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["356"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'Switch' is defined but never used.","'handleChange' is assigned a value but never used.","'useContext' is defined but never used.",["339"],["340"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'legacyCodeLoader' is assigned a value but never used.","'setLegacyCodeLoader' is assigned a value but never used.",["339"],["340"],"'colorSlider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inputid' and 'progress'. Either include them or remove the dependency array.",["357"],"'useState' is defined but never used.","'TextureTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"386","fix":"388"},{"desc":"389","fix":"390"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"391","text":"392"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"393","text":"394"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"395","text":"396"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"397","text":"398"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"399","text":"400"},"Update the dependencies array to be: [ref, setProp]",{"range":"401","text":"402"},"Update the dependencies array to be: [prop, ref, setProp]",{"range":"403","text":"404"},"Update the dependencies array to be: [dispatch, icon, input, label, mainProperty, newId, type]",{"range":"405","text":"406"},"Update the dependencies array to be: [dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",{"range":"407","text":"408"},"Update the dependencies array to be: [WorkSpaceRef, dispatch]",{"range":"409","text":"410"},"Update the dependencies array to be: [dragPos, progress, reveredRemap]",{"range":"411","text":"412"},"Update the dependencies array to be: [ref, globalState, dispatch]",{"range":"413","text":"414"},"Update the dependencies array to be: [globalState, globalState.MetaData.activeTexturePopup]",{"range":"415","text":"416"},"Update the dependencies array to be: [activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",{"range":"417","text":"418"},"Update the dependencies array to be: [progress, propName]",{"range":"419","text":"420"},{"range":"421","text":"420"},"Update the dependencies array to be: [inputid, progress, toInput]",{"range":"422","text":"423"},[1593,1595],"[dispatch, newId, propName]",[2425,2436],"[dispatch, globalState, id, openPopup, path, propName]",[2736,2746],"[dispatch, id, path, progress]",[2889,2930],"[globalState.MetaData.activeTexturePopup, id, propName]",[3466,3481],"[progress, max, maximum]",[829,834],"[ref, setProp]",[1336,1341],"[prop, ref, setProp]",[2474,2476],"[dispatch, icon, input, label, mainProperty, newId, type]",[3443,3454],"[dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",[1248,1262],"[WorkSpaceRef, dispatch]",[1366,1376],"[dragPos, progress, reveredRemap]",[1199,1217],"[ref, globalState, dispatch]",[2692,2733],"[globalState, globalState.MetaData.activeTexturePopup]",[3752,3811],"[activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",[1414,1424],"[progress, propName]",[2018,2028],[802,811],"[inputid, progress, toInput]"]