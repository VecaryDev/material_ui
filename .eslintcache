[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Material.jsx":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\RangeInput.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"16","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx":"17","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx":"18","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInputByPercentage.jsx":"19","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"20","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"21","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx":"22","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx":"23"},{"size":8077,"mtime":1610549284382,"results":"24","hashOfConfig":"25"},{"size":718,"mtime":1610114473846,"results":"26","hashOfConfig":"25"},{"size":995,"mtime":1610362864192,"results":"27","hashOfConfig":"25"},{"size":8810,"mtime":1610369243197,"results":"28","hashOfConfig":"25"},{"size":942,"mtime":1610362481792,"results":"29","hashOfConfig":"25"},{"size":532,"mtime":1609763545216,"results":"30","hashOfConfig":"25"},{"size":9529,"mtime":1610548718855,"results":"31","hashOfConfig":"25"},{"size":865,"mtime":1610525829527,"results":"32","hashOfConfig":"25"},{"size":735,"mtime":1610529538283,"results":"33","hashOfConfig":"25"},{"size":1606,"mtime":1610528171043,"results":"34","hashOfConfig":"25"},{"size":3669,"mtime":1610023436721,"results":"35","hashOfConfig":"25"},{"size":1139,"mtime":1610098659398,"results":"36","hashOfConfig":"25"},{"size":6670,"mtime":1610538065446,"results":"37","hashOfConfig":"25"},{"size":4510,"mtime":1610529775382,"results":"38","hashOfConfig":"25"},{"size":5190,"mtime":1610362870507,"results":"39","hashOfConfig":"25"},{"size":5540,"mtime":1610548215470,"results":"40","hashOfConfig":"25"},{"size":5787,"mtime":1610543572917,"results":"41","hashOfConfig":"25"},{"size":1162,"mtime":1610353544886,"results":"42","hashOfConfig":"25"},{"size":8115,"mtime":1610549227374,"results":"43","hashOfConfig":"25"},{"size":197,"mtime":1610548403904,"results":"44","hashOfConfig":"25"},{"size":1224,"mtime":1610035606263,"results":"45","hashOfConfig":"25"},{"size":5635,"mtime":1610098859353,"results":"46","hashOfConfig":"25"},{"size":3249,"mtime":1610547224246,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11grfy6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["108","109","110","111","112","113"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["114"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["115","116"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx",["117","118"],"import React, { useEffect, useState } from \"react\"\r\nimport { generateInputs, defaultInputs } from \"../TestData/generators\"\r\n\r\nimport Switch from \"../components/Switch\"\r\n\r\n\r\nfunction LabeledSwitch(props){\r\n    const {\r\n        label,\r\n        labelType,\r\n        padding,\r\n        handleChange,\r\n        input\r\n        } = props\r\n    const [inputs, setInputs] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        setInputs(generateInputs(input  || defaultInputs.single(), \"switch\"))\r\n    }, [input])\r\n\r\n    return(\r\n        <div className={` ${padding && \"px-4 my-2\"} flex w-full h_24 normal-font font-semibold justify-between items-center text-almostBlack`}>\r\n\r\n            <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"}`}>{label}</p>\r\n            <div className=\"flex h_24\">\r\n                {inputs.map((elem, index) => {\r\n                    return elem\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledSwitch","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js",["119","120","121"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx",[],["122","123"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js",["124","125","126","127","128"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx",["129"],"import React from \"react\"\r\nimport  Plus from \"../img/Symbols/Sprites/Signs_Plus_1.svg\"\r\n\r\n\r\n\r\nfunction TextureButton(props) {\r\n    const {\r\n        setOpenPopup,\r\n        openPopup,\r\n        type,\r\n        className,\r\n    \r\n    } = props\r\n\r\n    function handleClick(){\r\n        setOpenPopup(!openPopup)\r\n    }\r\n    return(\r\n        <>\r\n        <button onClick={handleClick}  className={`${className !== undefined ? className : \"ml-2\"} ${type == \"circle\" ? \"rounded-xl overflow-hidden bg-lightGrey\" \r\n        : type=== \"transparent\" ? \"\" : \"bg-lightGrey\"} \r\n        icon  focus:outline-none  focus:ring-1 focus:ring-primary  focus:almostBlack rounded-sm flex justify-center items-center `}>\r\n            <img src={`${props.img || Plus}`}  alt={`${props.alt || \"add texture\"}`}/>\r\n        </button>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TextureButton",["130","131"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx",["132","133","134","135"],"import React, { useEffect, useState } from \"react\"\r\n\r\nimport Material from \"../components/Material\"\r\n\r\n\r\nfunction MaterialList(){\r\n    const [legacyCodeLoader, setLegacyCodeLoader] = useState(\"\")\r\n\r\n    const iframe = `<iframe src=\"https://vecarydev.github.io/MaterialList/\" width=\"248\" height=\"225\"> </iframe>`\r\n   \r\n    return(\r\n        <div id=\"matList\" className=\"material_list\" dangerouslySetInnerHTML={{__html: iframe}}>\r\n            \r\n       \r\n        </div>\r\n        // <div id=\"materialList\" className=\"flex flex-col justify-start w-full px-2\">\r\n\r\n        //     <Material />\r\n        //     <Material />\r\n        //     <Material />\r\n        //     <Material />\r\n\r\n        // </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialList",["136","137"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Material.jsx",["138","139","140","141"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["142","143","144","145","146","147","148"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx",["149","150","151"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\n\r\n\r\nfunction GrowingInput(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n    const [update, setUpdate] = useState(0)\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n\r\n\r\n    let limit = 1\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\n    let num = 0\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(multiplyer > 0) {\r\n            setGrowIcon(ArrowGrowUp)\r\n        }else{\r\n            setGrowIcon(ArrowGrowDown)\r\n        }\r\n\r\n        console.log(dynamicValue, multiplyer)\r\n        if(dynamicValue === false){\r\n            setDynamicValue(0 + multiplyer)\r\n        }else{\r\n            setDynamicValue(dynamicValue + multiplyer)\r\n        }\r\n        \r\n    }, [multiplyer, update])\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n        e.target.select()\r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location, dynamicData) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 60 + window.scrollY - location\r\n           let changingFactor = () => {\r\n               const growthRate = parseInt(map_float_range(difference, -100, 100, -limit, limit))\r\n               if(Math.abs(growthRate) < 2){\r\n                   return 0\r\n               }else{\r\n                   return growthRate\r\n               }\r\n           }\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor() ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor() * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            counter++\r\n           \r\n            if(changingFactor() > 0){\r\n             \r\n                if(changingFactor() > 5){\r\n                    return Math.pow(2, 5)\r\n                }else{\r\n                    return Math.pow(2, changingFactor())\r\n                }\r\n\r\n            }else if(changingFactor < 0){\r\n                if(changingFactor() < -5){\r\n                    return Math.pow(2, 5) * -1\r\n                }else{\r\n                    return Math.pow(2, Math.abs(changingFactor())) * -1\r\n                }\r\n\r\n            }\r\n            \r\n            \r\n            else{\r\n                return 0\r\n               \r\n            }\r\n\r\n            \r\n           }\r\n           setTimeout(() => {\r\n              \r\n            //console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            //num += parseInt( adjustChange() )\r\n            setMultiplyer(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    const handleDragEnd = (e) => {\r\n       e.preventDefault();\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n     \r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n        \r\n        dragOver = false\r\n        function infinity() {\r\n           \r\n            if(!dragOver){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                   \r\n                    handleDrag(userLocation)\r\n                    \r\n                    console.log(\"down\")\r\n                    if(counter % 2 === 0){\r\n                        setUpdate(update+ 1)\r\n                       }else{\r\n                        setUpdate(false)\r\n                       }\r\n                      \r\n                    infinity()\r\n                }, 100)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            infinity()\r\n        }, 500)\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={handleDragEnd}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={handleDragEnd}\r\n            \r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            {hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={handleDragEnd} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n            \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GrowingInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\RangeInput.jsx",["152","153"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\n\r\nfunction RangeInput(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\nlet num = 0\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setDynamicValue(0)\r\n    }, [value])\r\n\r\n    const handleInputChange = (e) => {\r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n        e.target.select()\r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - location\r\n           let changingFactor = parseInt(map_float_range(difference, -100, 100, 0, 100))\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            if(changingFactor > 100){\r\n                return 100\r\n            }else if(changingFactor < 0 ){\r\n                return 0\r\n            }else{\r\n                return changingFactor\r\n            }\r\n           }\r\n           setTimeout(() => {\r\n              \r\n            console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            num += parseInt( adjustChange() )\r\n            setDynamicValue(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    const handleDragEnd = (e) => {\r\n       e.preventDefault();\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n        dragOver = false\r\n        function infinity() {\r\n            if(!dragOver){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                    handleDrag(userLocation)\r\n                    \r\n                    console.log(\"down\")\r\n                    infinity()\r\n                }, 10)\r\n            }\r\n        }\r\n        setTimeout(infinity, 500)\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={handleDrag}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={handleDragEnd}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n\r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RangeInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["154","155","156","157","158","159","160","161","162","163","164"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { useEffect, useState, useRef, useContext, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport DownArrow from \"../img/Symbols/Sprites/ArrowDown.svg\"\r\n\r\nimport {generateInputs, payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport colorPicker from \"../img/Symbols/Sprites/PipetteColor.svg\"\r\n\r\nimport Plus from \"../img/Symbols/Sprites/Plus.svg\"\r\n\r\nimport ColorPlaceholder from \"../img/colorPlaceholder.png\"\r\n\r\nimport Link from \"../img/Symbols/Sprites/Link.svg\"\r\nimport Unlink from \"../img/Symbols/Sprites/Unlink.svg\"\r\n\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nimport {AnisotropyDefaults} from \"../TestData/DefaultData\"\r\n\r\n\r\nimport {TextureTypes, defaultImages} from \"../TestData/DefaultData\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Dropdown from \"../components/dropdown\"\r\n\r\nfunction LabeledInput(props) {\r\n    const {\r\n        id,\r\n        label,\r\n        labelType,\r\n        input,\r\n        type,\r\n        icon,\r\n        path,\r\n        plus,\r\n        hasButton,\r\n        buttonClick\r\n    } = props\r\n    const mainProperty = props.mainProperty !== undefined ? props.mainProperty : true\r\n    const [inputs, setInputs] = useState([])\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [localLabel, setLocalLabel] = useState(\"\")\r\n\r\n    const [buttonIcon, setButtonIcon] = useState(Plus)\r\n\r\n    const [toggleDorpdown, setToggleDropdown] = useState(false)\r\n\r\n    const payload = payloadGenerator(label)\r\n   \r\n   \r\n    const newId =  id ? id : uuidv4()\r\n\r\n    useEffect(()=>{\r\n        console.log(mainProperty)\r\n        type == \"colorPicker\" ? setLocalLabel(input.iterable[0].label) : setLocalLabel(label)\r\n       \r\n        switch (icon) {\r\n            \r\n            case \"picker\":\r\n                setButtonIcon(colorPicker)\r\n                break;\r\n            case \"dropdown\":\r\n                setButtonIcon(DownArrow)\r\n                break;\r\n            case \"solid\": \r\n                setButtonIcon(ColorPlaceholder)\r\n                break;\r\n            case \"link\":\r\n                setButtonIcon(Link)\r\n                break;\r\n            default:\r\n                setButtonIcon(Plus)\r\n        }\r\n\r\n        dispatch({type: \"ADD_ONE_PROP\", payload:{\r\n            id: newId,\r\n            name: label,\r\n            textureTypes: TextureTypes(),\r\n            images: defaultImages\r\n        }}) \r\n\r\n        setInputs(generateInputs(input, type || null))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const globalStateCopy = globalState\r\n\r\n       if(path){\r\n           const loadEditedProperties = globalState.MaterialPorperties[path.activeProperty].textureTypes[path.activeTexture].tabTypes[path.activeTab]\r\n           const editedPropertyProgress = loadEditedProperties.properties.filter(x => x.id === id)[0]\r\n           console.log(editedPropertyProgress.progress, editedPropertyProgress.id)\r\n           //setProgress(editedPropertyProgress.progress)\r\n       }\r\n        \r\n        if(globalStateCopy.MaterialPorperties.length > 0 && id === undefined && openPopup && icon === undefined){\r\n         \r\n            dispatch({type: \"ADD_ACTIVE_MATERIAL_POPUP\", payload: {\r\n                id: globalStateCopy.MaterialPorperties.filter(x => x.name == label)[0].id\r\n            }})\r\n        }\r\n        else if(openPopup && icon === \"dropdown\"){\r\n            setToggleDropdown(!toggleDorpdown)\r\n        }else if( icon === \"link\"){\r\n            if(openPopup){\r\n                setButtonIcon(Unlink)\r\n            }else{\r\n                setButtonIcon(Link)\r\n            }\r\n        }\r\n            \r\n        \r\n    }, [openPopup])\r\n\r\n\r\n\r\n    return(\r\n        <div className={`w-full h_24 flex ${ type=== \"colorPicker\" ? \"mt-5\" : \"my-2\"} ${mainProperty ? \"my-2\" : \"my-4\"} text-almostBlack  `}>\r\n            <div className={` w-full flex items-center justify-between relative`}>\r\n               \r\n               {type !== \"colorPicker\" ?\r\n               \r\n               \r\n               <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"} normal-font`}>{localLabel}</p>\r\n               \r\n            :\r\n            <div   \r\n            className={` bg-lightGrey h-full w_48 flex justify-center items-center normal-font`}>\r\n            { localLabel} \r\n            <img className=\"\" src={DownArrow} />\r\n            </div>\r\n         \r\n            }\r\n                    \r\n\r\n        <div className={`flex ${type === \"buttonless\" && \"pr-8\"}`}>\r\n                <div className=\"flex\">\r\n\r\n                    {inputs && inputs.map((inp) => {\r\n                        return inp\r\n                    })}\r\n\r\n                </div>\r\n                {hasButton && <TextureButton \r\n                type={icon === undefined || icon !== \"dropdown\" && \"transparent\"}\r\n                openPopup={openPopup} \r\n                className={`${!mainProperty ? \"ml-1\" : \"ml-2\" }`} \r\n                img={buttonIcon} \r\n                alt=\"\" \r\n                setOpenPopup={setOpenPopup}/>}\r\n                {icon === \"dropdown\" && <Dropdown \r\n                setToggleDropdown={setToggleDropdown} \r\n                list={AnisotropyDefaults} \r\n                defaultState={toggleDorpdown} \r\n                style={{marginTop: \"-4px\"}}\r\n                className={`absolute z-10 w-28 bg-almostBlack text-almostWhite ${!toggleDorpdown && \"hidden\"}`}/>}\r\n        </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx",["177","178","179","180","181","182"],"import React, { useContext, useEffect, useRef, useState,useLayoutEffect } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n \r\nimport {generateProperties} from \"../TestData/generators\"\r\n\r\nimport Dropdown from \"../components/dropdown\"\r\nimport PopUpView from \"../components/popUpView\"\r\nimport Tab from \"../components/Tab\"\r\n\r\nfunction useOutsideAlerter(ref, dispatch, globalState) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if(globalState.MetaData.WorkspaceRef && event.target === globalState.MetaData.WorkspaceRef.current){\r\n                    \r\n                    dispatch({type: \"CLOSE_POPUP\"})\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, globalState]);\r\n}\r\n\r\nArray.prototype.move = function (from, to) {\r\n    this.splice(to, 0, this.splice(from, 1)[0]);\r\n  };\r\n\r\nfunction TexturePopup(props) {\r\n    const {globalState, dispatch}= useContext(TexturePorpertyContext)\r\n    \r\n    const [open, setOpen] = useState(true)\r\n    const [hover, setHover] = useState(false)\r\n    const popUpWindow = useRef(null)\r\n    \r\n    const [activeProperty, setActiveProperty] = useState(0) // The index of the active property e.g. Metalness\r\n    const [activeTexture, setActiveTexture] = useState(0) //The index of the active TextureType (Solid / Gradient / Image)\r\n    const [activeTab, setActiveTab] = useState(0) //The index of the active submenu currently open (e.g. Adjust / Transform)\r\n    const [activeType, setActiveType] = useState(0) // \r\n\r\n\r\n    const [properties, setProperties] = useState([])\r\n\r\n    useOutsideAlerter(popUpWindow, dispatch, globalState)\r\n\r\n    useEffect(() => {\r\n     \r\n\r\n           setOpen(globalState.MetaData.activeTexturePopup !== \"\")\r\n           setActiveTab(0)\r\n           setActiveType(0)\r\n           setActiveTexture(0)\r\n           if(globalState.MetaData.activeTexturePopup !== \"\") {\r\n               const globalStateCopy = globalState\r\n            let currentSelection = globalStateCopy.MaterialPorperties.filter(x => x.id === globalState.MetaData.activeTexturePopup)[0]\r\n            setActiveProperty(globalState.MaterialPorperties.indexOf(currentSelection))\r\n\r\n            \r\n           }\r\n        \r\n    }, [globalState.MetaData.activeTexturePopup])\r\n\r\n   useEffect(() => {\r\n   \r\n    if(activeProperty !== undefined && globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        const path = {\r\n            activeProperty: activeProperty,\r\n            activeTexture: activeTexture,\r\n            activeTab: activeTab,\r\n        }\r\n            const currentlySelectedProps = globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes[activeTab]\r\n            setProperties(currentlySelectedProps)\r\n            const newProperties = generateProperties(currentlySelectedProps, path)\r\n            setProperties(newProperties)\r\n\r\n\r\n            \r\n    }\r\n    const test = {\r\n        activeProperty: activeProperty,\r\n        activeTexture: activeTexture,\r\n        activeTab: activeTab,\r\n        activeType: activeType\r\n    }\r\n\r\n    console.table(test)\r\n\r\n    if( globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        console.log(globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture])\r\n    }\r\n\r\n   }, [activeProperty,activeTexture, activeTab, activeType, open])\r\n\r\n    function handleHoverStart() {\r\n       \r\n        setHover(true)\r\n    }\r\n\r\n    function handleHoverEnd(){\r\n        \r\n        setHover(false)\r\n    }\r\n\r\n\r\n  \r\n    return(\r\n        <div className=\"flex justify-end pt-60 select-none \"\r\n   >\r\n       {globalState.MaterialPorperties[activeType] ? \r\n         <div ref={popUpWindow} \r\n         className={`${open ? \"\" : \"hidden\"} \r\n         w_props-row  bg-white absolute rounded-sm overflow-hidden `} \r\n         style={{minHeight: \"350px\"}}>\r\n\r\n               <PopUpView  \r\n                       globalState={globalState}\r\n                       activeType={activeType}\r\n                       handleHoverStart={handleHoverStart}\r\n                       handleHoverEnd={handleHoverEnd}\r\n                       hover={hover}\r\n                       activeTexture={activeTexture}\r\n                       setActiveTexture={setActiveType}\r\n                       activeProperty={activeProperty}\r\n                       type={globalState.MaterialPorperties[activeProperty].textureTypes[activeType]}\r\n               />  \r\n           \r\n               \r\n             <div id=\"popUp_Properties transition-all duration-100 \" className=\"p-4 \">\r\n                \r\n                 \r\n                <Dropdown list={globalState.MaterialPorperties[activeProperty].textureTypes} type=\"solid\" dropdownSelection={activeTexture} setDropdownSelection={setActiveTexture} />\r\n                \r\n\r\n               {globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes.length > 1 && \r\n                <Tab tabOptions={ globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes} active={activeTab} setActive={setActiveTab}/>\r\n                } \r\n                \r\n\r\n               {properties && properties.map((prop) => {\r\n                   return prop\r\n               })}\r\n\r\n             </div>\r\n         </div>\r\n         : <div></div> }\r\n   </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TexturePopup","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx",["183","184","185"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { generateInputs } from \"../TestData/generators\"\r\n\r\n\r\n\r\nfunction Switch(props){\r\n    const {\r\n        id,\r\n        axis,\r\n        unit\r\n        } = props\r\n        const checkboxRef = useRef(null)\r\n        const [state, setState] = useState(false)\r\n\r\n        console.log(id, axis)\r\n        function handleChange(e){\r\n            console.log(checkboxRef.current.checked)\r\n            \r\n            setState(!state)\r\n            checkboxRef.current.checked = state\r\n        }\r\n\r\n    return(\r\n        <div id={id} onClick={handleChange} className={` w_56 h-full flex justify-between items-center ml-2`}>\r\n            <p className=\"font-normal normal-font text-midGrey pl-1\">{axis}</p>\r\n            <div  className={` ${state ? \"bg-primary justify-end\" :  \"bg-midGrey\"}  rounded-xl w_24 h-3 flex `}>\r\n\r\n                <div id=\"knot\" className=\"w-2 h-2 bg-almostWhite m-0.5 rounded-xl\">\r\n                        <input ref={checkboxRef} className=\"opacity-0 w-0 h-0\" type=\"checkbox\" />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Switch","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInputByPercentage.jsx",["186","187","188","189","190","191"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\nimport { parse } from \"postcss\"\r\n\r\n\r\nfunction GrowingInputByPercentage(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n    const [update, setUpdate] = useState(0)\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n    const [editableText, setEditableText] = useState(false)\r\n    const [indicator, setIndicator] = useState(false)\r\n    \r\n    const inputRef = useRef(null)\r\n\r\n\r\n\r\n    let limit = 0.1\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\n    let num = 0\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(multiplyer > 0) {\r\n            setGrowIcon(ArrowGrowUp)\r\n        }else{\r\n            setGrowIcon(ArrowGrowDown)\r\n        }\r\n\r\n      \r\n\r\n\r\n       \r\n        if(dynamicValue === false){\r\n            setDynamicValue(0 + unit )\r\n        }else{\r\n            const processedDynamicValue = parseInt(dynamicValue.split(`${unit}`).join(\"\"))\r\n            \r\n            if(processedDynamicValue === 0) {\r\n                setDynamicValue(Math.ceil(2 * multiplyer) + unit)\r\n            }else{\r\n               if(multiplyer > 0.005){\r\n                    setDynamicValue(Math.ceil(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n               }else if (multiplyer < -0.005) {\r\n                     setDynamicValue(Math.floor(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n                \r\n               }else{\r\n                    setDynamicValue(processedDynamicValue + unit)    \r\n               }\r\n            }\r\n            \r\n        }\r\n        \r\n    }, [multiplyer, update])\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n      \r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location, dynamicData) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - location\r\n           let changingFactor = map_float_range(difference, -100, 100, -limit, limit)\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            counter++\r\n           \r\n           \r\n            if(changingFactor > 0){\r\n\r\n                if(changingFactor > limit){\r\n                    return limit\r\n                }else{\r\n                    return changingFactor\r\n                }\r\n\r\n            }else{\r\n                \r\n                if(changingFactor < -limit){\r\n                    return limit * -1\r\n                }else{\r\n                   return changingFactor\r\n                }\r\n\r\n            }\r\n\r\n            \r\n           }\r\n           setTimeout(() => {\r\n              \r\n            //console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            //num += parseInt( adjustChange() )\r\n            setMultiplyer(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    function pauseEvent(e){\r\n        if(e.stopPropagation) e.stopPropagation();\r\n        if(e.preventDefault) e.preventDefault();\r\n        e.cancelBubble=true;\r\n        e.returnValue=false;\r\n        return false;\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        if(selection === \"\") {\r\n            inputRef.current.select()\r\n            setEditableText(true)\r\n        }else{\r\n            setEditableText(false)\r\n        }\r\n        console.log(selection)\r\n      \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n     \r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n       \r\n        \r\n        dragOver = false\r\n\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        if(selection === \"\") {\r\n      \r\n        function infinity() {\r\n           \r\n            if(!dragOver ){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                  // e.target.select()\r\n                    handleDrag(userLocation)\r\n                    \r\n                   // console.log(\"down\")\r\n                    if(counter % 2 === 0){\r\n                        setUpdate(update+ 1)\r\n                       }else{\r\n                        setUpdate(false)\r\n                       }\r\n                      \r\n                    infinity()\r\n                }, 100)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            infinity()\r\n            setEditableText(false)\r\n        }, 500)\r\n    }\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={pauseEvent}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={pauseEvent}\r\n            onFocus={() => {setIndicator(true)}}\r\n            onBlur={() => {setIndicator(false)}}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            { hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n            {(!hover && indicator) &&\r\n              <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n              <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n          </div>}\r\n            \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GrowingInputByPercentage","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["192","193"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx",["194","195","196","197","198","199"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx",["200","201","202","203","204","205"],{"ruleId":"206","severity":1,"message":"207","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"206","severity":1,"message":"210","line":26,"column":12,"nodeType":"208","messageId":"209","endLine":26,"endColumn":24},{"ruleId":"206","severity":1,"message":"211","line":40,"column":9,"nodeType":"208","messageId":"209","endLine":40,"endColumn":12},{"ruleId":"212","severity":1,"message":"213","line":76,"column":8,"nodeType":"214","endLine":76,"endColumn":28,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":263,"column":17,"nodeType":"218","endLine":263,"endColumn":72},{"ruleId":"216","severity":1,"message":"217","line":272,"column":15,"nodeType":"218","endLine":272,"endColumn":70},{"ruleId":"206","severity":1,"message":"219","line":9,"column":7,"nodeType":"208","messageId":"209","endLine":9,"endColumn":13},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"206","severity":1,"message":"224","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":14},{"ruleId":"206","severity":1,"message":"225","line":12,"column":9,"nodeType":"208","messageId":"209","endLine":12,"endColumn":21},{"ruleId":"206","severity":1,"message":"226","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"227","line":1,"column":16,"nodeType":"208","messageId":"209","endLine":1,"endColumn":24},{"ruleId":"206","severity":1,"message":"228","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":17},{"ruleId":"220","replacedBy":"229"},{"ruleId":"222","replacedBy":"230"},{"ruleId":"206","severity":1,"message":"228","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"206","severity":1,"message":"231","line":9,"column":16,"nodeType":"208","messageId":"209","endLine":9,"endColumn":22},{"ruleId":"206","severity":1,"message":"232","line":26,"column":8,"nodeType":"208","messageId":"209","endLine":26,"endColumn":20},{"ruleId":"206","severity":1,"message":"233","line":32,"column":10,"nodeType":"208","messageId":"209","endLine":32,"endColumn":21},{"ruleId":"212","severity":1,"message":"234","line":42,"column":6,"nodeType":"214","endLine":42,"endColumn":20,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":20,"column":107,"nodeType":"238","messageId":"239","endLine":20,"endColumn":109},{"ruleId":"220","replacedBy":"240"},{"ruleId":"222","replacedBy":"241"},{"ruleId":"206","severity":1,"message":"242","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"243","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":16},{"ruleId":"206","severity":1,"message":"244","line":7,"column":12,"nodeType":"208","messageId":"209","endLine":7,"endColumn":28},{"ruleId":"206","severity":1,"message":"245","line":7,"column":30,"nodeType":"208","messageId":"209","endLine":7,"endColumn":49},{"ruleId":"220","replacedBy":"246"},{"ruleId":"222","replacedBy":"247"},{"ruleId":"206","severity":1,"message":"242","line":1,"column":16,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"217","line":33,"column":122,"nodeType":"218","endLine":33,"endColumn":145},{"ruleId":"216","severity":1,"message":"217","line":34,"column":122,"nodeType":"218","endLine":34,"endColumn":145},{"ruleId":"216","severity":1,"message":"217","line":35,"column":97,"nodeType":"218","endLine":35,"endColumn":116},{"ruleId":"206","severity":1,"message":"248","line":18,"column":9,"nodeType":"208","messageId":"209","endLine":18,"endColumn":18},{"ruleId":"206","severity":1,"message":"249","line":24,"column":12,"nodeType":"208","messageId":"209","endLine":24,"endColumn":24},{"ruleId":"250","severity":1,"message":"251","line":35,"column":9,"nodeType":"252","messageId":"253","endLine":49,"endColumn":10},{"ruleId":"212","severity":1,"message":"254","line":51,"column":8,"nodeType":"214","endLine":51,"endColumn":18,"suggestions":"255"},{"ruleId":"250","severity":1,"message":"251","line":55,"column":9,"nodeType":"252","messageId":"253","endLine":69,"endColumn":10},{"ruleId":"212","severity":1,"message":"256","line":72,"column":8,"nodeType":"214","endLine":72,"endColumn":18,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":129,"column":13,"nodeType":"260","messageId":"239","endLine":129,"endColumn":23},{"ruleId":"206","severity":1,"message":"211","line":37,"column":9,"nodeType":"208","messageId":"209","endLine":37,"endColumn":12},{"ruleId":"212","severity":1,"message":"261","line":57,"column":8,"nodeType":"214","endLine":57,"endColumn":28,"suggestions":"262"},{"ruleId":"216","severity":1,"message":"217","line":233,"column":17,"nodeType":"218","endLine":233,"endColumn":75},{"ruleId":"206","severity":1,"message":"263","line":17,"column":12,"nodeType":"208","messageId":"209","endLine":17,"endColumn":22},{"ruleId":"206","severity":1,"message":"264","line":17,"column":24,"nodeType":"208","messageId":"209","endLine":17,"endColumn":37},{"ruleId":"206","severity":1,"message":"265","line":1,"column":58,"nodeType":"208","messageId":"209","endLine":1,"endColumn":73},{"ruleId":"206","severity":1,"message":"266","line":10,"column":9,"nodeType":"208","messageId":"209","endLine":10,"endColumn":25},{"ruleId":"212","severity":1,"message":"267","line":61,"column":8,"nodeType":"214","endLine":61,"endColumn":10,"suggestions":"268"},{"ruleId":"236","severity":1,"message":"237","line":78,"column":75,"nodeType":"238","messageId":"239","endLine":78,"endColumn":77},{"ruleId":"212","severity":1,"message":"269","line":83,"column":8,"nodeType":"214","endLine":83,"endColumn":19,"suggestions":"270"},{"ruleId":"212","severity":1,"message":"271","line":94,"column":8,"nodeType":"214","endLine":94,"endColumn":18,"suggestions":"272"},{"ruleId":"212","severity":1,"message":"273","line":100,"column":8,"nodeType":"214","endLine":100,"endColumn":49,"suggestions":"274"},{"ruleId":"212","severity":1,"message":"275","line":123,"column":8,"nodeType":"214","endLine":123,"endColumn":23,"suggestions":"276"},{"ruleId":"236","severity":1,"message":"277","line":129,"column":42,"nodeType":"238","messageId":"239","endLine":129,"endColumn":44},{"ruleId":"278","severity":1,"message":"279","line":143,"column":17,"nodeType":"280","endLine":143,"endColumn":36},{"ruleId":"236","severity":1,"message":"277","line":162,"column":34,"nodeType":"238","messageId":"239","endLine":162,"endColumn":36},{"ruleId":"206","severity":1,"message":"281","line":1,"column":38,"nodeType":"208","messageId":"209","endLine":1,"endColumn":44},{"ruleId":"206","severity":1,"message":"265","line":1,"column":58,"nodeType":"208","messageId":"209","endLine":1,"endColumn":73},{"ruleId":"206","severity":1,"message":"282","line":36,"column":9,"nodeType":"208","messageId":"209","endLine":36,"endColumn":13},{"ruleId":"206","severity":1,"message":"283","line":38,"column":9,"nodeType":"208","messageId":"209","endLine":38,"endColumn":20},{"ruleId":"206","severity":1,"message":"284","line":50,"column":11,"nodeType":"208","messageId":"209","endLine":50,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":57,"column":14,"nodeType":"238","messageId":"239","endLine":57,"endColumn":16},{"ruleId":"212","severity":1,"message":"285","line":85,"column":8,"nodeType":"214","endLine":85,"endColumn":10,"suggestions":"286"},{"ruleId":"236","severity":1,"message":"237","line":100,"column":75,"nodeType":"238","messageId":"239","endLine":100,"endColumn":77},{"ruleId":"212","severity":1,"message":"287","line":114,"column":8,"nodeType":"214","endLine":114,"endColumn":19,"suggestions":"288"},{"ruleId":"216","severity":1,"message":"217","line":131,"column":13,"nodeType":"218","endLine":131,"endColumn":49},{"ruleId":"289","severity":1,"message":"290","line":146,"column":42,"nodeType":"291","messageId":"292","endLine":146,"endColumn":44},{"ruleId":"289","severity":1,"message":"290","line":146,"column":65,"nodeType":"291","messageId":"292","endLine":146,"endColumn":67},{"ruleId":"206","severity":1,"message":"265","line":1,"column":57,"nodeType":"208","messageId":"209","endLine":1,"endColumn":72},{"ruleId":"206","severity":1,"message":"293","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":17},{"ruleId":"212","severity":1,"message":"294","line":33,"column":8,"nodeType":"214","endLine":33,"endColumn":26,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":36,"column":1,"nodeType":"298","messageId":"239","endLine":38,"endColumn":4},{"ruleId":"212","severity":1,"message":"299","line":72,"column":8,"nodeType":"214","endLine":72,"endColumn":49,"suggestions":"300"},{"ruleId":"212","severity":1,"message":"301","line":103,"column":7,"nodeType":"214","endLine":103,"endColumn":66,"suggestions":"302"},{"ruleId":"206","severity":1,"message":"242","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"303","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":24},{"ruleId":"206","severity":1,"message":"304","line":10,"column":9,"nodeType":"208","messageId":"209","endLine":10,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"206","severity":1,"message":"210","line":26,"column":12,"nodeType":"208","messageId":"209","endLine":26,"endColumn":24},{"ruleId":"206","severity":1,"message":"211","line":40,"column":9,"nodeType":"208","messageId":"209","endLine":40,"endColumn":12},{"ruleId":"212","severity":1,"message":"213","line":76,"column":8,"nodeType":"214","endLine":76,"endColumn":28,"suggestions":"305"},{"ruleId":"216","severity":1,"message":"217","line":263,"column":17,"nodeType":"218","endLine":263,"endColumn":72},{"ruleId":"216","severity":1,"message":"217","line":272,"column":15,"nodeType":"218","endLine":272,"endColumn":70},{"ruleId":"206","severity":1,"message":"226","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"306","severity":1,"message":"307","line":33,"column":13,"nodeType":"308","messageId":"309","endLine":33,"endColumn":19},{"ruleId":"250","severity":1,"message":"251","line":54,"column":5,"nodeType":"252","messageId":"253","endLine":61,"endColumn":6},{"ruleId":"310","severity":1,"message":"311","line":67,"column":55,"nodeType":"312","messageId":"313","endLine":67,"endColumn":57},{"ruleId":"250","severity":1,"message":"251","line":69,"column":9,"nodeType":"252","messageId":"253","endLine":135,"endColumn":10},{"ruleId":"250","severity":1,"message":"251","line":102,"column":21,"nodeType":"252","messageId":"253","endLine":115,"endColumn":22},{"ruleId":"310","severity":1,"message":"311","line":148,"column":37,"nodeType":"312","messageId":"313","endLine":148,"endColumn":39},{"ruleId":"236","severity":1,"message":"277","line":150,"column":68,"nodeType":"238","messageId":"239","endLine":150,"endColumn":70},{"ruleId":"206","severity":1,"message":"314","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":54,"column":60,"nodeType":"238","messageId":"239","endLine":54,"endColumn":62},{"ruleId":"236","severity":1,"message":"237","line":60,"column":20,"nodeType":"238","messageId":"239","endLine":60,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":68,"column":17,"nodeType":"218","endLine":68,"endColumn":146},{"ruleId":"236","severity":1,"message":"237","line":68,"column":32,"nodeType":"238","messageId":"239","endLine":68,"endColumn":34},{"ruleId":"216","severity":1,"message":"217","line":72,"column":18,"nodeType":"218","endLine":74,"endColumn":73},"no-unused-vars","'parse' is defined but never used.","Identifier","unusedVar","'editableText' is assigned a value but never used.","'num' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dynamicValue' and 'unit'. Either include them or remove the dependency array.","ArrayExpression",["315"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'reload' is assigned a value but never used.","no-native-reassign",["316"],"no-negated-in-lhs",["317"],"'Switch' is defined but never used.","'handleChange' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'_uniqueId' is defined but never used.",["316"],["317"],"'uuidv4' is defined but never used.","'GrowingInput' is defined but never used.","'globalState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["318"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["316"],["317"],"'useEffect' is defined but never used.","'Material' is defined but never used.","'legacyCodeLoader' is assigned a value but never used.","'setLegacyCodeLoader' is assigned a value but never used.",["316"],["317"],"'hasButton' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["320"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","React Hook useEffect has a missing dependency: 'dynamicValue'. Either include it or remove the dependency array. You can also do a functional update 'setDynamicValue(d => ...)' if you only need 'dynamicValue' in the 'setDynamicValue' call.",["321"],"'multiplyer' is assigned a value but never used.","'setMultiplyer' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'payloadGenerator' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.",["322"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["325"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["326"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'plus' is assigned a value but never used.","'buttonClick' is assigned a value but never used.","'payload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'icon', 'input', 'label', 'mainProperty', 'newId', and 'type'. Either include them or remove the dependency array.",["327"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'icon', 'id', 'label', 'path', and 'toggleDorpdown'. Either include them or remove the dependency array. You can also do a functional update 'setToggleDropdown(t => ...)' if you only need 'toggleDorpdown' in the 'setToggleDropdown' call.",["328"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Draggable' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["329"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["330"],"React Hook useEffect has a missing dependency: 'globalState.MaterialPorperties'. Either include it or remove the dependency array.",["331"],"'generateInputs' is defined but never used.","'unit' is assigned a value but never used.",["332"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useContext' is defined but never used.",{"desc":"333","fix":"334"},"no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"333","fix":"362"},"Update the dependencies array to be: [dynamicValue, multiplyer, unit, update]",{"range":"363","text":"364"},"Update the dependencies array to be: [WorkSpaceRef, dispatch]",{"range":"365","text":"366"},"Update the dependencies array to be: [progress, propName]",{"range":"367","text":"368"},{"range":"369","text":"368"},"Update the dependencies array to be: [dynamicValue, multiplyer, update]",{"range":"370","text":"371"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"374","text":"375"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"376","text":"377"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"378","text":"379"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"380","text":"381"},"Update the dependencies array to be: [dispatch, icon, input, label, mainProperty, newId, type]",{"range":"382","text":"383"},"Update the dependencies array to be: [dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",{"range":"384","text":"385"},"Update the dependencies array to be: [ref, globalState, dispatch]",{"range":"386","text":"387"},"Update the dependencies array to be: [globalState, globalState.MetaData.activeTexturePopup]",{"range":"388","text":"389"},"Update the dependencies array to be: [activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",{"range":"390","text":"391"},{"range":"392","text":"364"},[2064,2084],"[dynamicValue, multiplyer, unit, update]",[1428,1442],"[WorkSpaceRef, dispatch]",[1414,1424],"[progress, propName]",[2018,2028],[1277,1297],"[dynamicValue, multiplyer, update]",[1593,1595],"[dispatch, newId, propName]",[2425,2436],"[dispatch, globalState, id, openPopup, path, propName]",[2736,2746],"[dispatch, id, path, progress]",[2889,2930],"[globalState.MetaData.activeTexturePopup, id, propName]",[3466,3481],"[progress, max, maximum]",[2552,2554],"[dispatch, icon, input, label, mainProperty, newId, type]",[3696,3707],"[dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",[1199,1217],"[ref, globalState, dispatch]",[2692,2733],"[globalState, globalState.MetaData.activeTexturePopup]",[3752,3811],"[activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",[2083,2103]]