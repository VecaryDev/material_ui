[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx":"6"},{"size":8624,"mtime":1610644822726,"results":"7","hashOfConfig":"8"},{"size":718,"mtime":1610114473846,"results":"9","hashOfConfig":"8"},{"size":942,"mtime":1610362481792,"results":"10","hashOfConfig":"8"},{"size":197,"mtime":1610548403904,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1608257534771,"results":"12","hashOfConfig":"8"},{"size":2723,"mtime":1610035759123,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"11grfy6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["27","28","29","30","31","32","33","34","35","36"],"\r\n\r\nimport React, { useEffect, useRef, useState, useContext } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\n\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {addSelfDestructingEventListener, pauseEvent} from \"../TestData/functions\"\r\n\r\n\r\nfunction Input(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState({x: 0, y:0})\r\n    const [sliderState, setSliderState] = useState(\"\")\r\n\r\n    const [cursorPos, setCursorPos] = useState({x: 0, y: 0})\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n    const [update,setUpdate] = useState(false)\r\n\r\n    const [selection, setSelection] = useState([])\r\n   \r\n    \r\n    const [inputCoordinates, setInputCoordinates] = useState(null)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    const sliderCursor = globalState.MetaData.grwothRef.current\r\n\r\n    let limit = 0.1\r\n\r\n    const registrationTimer = 400\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(update){\r\n        setDynamicValue(dynamicValue + multiplyer.y *-1)\r\n        const newPos = {\r\n            x:  cursorPos.x + multiplyer.x > window.innerWidth - 25  ? window.innerWidth - 25 : cursorPos.x + multiplyer.x < 0 ? 0 : cursorPos.x + multiplyer.x ,\r\n            y: cursorPos.y + multiplyer.y >  window.innerHeight ? 0 : cursorPos.y + multiplyer.y > 0 ? cursorPos.y + multiplyer.y : window.innerHeight\r\n        }\r\n\r\n        setCursorPos(newPos)\r\n        console.log(newPos,  cursorPos)\r\n\r\n      \r\n\r\n        sliderCursor.style.top = `${cursorPos.y}px`\r\n        sliderCursor.style.left = `${cursorPos.x}px`\r\n        \r\n       // sliderCursor.style.left = `${e.clientX}px`\r\n        }\r\n\r\n    }, [multiplyer, update])\r\n\r\n    function changeCallback(e) {\r\n       if(inputRef !== null ) {\r\n           \r\n            if(document.pointerLockElement === inputRef.current || document.webkitPointerLockElement === inputRef.current){\r\n               if(sliderState !== \"active\") {\r\n              //  console.log(\"Added\")\r\n                document.addEventListener(\"mousemove\", moveCallback, true);\r\n                setSliderState(\"active\")\r\n               }\r\n            }else{\r\n                if(sliderState !== \"inactive\") {\r\n                setUpdate(false)\r\n                sliderCursor.classList.add(\"hidden\")\r\n                document.removeEventListener(\"mousemove\", moveCallback, true);\r\n                setSliderState(\"inactive\")\r\n                }\r\n            }\r\n\r\n       }\r\n       \r\n    }\r\n\r\n    function moveCallback(e) {\r\n        var movementX = e.movementX ||\r\n        e.mozMovementX          ||\r\n        e.webkitMovementX       ||\r\n        0,\r\n    movementY = e.movementY ||\r\n        e.mozMovementY      ||\r\n        e.webkitMovementY   ||\r\n        0;\r\n      \r\n\r\n        sliderCursor.classList.remove(\"hidden\")\r\n\r\n        if(inputRef !== null) {\r\n            setMultiplyer({x: movementX  , y: movementY  })\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(inputRef !== null){\r\n            setInputCoordinates(inputRef.current.getBoundingClientRect())\r\n            setCursorPos({x: inputRef.current.getBoundingClientRect().x + 35, y: inputRef.current.getBoundingClientRect().top })\r\n           console.log( globalState.MetaData.offsetY )\r\n        }\r\n    }, [globalState.MetaData])\r\n\r\nuseEffect(() => {\r\n\r\n    document.addEventListener('pointerlockchange', changeCallback, false);\r\n    document.addEventListener('mozpointerlockchange', changeCallback, false);\r\n    document.addEventListener('webkitpointerlockchange', changeCallback, false);\r\n\r\n    // Hook mouse move events\r\n    setDynamicValue(0)\r\n}, [])\r\n    \r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(parseInt )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n      \r\n      \r\n\r\n    }\r\n\r\n\r\n    function tryit() {\r\n \r\n        \r\n        document.exitPointerLock = document.exitPointerLock ||\r\n        document.mozExitPointerLock ||\r\n        document.webkitExitPointerLock;\r\n\r\n        document.removeEventListener(\"mousemove\", moveCallback, true);\r\n        \r\n        document.exitPointerLock();\r\n\r\n        inputRef.current.select()\r\n\r\n        sliderCursor.style.top = `0px`\r\n        sliderCursor.style.left = `0px`\r\n        if(sliderCursor.classList !== undefined){\r\n            sliderCursor.classList.add(\"hidden\")\r\n            const nullValue = {x: 0, y:0}\r\n            setCursorPos({\r\n                x: inputRef.current.getBoundingClientRect().x + 50,\r\n                y: inputRef.current.getBoundingClientRect().top\r\n            })\r\n            setMultiplyer(nullValue)\r\n            console.log(  )\r\n        }\r\n      \r\n       \r\n    }\r\n\r\n\r\n    function executeSliderChange(e) {\r\n        const element = e.target\r\n\r\n        setCursorPos({\r\n            x: inputRef.current.getBoundingClientRect().x + 50,\r\n            y: inputRef.current.getBoundingClientRect().top\r\n        })\r\n        \r\n\r\n        element.requestPointerLock = element.requestPointerLock ||\r\n\t\t\t     element.mozRequestPointerLock ||\r\n\t\t\t     element.webkitRequestPointerLock;\r\n        // Ask the browser to lock the pointer\r\n        \r\n        \r\n\r\n        element.requestPointerLock();\r\n\r\n        setTimeout(() => {\r\n            setUpdate(true)\r\n        }, registrationTimer)\r\n        \r\n     \r\n\r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n       if(e.code === \"ArrowUp\"){\r\n        e.preventDefault()\r\n        setDynamicValue(parseInt(dynamicValue + 1))\r\n\r\n       \r\n\r\n       }else if(e.code === \"ArrowDown\"){\r\n        e.preventDefault()\r\n        setDynamicValue(parseInt(dynamicValue - 1))\r\n\r\n        \r\n       }else if(e.code.includes(\"Numpad\") || e.code.includes(\"Digit\")){\r\n           \r\n\r\n           if(selection !== undefined){\r\n            const splitValue = `${dynamicValue}`.split(\"\")\r\n            splitValue.splice(selection.selectionStart, selection.selectionLength, `${e.key}`)\r\n            setDynamicValue(parseInt(splitValue.join(\"\")))\r\n            \r\n           }else{\r\n            setDynamicValue(parseInt(dynamicValue + `${e.key}`))\r\n           }\r\n           \r\n           console.log(e.key, dynamicValue, dynamicValue + `${e.key}`, e.target.selectionStart , e.target.selectionEnd )\r\n       }else if(e.code === \"Enter\"){\r\n\r\n            \r\n\r\n       }\r\n       \r\n\r\n       \r\n       \r\n    }\r\n\r\n    function handleSelection(e) {\r\n        const start = e.target.selectionStart\r\n        const end = e.target.selectionEnd\r\n        if(start === end){\r\n            setSelection(undefined)\r\n\r\n        }else{\r\n            setSelection({\r\n                selectionStart: start,\r\n                selectionLength: end - start\r\n            })\r\n\r\n        }\r\n\r\n       \r\n        \r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input\r\n            id={uuidv4()}\r\n            onClick={handleSelect}\r\n             onDrag={pauseEvent}\r\n             onMouseDown={executeSliderChange}\r\n            onKeyDown={handleKeyDown}\r\n            onDrop={pauseEvent}\r\n           onSelect={handleSelection}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n           \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            { hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n           \r\n\r\n           \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["37"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx",["38","39","40","41"],{"ruleId":"42","severity":1,"message":"43","line":5,"column":9,"nodeType":"44","messageId":"45","endLine":5,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":19},{"ruleId":"42","severity":1,"message":"47","line":8,"column":8,"nodeType":"44","messageId":"45","endLine":8,"endColumn":21},{"ruleId":"42","severity":1,"message":"48","line":26,"column":25,"nodeType":"44","messageId":"45","endLine":26,"endColumn":33},{"ruleId":"42","severity":1,"message":"49","line":39,"column":12,"nodeType":"44","messageId":"45","endLine":39,"endColumn":28},{"ruleId":"42","severity":1,"message":"50","line":45,"column":9,"nodeType":"44","messageId":"45","endLine":45,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":70,"column":8,"nodeType":"53","endLine":70,"endColumn":28,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":130,"column":4,"nodeType":"53","endLine":130,"endColumn":6,"suggestions":"56"},{"ruleId":"42","severity":1,"message":"57","line":135,"column":13,"nodeType":"44","messageId":"45","endLine":135,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":291,"column":17,"nodeType":"60","endLine":291,"endColumn":72},{"ruleId":"42","severity":1,"message":"61","line":9,"column":7,"nodeType":"44","messageId":"45","endLine":9,"endColumn":13},{"ruleId":"42","severity":1,"message":"62","line":13,"column":9,"nodeType":"44","messageId":"45","endLine":13,"endColumn":18},{"ruleId":"42","severity":1,"message":"63","line":15,"column":9,"nodeType":"44","messageId":"45","endLine":15,"endColumn":17},{"ruleId":"42","severity":1,"message":"64","line":21,"column":12,"nodeType":"44","messageId":"45","endLine":21,"endColumn":24},{"ruleId":"51","severity":1,"message":"65","line":55,"column":8,"nodeType":"53","endLine":55,"endColumn":18,"suggestions":"66"},"no-unused-vars","'map_float_range' is defined but never used.","Identifier","unusedVar","'ArrowGrowUp' is defined but never used.","'ArrowGrowDown' is defined but never used.","'dispatch' is assigned a value but never used.","'inputCoordinates' is assigned a value but never used.","'limit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cursorPos', 'dynamicValue', and 'sliderCursor.style'. Either include them or remove the dependency array. You can also do a functional update 'setDynamicValue(d => ...)' if you only need 'dynamicValue' in the 'setDynamicValue' call.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'changeCallback'. Either include it or remove the dependency array.",["68"],"'newInput' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'reload' is assigned a value but never used.","'hasButton' is assigned a value but never used.","'maxLimit' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dragPos' and 'reveredRemap'. Either include them or remove the dependency array.",["69"],{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [cursorPos, dynamicValue, multiplyer, sliderCursor.style, update]",{"range":"76","text":"77"},"Update the dependencies array to be: [changeCallback]",{"range":"78","text":"79"},"Update the dependencies array to be: [dragPos, progress, reveredRemap]",{"range":"80","text":"81"},[2161,2181],"[cursorPos, dynamicValue, multiplyer, sliderCursor.style, update]",[4090,4092],"[changeCallback]",[1366,1376],"[dragPos, progress, reveredRemap]"]