[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\PopUpImageHover.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx":"16","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"17","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx":"18","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx":"19","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx":"20","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx":"21","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx":"22","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx":"23","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx":"24","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx":"25","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js":"26"},{"size":718,"mtime":1610114473846,"results":"27","hashOfConfig":"28"},{"size":5173,"mtime":1610120471087,"results":"29","hashOfConfig":"28"},{"size":195,"mtime":1610125874422,"results":"30","hashOfConfig":"28"},{"size":1224,"mtime":1610035606263,"results":"31","hashOfConfig":"28"},{"size":860,"mtime":1610025191652,"results":"32","hashOfConfig":"28"},{"size":876,"mtime":1610125651834,"results":"33","hashOfConfig":"28"},{"size":1158,"mtime":1610038841731,"results":"34","hashOfConfig":"28"},{"size":1795,"mtime":1609754441871,"results":"35","hashOfConfig":"28"},{"size":2746,"mtime":1610124490937,"results":"36","hashOfConfig":"28"},{"size":8612,"mtime":1610126372570,"results":"37","hashOfConfig":"28"},{"size":2723,"mtime":1610035759123,"results":"38","hashOfConfig":"28"},{"size":911,"mtime":1610126098399,"results":"39","hashOfConfig":"28"},{"size":1509,"mtime":1609245326458,"results":"40","hashOfConfig":"28"},{"size":823,"mtime":1610119729348,"results":"41","hashOfConfig":"28"},{"size":768,"mtime":1609762580592,"results":"42","hashOfConfig":"28"},{"size":5911,"mtime":1610098771615,"results":"43","hashOfConfig":"28"},{"size":3669,"mtime":1610023436721,"results":"44","hashOfConfig":"28"},{"size":1139,"mtime":1610098659398,"results":"45","hashOfConfig":"28"},{"size":974,"mtime":1610123159683,"results":"46","hashOfConfig":"28"},{"size":825,"mtime":1610046204842,"results":"47","hashOfConfig":"28"},{"size":2680,"mtime":1610124331006,"results":"48","hashOfConfig":"28"},{"size":532,"mtime":1609763545216,"results":"49","hashOfConfig":"28"},{"size":5635,"mtime":1610098859353,"results":"50","hashOfConfig":"28"},{"size":486,"mtime":1610024174169,"results":"51","hashOfConfig":"28"},{"size":2542,"mtime":1610021513988,"results":"52","hashOfConfig":"28"},{"size":8640,"mtime":1610097042231,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"11grfy6",{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["120"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["121","122"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["123","124","125","126","127","128","129","130","131","132","133"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["134","135"],"import React from \"react\"\r\n\r\nexport const MaterialPropertyReducer =(state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ONE_PROP\":\r\n            return [\r\n               ...state,\r\n             state.filter(x => x.id === action.payload.id).length === 0 &&\r\n             {       \r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                textureTypes: action.payload.textureTypes,\r\n                images: action.payload.images ? action.payload.images : [] \r\n     }           \r\n                    \r\n                \r\n            ]\r\n            case \"REMOVE_ONE_PROP\": \r\n            return state.filter(item => item.id !== action.id)\r\n\r\n            case \"UPDATE_POPUP_PROPERTY\": \r\n            const path = action.payload.path\r\n            \r\n            const newState = state\r\n            newState[path.activeProperty]\r\n            .textureTypes[path.activeTexture]\r\n            .tabTypes[path.activeTab]\r\n            .properties.filter(x => x.id === action.payload.id)[0]\r\n            .progress = action.payload.progress\r\n      \r\n            return newState\r\n            break;\r\n\r\n            default: \r\n            return state\r\n            \r\n    } \r\n        \r\n\r\n}","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MetaDataReducer.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx",["136","137","138"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { generateInputs } from \"../TestData/generators\"\r\n\r\n\r\n\r\nfunction Switch(props){\r\n    const {\r\n        id,\r\n        axis,\r\n        unit\r\n        } = props\r\n        const checkboxRef = useRef(null)\r\n        const [state, setState] = useState(false)\r\n\r\n        console.log(id, axis)\r\n        function handleChange(e){\r\n            console.log(checkboxRef.current.checked)\r\n            \r\n            setState(!state)\r\n            checkboxRef.current.checked = state\r\n        }\r\n\r\n    return(\r\n        <div id={id} onClick={handleChange} className={` w_56 h-full flex justify-between items-center ml-2`}>\r\n            <p className=\"font-normal text-sx text-midGrey pl-1\">{axis}</p>\r\n            <div  className={` ${state ? \"bg-primary justify-end\" :  \"bg-midGrey\"}  rounded-xl w_24 h-3 flex `}>\r\n\r\n                <div id=\"knot\" className=\"w-2 h-2 bg-almostWhite m-0.5 rounded-xl\">\r\n                        <input ref={checkboxRef} className=\"opacity-0 w-0 h-0\" type=\"checkbox\" />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Switch",["139","140"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\functions.jsx",["141","142","143"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useEffect, useState, useRef, useContext, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport DownArrow from \"../img/Symbols/Sprites/ArrowDown.svg\"\r\n\r\nimport {generateInputs, payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport colorPicker from \"../img/Symbols/Sprites/PipetteColor.svg\"\r\n\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nfunction LabeledInput(props) {\r\n    const {\r\n        id,\r\n        label,\r\n        labelType,\r\n        input,\r\n        type,\r\n        handleChange,\r\n        plus,\r\n        hasButton\r\n    } = props\r\n    const mainProperty = props.mainProperty !== undefined ? props.mainProperty : true\r\n    const [inputs, setInputs] = useState([])\r\n    const {globalState, dispatch}= useContext(TexturePorpertyContext)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const initialRender = useRef(true)\r\n    const [localLabel, setLocalLabel] = useState(\"\")\r\n\r\n    const [values, setValues] = useState({})\r\n\r\n    const payload = payloadGenerator(label)\r\n   \r\n   \r\n\r\n    useEffect(()=>{\r\n        console.log(mainProperty)\r\n        type == \"colorPicker\" ? setLocalLabel(input.iterable[0].label) : setLocalLabel(label)\r\n       \r\n        \r\n\r\n        setInputs(generateInputs(input, type || null))\r\n    }, [])\r\n\r\n    return(\r\n        <div className={`w-full h_24 flex ${ type=== \"colorPicker\" ? \"mt-5\" : \"my-2\"} ${mainProperty ? \"my-2\" : \"my-4\"}`}>\r\n            <div className={` w-full flex items-center justify-between`}>\r\n               \r\n               {type !== \"colorPicker\" ?\r\n               \r\n               \r\n               <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"} text-xs`}>{localLabel}</p>\r\n               \r\n            :\r\n            <div   \r\n            className={` bg-lightGrey h-full w_48 flex justify-center items-center text-xs`}>\r\n            { localLabel} \r\n            <img className=\"\" src={DownArrow} />\r\n            </div>\r\n         \r\n            }\r\n                    \r\n\r\n        <div className={`flex ${type === \"buttonless\" && \"pr-8\"}`}>\r\n                <div className=\"flex\">\r\n\r\n                    {inputs && inputs.map((inp) => {\r\n                        return inp\r\n                    })}\r\n\r\n                </div>\r\n                {hasButton && <TextureButton \r\n                type={!plus && \"transparent\"}\r\n                openPopup={openPopup} \r\n                className={`${!mainProperty ? \"ml-1\" : \"ml-2\" }`} \r\n                img={!plus && colorPicker} \r\n                alt=\"pick a color\" \r\n                setOpenPopup={setOpenPopup}/>}\r\n        </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js",["156","157","158","159"],"import React, { useEffect, useRef, useContext, useState } from \"react\"\n\nimport {defaultInputs} from \"./TestData/generators\"\nimport _uniqueId from 'lodash/uniqueId';\nimport TextSlider from \"./containers/TextSlider\"\nimport TexturePopup from \"./containers/TexturePopup\"\nimport LabeledInput from \"./containers/LabeledInput\"\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Background from \"./img/Background.png\"\nimport Toolbar from \"./img/toolbar.png\"\nimport Navbar from \"./img/navBar.png\"\nimport leftSideBar from \"./img/leftSidebar.png\"\n\nimport MaterialList  from \"./containers/MaterialList\"\n\nimport {TexturePorpertyContext} from \"./context/texturePropertyContext\"\n\nimport AddMaterial from \"./containers/AddMaterial\"\nimport DashedLine from \"./components/DashedLine\"\nimport LabeledSwitch from \"./containers/LabeledSwitch\"\nimport Expand from \"./containers/Expand\"\n\n\nfunction App() {\n  const WorkSpaceRef = useRef(null)\n  const {globalState, dispatch} = useContext(TexturePorpertyContext)\n  const [firstChildInitialPos, setFirstChildInitialPos] = useState(0)\n  const rightPanel = useRef(null)\n\n  const advancedOptionSections= \"overflow-auto\"\n\n  useEffect(() => {\n    dispatch({type: \"ADD_WORKSPACE_REF\", payload: {\n      ref: WorkSpaceRef\n    }})\n  }, [WorkSpaceRef])\n  useEffect( () => {\n    \n    setFirstChildInitialPos(rightPanel !== null && rightPanel.current.children[0].getBoundingClientRect().top)\n  }, [])\n\n  function handleScroll(e){\n    const firstChildCurrentPos = rightPanel.current.children[0].getBoundingClientRect()\n    let offset = 0\n    if(firstChildCurrentPos <= firstChildInitialPos + 56) {\n      rightPanel.current.scrollTop = 0\n    }else{\n      offset = firstChildCurrentPos.top - 74 + window.scrollY\n    }\n\n    \n    console.log(firstChildCurrentPos.top + window.scrollY )\n    dispatch({type: \"SET_SCROLL_OFFSET\", payload: {\n      offsetY: offset\n    }})\n  }\n\n  return (\n    <div  className=\"App font-inter overflow-hidden transition-none \">\n\n      <div id=\"MenuBar\" className=\"w-full h_56 bg-primary z-10 relative\" style={{ background: `url(${Navbar}) no-repeat center top/100% auto`}}></div>\n      <div id=\"Workspace\" className=\"flex\">\n\n        <div id=\"leftSidebarAnd3DSpace\" className=\"w-full h-screen\">\n          <div id=\"toolbar\" className=\"w-full h_40 bg-primaryLight\" style={{ background: `url(${Toolbar}) no-repeat center top/100% auto`}}></div>\n          <div className=\"w-full h-full flex\">\n              <div id=\"leftSideBar\" className=\"w_prop h-full bg-almostWhite\" style={{ background: `url(${leftSideBar}) no-repeat center top/100% auto`}}></div>\n              <div id=\"3DSpace\" ref={WorkSpaceRef} className=\" h-full bg-almostBlack p-3\" style={{\n                width: \"calc(100% - 248px)\", \n                height: \"calc(100% )\",\n                background: `url(${Background}) no-repeat center top/100% auto`\n                }}>\n\n\n                <TexturePopup />\n              </div>\n          </div>\n        </div>\n\n        <div id=\"right_panel\" className=\"bg-almostWhite\">\n\n              <div onScroll={handleScroll}  ref={rightPanel} id=\"sliders\" className=\"w_prop h-full items-center flex flex-col overflow-y-scroll overflow-x-hidden hideScrollBar\" style={{height: \"calc(100vh - 70px)\"}}>\n\n                <AddMaterial />\n\n                <MaterialList />\n\n                <DashedLine />\n\n                    {/* If no properties are passed down the default slider is shown */}\n                    <TextSlider  />\n\n                    {/* Prop name is only set if specified. By default it will say \"Property\", \n                    you would need to write propName=\"Something\" in order to name the slider \"Something\"\n\n                    ----------------------------\n\n                    a slider is only inactive if you specify, in this case active must equal to -- false --\n                    */}\n                    <TextSlider  propName=\"Roughness\" active={false} unit={\"\"}/>\n\n                    {/* \n                    All props\n\n                    propName => The name of the property e.g. Hue or Base Color or Metalness (if not set or the field is empty -> \"Property\")\n                    active => decides if a slider is active or not. if not must be set to false (if not set it is --true--)\n                    decimal => If the value should be decimal (0.001) --true-- or integer (1) --false-- / not set\n                    maximum => the default maximum of the slider, the values can never be less then this, but can exceed if set manually\n                    unit => \"%\" -> 50% ||   \"$\" -> 50$ || null -> 50 || if not set it will be % (e.g. 50%) by default\n\n                    */}\n\n                    <TextSlider  propName=\"Base\" active={true} decimal={true} maximum={100} unit={\"%\"}/>\n                    <TextSlider  propName=\"Metalness\" active={true} decimal={false} maximum={100} unit={\"%\"}/>\n                    <TextSlider  propName=\"Opacity\" active={true} decimal={false} maximum={100} unit={\"%\"}/>\n                    <TextSlider  propName=\"Emission\" active={true} decimal={false} maximum={1000} unit={\"%\"}/>\n                    <TextSlider  propName=\"Normal\" active={false} decimal={false} maximum={100} unit={\"%\"}/>\n\n                    <TextSlider  propName=\"Metalness\" active={true} decimal={false} maximum={100} unit={\"%\"}/>\n                   \n                  \n                    <LabeledSwitch label=\"Double Sided Material\"  padding={true}/>\n\n                    <Expand label=\"Advanced Options\">\n                        <div className={advancedOptionSections} >\n\n                        <LabeledInput label=\"Anisotropy\" labelType=\"title\"  hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Rotation\" type=\"buttonless\"  input={defaultInputs.single(\"°\")}  />\n\n                        </div>\n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Clearcoat\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Roughness\" type=\"buttonless\"  input={defaultInputs.single(\"%\")}  />\n\n                        </div>\n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Subsurface\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Radius / Thickness\" type=\"buttonless\"  input={defaultInputs.single(\"mm\")}  />\n\n                        </div>  \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Refraction\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Absorbtion\" hasButton={true} plus={true}  input={defaultInputs.double(\"mm\")}  />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Reflectivity\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Ambient Occlusion\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Lightmap\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n\n                        </div> \n                    </Expand>\n\n                    <Expand label=\"Texture Transformations\" padding={true}>\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Tiling\" hasButton={true} plus={true}   input={defaultInputs.double(null, true)} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Offset\"type=\"buttonless\"   input={defaultInputs.double(null, true)} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Rotation\" type=\"buttonless\"   input={defaultInputs.single(\"°\")} />\n\n                        </div> \n                      \n\n                    </Expand>\n\n                   \n                   \n\n                    </div>\n        </div>\n\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx",["160","161","162","163"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport Draggable from 'react-draggable';\r\n\r\nimport {map_range, map_float_range} from \"../TestData/functions\"\r\n\r\nfunction Slider(props) {\r\n    const {\r\n        setProgress,\r\n        disabled,\r\n        min,\r\n        max,\r\n        decimal,\r\n        hasButton,\r\n        progress,\r\n        maxLimit\r\n    } = props\r\n\r\n    const maximumPosition =  171\r\n\r\n    const[drag, setDrag] = useState(false)\r\n    const [lastPosition, setLastPosition] = useState(0)\r\n    const [dragPos, setDragPos] = useState(0)\r\n\r\n    const sliderComponentRef = useRef(null)\r\n\r\n    const remappedValue = (o) => {\r\n        if(decimal){\r\n            return map_float_range(o, 0,maximumPosition,0,max) }\r\n         else{\r\n             return map_range(o, 0,maximumPosition, min || 0,max)}\r\n            } \r\n\r\n        const reveredRemap = (pos) => {\r\n            if(decimal){\r\n                return map_float_range(pos, min || 0, max, 0, maximumPosition)\r\n            }else{\r\n                return  map_range(pos, min || 0, max,  0,maximumPosition)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(max > 100){\r\n           // setDragPos(maximumPosition/2)\r\n        }\r\n    }, [max])\r\n\r\n    useEffect(() => {\r\n        if(progress !== dragPos  ){\r\n           \r\n            setDragPos(reveredRemap(progress))\r\n        }\r\n\r\n    }, [progress])\r\n\r\n\r\n\r\n    function Drag(){\r\n        setDrag(true)\r\n    }\r\n\r\n    function DragOff(){\r\n        setDrag(false)\r\n    }\r\n\r\n    function setValue(e, o){\r\n       \r\n\r\n        \r\n        if(!disabled){\r\n            if(o.x < maximumPosition) {\r\n                setDragPos(o.x)\r\n            }else{\r\n                setDragPos(maximumPosition)\r\n            }\r\n          \r\n                setProgress(remappedValue(o.x))\r\n            \r\n           \r\n            setLastPosition(o.x)\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div ref={sliderComponentRef} className=\"flex items-center h_16 relative\">\r\n        <Draggable\r\n        axis={disabled ? \"none\" : \"x\"}\r\n        bounds={{left: 0, top: 0, right: maximumPosition, bottom: 0}}\r\n        onStart={Drag}\r\n        onStop={DragOff}\r\n        onDrag={setValue}\r\n        position={{x: dragPos, y:  0}}\r\n        >\r\n            \r\n            <div className={`relative  ${drag ? \"knotBig\" : \"knot\" } ${disabled ? \"bg-softGrey\" : \"bg-midGrey\"} \r\n            z-10 flex justify-center items-center border-solid border-2 border-almostWhite`}>\r\n                <div className={`${drag ? \"knotMidBig\" : \"knotMid\"}  bg-almostWhite`}></div>\r\n                \r\n            </div>\r\n        </Draggable>\r\n        <div className={`track bg-softGrey track absolute`}></div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Slider",["164","165"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\PopUpImageHover.jsx",["166","167"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx",["168"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx",["169","170","171","172","173"],"import React, { useContext, useEffect, useRef, useState,useLayoutEffect } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n \r\nimport {generateProperties} from \"../TestData/generators\"\r\n\r\nimport Dropdown from \"../components/dropdown\"\r\nimport PopUpView from \"../components/popUpView\"\r\nimport Tab from \"../components/Tab\"\r\n\r\nfunction useOutsideAlerter(ref, dispatch, globalState) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if(globalState.MetaData.WorkspaceRef && event.target === globalState.MetaData.WorkspaceRef.current){\r\n                    \r\n                    dispatch({type: \"CLOSE_POPUP\"})\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, globalState]);\r\n}\r\n\r\nArray.prototype.move = function (from, to) {\r\n    this.splice(to, 0, this.splice(from, 1)[0]);\r\n  };\r\n\r\nfunction TexturePopup(props) {\r\n    const {globalState, dispatch}= useContext(TexturePorpertyContext)\r\n    \r\n    const [open, setOpen] = useState(true)\r\n    const [hover, setHover] = useState(false)\r\n    const popUpWindow = useRef(null)\r\n    \r\n    const [activeProperty, setActiveProperty] = useState(0) // The index of the active property e.g. Metalness\r\n    const [activeTexture, setActiveTexture] = useState(0) //The index of the active TextureType (Solid / Gradient / Image)\r\n    const [activeTab, setActiveTab] = useState(0) //The index of the active submenu currently open (e.g. Adjust / Transform)\r\n    const [activeType, setActiveType] = useState(0) // \r\n\r\n\r\n    const [properties, setProperties] = useState([])\r\n\r\n    useOutsideAlerter(popUpWindow, dispatch, globalState)\r\n\r\n    useEffect(() => {\r\n     \r\n\r\n           setOpen(globalState.MetaData.activeTexturePopup !== \"\")\r\n           setActiveTab(0)\r\n           setActiveType(0)\r\n           setActiveTexture(0)\r\n           if(globalState.MetaData.activeTexturePopup !== \"\") {\r\n               const globalStateCopy = globalState\r\n            let currentSelection = globalStateCopy.MaterialPorperties.filter(x => x.id === globalState.MetaData.activeTexturePopup)[0]\r\n            setActiveProperty(globalState.MaterialPorperties.indexOf(currentSelection))\r\n\r\n            \r\n           }\r\n        \r\n    }, [globalState.MetaData.activeTexturePopup])\r\n\r\n   useEffect(() => {\r\n   \r\n    if(activeProperty !== undefined && globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        const path = {\r\n            activeProperty: activeProperty,\r\n            activeTexture: activeTexture,\r\n            activeTab: activeTab,\r\n        }\r\n            const currentlySelectedProps = globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes[activeTab]\r\n            setProperties(currentlySelectedProps)\r\n            const newProperties = generateProperties(currentlySelectedProps, path)\r\n            setProperties(newProperties)\r\n\r\n\r\n            \r\n    }\r\n    const test = {\r\n        activeProperty: activeProperty,\r\n        activeTexture: activeTexture,\r\n        activeTab: activeTab,\r\n        activeType: activeType\r\n    }\r\n\r\n    console.table(test)\r\n\r\n    if( globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        console.log(globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture])\r\n    }\r\n\r\n   }, [activeProperty,activeTexture, activeTab, activeType, open])\r\n\r\n    function handleHoverStart() {\r\n       \r\n        setHover(true)\r\n    }\r\n\r\n    function handleHoverEnd(){\r\n        \r\n        setHover(false)\r\n    }\r\n\r\n\r\n  \r\n    return(\r\n        <Draggable\r\n        bounds=\"parent\"\r\n        handle=\"handle\"\r\n        positionOffset={{x:248, y:98}}\r\n        defaultPosition={{x: window.innerWidth-(4 * 248 + 40), y: 98}}\r\n   >\r\n       {globalState.MaterialPorperties[activeType] ? \r\n         <div ref={popUpWindow} \r\n         className={`${open ? \"\" : \"hidden\"} \r\n         w_props-row  bg-white absolute rounded-sm overflow-hidden`} \r\n         style={{minHeight: \"350px\"}}>\r\n\r\n               <PopUpView  \r\n                       globalState={globalState}\r\n                       activeType={activeType}\r\n                       handleHoverStart={handleHoverStart}\r\n                       handleHoverEnd={handleHoverEnd}\r\n                       hover={hover}\r\n                       activeTexture={activeTexture}\r\n                       setActiveTexture={setActiveType}\r\n                       activeProperty={activeProperty}\r\n                       type={globalState.MaterialPorperties[activeProperty].textureTypes[activeType]}\r\n               />  \r\n           \r\n               \r\n             <div id=\"popUp_Properties transition-all duration-100 \" className=\"p-4\">\r\n                \r\n                 \r\n                <Dropdown list={globalState.MaterialPorperties[activeProperty].textureTypes} type=\"solid\" dropdownSelection={activeTexture} setDropdownSelection={setActiveTexture} />\r\n                \r\n\r\n               {globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes.length > 1 && \r\n                <Tab tabOptions={ globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes} active={activeTab} setActive={setActiveTab}/>\r\n                } \r\n                \r\n\r\n               {properties && properties.map((prop) => {\r\n                   return prop\r\n               })}\r\n\r\n             </div>\r\n         </div>\r\n         : <div></div> }\r\n   </Draggable>\r\n    )\r\n}\r\n\r\n\r\nexport default TexturePopup",["174","175"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["176","177","178","179","180","181","182"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx",["183","184"],"import React, { useEffect, useState } from \"react\"\r\nimport { generateInputs, defaultInputs } from \"../TestData/generators\"\r\n\r\nimport Switch from \"../components/Switch\"\r\n\r\n\r\nfunction LabeledSwitch(props){\r\n    const {\r\n        label,\r\n        labelType,\r\n        padding,\r\n        handleChange,\r\n        input\r\n        } = props\r\n    const [inputs, setInputs] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        setInputs(generateInputs(input  || defaultInputs.single(), \"switch\"))\r\n    }, [input])\r\n\r\n    return(\r\n        <div className={` ${padding && \"px-4 my-2\"} flex w-full h_24 text-xs font-semibold justify-between items-center`}>\r\n\r\n            <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"}`}>{label}</p>\r\n            <div className=\"flex h_24\">\r\n                {inputs.map((elem, index) => {\r\n                    return elem\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledSwitch","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx",["185"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\dropdown.jsx",["186","187","188","189","190","191"],"import React, { useContext, useState } from \"react\"\r\nimport DownArrowBlack from \"../img/Symbols/Sprites/Signs_ArrowDown_1.svg\"\r\nimport DownArrowWhite from \"../img/Symbols/Sprites/Signs_ArrowDown_3.svg\"\r\n\r\n\r\nfunction Dropdown(props){\r\n    const {\r\n        type,\r\n        list,\r\n        optionTitle,\r\n        dropdownSelection,\r\n        setDropdownSelection\r\n    } = props\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n    const handleSelection = (e) => {\r\n        const selectionTarget = parseInt(e.target.id.split(\"-\")[1])\r\n        \r\n        if(dropdownOpen){\r\n            setDropdownSelection(selectionTarget)\r\n        }\r\n       \r\n    }\r\n\r\n    function handleDropdown(){\r\n        setDropdownOpen(!dropdownOpen)\r\n    }\r\n\r\n    return (\r\n        <div id=\"texture_dropdown\" \r\n        onClick={handleDropdown}\r\n        className={` cursor-pointer w-full mb-4 h_24  rounded z-10 relative\r\n         ${dropdownOpen ? \" \" : \"overflow-hidden\" } ${type == \"solid\" ? \"text-almostBlack \" : \"border border-almostWhite\"}`} \r\n       >\r\n\r\n            <ul id=\"texture_dropdown-list \" \r\n            className={`list-none ${dropdownOpen ? \" bg-almostBlack text-almostWhite border border-almostBlack\" \r\n            : type == \"solid\" ? \"bg-lightGrey border border-lightGrey\" : \"border border-almostBlack\"} w_wide-10 ` }\r\n\r\n             style={{\r\n                transform: `translate(0px, -${dropdownSelection * 24}px)`,\r\n                outline: \"thin solid #252525\"\r\n            }}>\r\n\r\n                {optionTitle &&  <li className=\"pl-1 text-sm  flex justify-between\">{optionTitle}\r\n                <img src={type == \"solid\" ? DownArrowBlack : DownArrowWhite} className=\"w_24 h_24  flex justify-center items-center select-none\"></img></li>\r\n                }\r\n\r\n                 {(type === \"solid\") && \r\n                 <img className=\"absolute right-0 m-0.5\" \r\n                 style={{ transform: `translate(0px, ${dropdownSelection * 24}px)`}} \r\n                 src={dropdownOpen ? DownArrowWhite : DownArrowBlack} /> } \r\n               \r\n                \r\n                {list && list.map((item,index) => {\r\n                    return <li key={index} \r\n                    onClick={handleSelection}\r\n                    id={`dropdown_item_${optionTitle}-${index}`}\r\n                    className={`${index === dropdownSelection && dropdownOpen ? \"bg-darkGrey\" : \"\"} \r\n                    pl-1 text-sm h_24 flex w-full justify-between\r\n                    ${(index !== dropdownSelection && dropdownOpen) && \"hover:bg-darkGrey\"}`}>{item.name}</li>\r\n                })}\r\n              \r\n                \r\n            </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dropdown","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx",["192","193","194","195","196","197"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx",["198","199","200"],"import React, { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\nfunction MaterialList(){\r\n    const [legacyCodeLoader, setLegacyCodeLoader] = useState(\"\")\r\n\r\n    const iframe = `<iframe src=\"https://robertcsollei-vectary.github.io/hostingLegacyMaterialList/\" width=\"248\" height=\"225\"> </iframe>`\r\n   \r\n    return(\r\n        <div id=\"matList\" className=\"material_list\" dangerouslySetInnerHTML={{__html: iframe}}>\r\n            \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialList","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx",["201","202","203"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js",["204","205","206"],{"ruleId":"207","severity":1,"message":"208","line":9,"column":7,"nodeType":"209","messageId":"210","endLine":9,"endColumn":13},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"207","severity":1,"message":"215","line":1,"column":58,"nodeType":"209","messageId":"210","endLine":1,"endColumn":73},{"ruleId":"207","severity":1,"message":"216","line":10,"column":9,"nodeType":"209","messageId":"210","endLine":10,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":61,"column":8,"nodeType":"219","endLine":61,"endColumn":10,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":78,"column":75,"nodeType":"223","messageId":"224","endLine":78,"endColumn":77},{"ruleId":"217","severity":1,"message":"225","line":83,"column":8,"nodeType":"219","endLine":83,"endColumn":19,"suggestions":"226"},{"ruleId":"217","severity":1,"message":"227","line":94,"column":8,"nodeType":"219","endLine":94,"endColumn":18,"suggestions":"228"},{"ruleId":"217","severity":1,"message":"229","line":100,"column":8,"nodeType":"219","endLine":100,"endColumn":49,"suggestions":"230"},{"ruleId":"217","severity":1,"message":"231","line":123,"column":8,"nodeType":"219","endLine":123,"endColumn":23,"suggestions":"232"},{"ruleId":"221","severity":1,"message":"233","line":129,"column":42,"nodeType":"223","messageId":"224","endLine":129,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":143,"column":17,"nodeType":"236","endLine":143,"endColumn":36},{"ruleId":"221","severity":1,"message":"233","line":162,"column":34,"nodeType":"223","messageId":"224","endLine":162,"endColumn":36},{"ruleId":"207","severity":1,"message":"237","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"238","severity":1,"message":"239","line":33,"column":13,"nodeType":"240","messageId":"241","endLine":33,"endColumn":19},{"ruleId":"207","severity":1,"message":"242","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":26},{"ruleId":"207","severity":1,"message":"243","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":24},{"ruleId":"207","severity":1,"message":"244","line":10,"column":9,"nodeType":"209","messageId":"210","endLine":10,"endColumn":13},{"ruleId":"211","replacedBy":"245"},{"ruleId":"213","replacedBy":"246"},{"ruleId":"207","severity":1,"message":"237","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"247","line":29,"column":8,"nodeType":"219","endLine":29,"endColumn":13,"suggestions":"248"},{"ruleId":"217","severity":1,"message":"249","line":50,"column":8,"nodeType":"219","endLine":50,"endColumn":13,"suggestions":"250"},{"ruleId":"207","severity":1,"message":"215","line":1,"column":58,"nodeType":"209","messageId":"210","endLine":1,"endColumn":73},{"ruleId":"207","severity":1,"message":"251","line":15,"column":9,"nodeType":"209","messageId":"210","endLine":15,"endColumn":11},{"ruleId":"207","severity":1,"message":"252","line":20,"column":9,"nodeType":"209","messageId":"210","endLine":20,"endColumn":21},{"ruleId":"207","severity":1,"message":"253","line":26,"column":12,"nodeType":"209","messageId":"210","endLine":26,"endColumn":23},{"ruleId":"207","severity":1,"message":"254","line":26,"column":25,"nodeType":"209","messageId":"210","endLine":26,"endColumn":33},{"ruleId":"207","severity":1,"message":"255","line":28,"column":11,"nodeType":"209","messageId":"210","endLine":28,"endColumn":24},{"ruleId":"207","severity":1,"message":"256","line":31,"column":12,"nodeType":"209","messageId":"210","endLine":31,"endColumn":18},{"ruleId":"207","severity":1,"message":"257","line":31,"column":20,"nodeType":"209","messageId":"210","endLine":31,"endColumn":29},{"ruleId":"207","severity":1,"message":"258","line":33,"column":11,"nodeType":"209","messageId":"210","endLine":33,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":39,"column":14,"nodeType":"223","messageId":"224","endLine":39,"endColumn":16},{"ruleId":"217","severity":1,"message":"259","line":44,"column":8,"nodeType":"219","endLine":44,"endColumn":10,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":59,"column":13,"nodeType":"263","endLine":59,"endColumn":49},{"ruleId":"207","severity":1,"message":"264","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":17},{"ruleId":"207","severity":1,"message":"265","line":9,"column":16,"nodeType":"209","messageId":"210","endLine":9,"endColumn":22},{"ruleId":"207","severity":1,"message":"253","line":28,"column":10,"nodeType":"209","messageId":"210","endLine":28,"endColumn":21},{"ruleId":"217","severity":1,"message":"266","line":38,"column":6,"nodeType":"219","endLine":38,"endColumn":20,"suggestions":"267"},{"ruleId":"207","severity":1,"message":"268","line":13,"column":9,"nodeType":"209","messageId":"210","endLine":13,"endColumn":18},{"ruleId":"207","severity":1,"message":"269","line":15,"column":9,"nodeType":"209","messageId":"210","endLine":15,"endColumn":17},{"ruleId":"207","severity":1,"message":"270","line":21,"column":12,"nodeType":"209","messageId":"210","endLine":21,"endColumn":24},{"ruleId":"217","severity":1,"message":"271","line":55,"column":8,"nodeType":"219","endLine":55,"endColumn":18,"suggestions":"272"},{"ruleId":"211","replacedBy":"273"},{"ruleId":"213","replacedBy":"274"},{"ruleId":"261","severity":1,"message":"262","line":21,"column":21,"nodeType":"263","endLine":21,"endColumn":121},{"ruleId":"261","severity":1,"message":"262","line":22,"column":21,"nodeType":"263","endLine":22,"endColumn":124},{"ruleId":"221","severity":1,"message":"222","line":12,"column":54,"nodeType":"223","messageId":"224","endLine":12,"endColumn":56},{"ruleId":"207","severity":1,"message":"215","line":1,"column":57,"nodeType":"209","messageId":"210","endLine":1,"endColumn":72},{"ruleId":"217","severity":1,"message":"275","line":33,"column":8,"nodeType":"219","endLine":33,"endColumn":26,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":36,"column":1,"nodeType":"279","messageId":"224","endLine":38,"endColumn":4},{"ruleId":"217","severity":1,"message":"280","line":72,"column":8,"nodeType":"219","endLine":72,"endColumn":49,"suggestions":"281"},{"ruleId":"217","severity":1,"message":"282","line":103,"column":7,"nodeType":"219","endLine":103,"endColumn":66,"suggestions":"283"},{"ruleId":"211","replacedBy":"284"},{"ruleId":"213","replacedBy":"285"},{"ruleId":"207","severity":1,"message":"268","line":18,"column":9,"nodeType":"209","messageId":"210","endLine":18,"endColumn":18},{"ruleId":"207","severity":1,"message":"270","line":24,"column":12,"nodeType":"209","messageId":"210","endLine":24,"endColumn":24},{"ruleId":"286","severity":1,"message":"287","line":35,"column":9,"nodeType":"288","messageId":"289","endLine":49,"endColumn":10},{"ruleId":"217","severity":1,"message":"290","line":51,"column":8,"nodeType":"219","endLine":51,"endColumn":18,"suggestions":"291"},{"ruleId":"286","severity":1,"message":"287","line":55,"column":9,"nodeType":"288","messageId":"289","endLine":69,"endColumn":10},{"ruleId":"217","severity":1,"message":"292","line":72,"column":8,"nodeType":"219","endLine":72,"endColumn":18,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":129,"column":13,"nodeType":"296","messageId":"224","endLine":129,"endColumn":23},{"ruleId":"207","severity":1,"message":"297","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":14},{"ruleId":"207","severity":1,"message":"252","line":12,"column":9,"nodeType":"209","messageId":"210","endLine":12,"endColumn":21},{"ruleId":"221","severity":1,"message":"222","line":20,"column":107,"nodeType":"223","messageId":"224","endLine":20,"endColumn":109},{"ruleId":"207","severity":1,"message":"298","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":34,"column":60,"nodeType":"223","messageId":"224","endLine":34,"endColumn":62},{"ruleId":"221","severity":1,"message":"222","line":39,"column":20,"nodeType":"223","messageId":"224","endLine":39,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":47,"column":17,"nodeType":"263","endLine":47,"endColumn":146},{"ruleId":"221","severity":1,"message":"222","line":47,"column":32,"nodeType":"223","messageId":"224","endLine":47,"endColumn":34},{"ruleId":"261","severity":1,"message":"262","line":51,"column":18,"nodeType":"263","endLine":53,"endColumn":73},{"ruleId":"286","severity":1,"message":"287","line":54,"column":5,"nodeType":"288","messageId":"289","endLine":61,"endColumn":6},{"ruleId":"299","severity":1,"message":"300","line":67,"column":55,"nodeType":"301","messageId":"302","endLine":67,"endColumn":57},{"ruleId":"286","severity":1,"message":"287","line":69,"column":9,"nodeType":"288","messageId":"289","endLine":135,"endColumn":10},{"ruleId":"286","severity":1,"message":"287","line":102,"column":21,"nodeType":"288","messageId":"289","endLine":115,"endColumn":22},{"ruleId":"299","severity":1,"message":"300","line":148,"column":37,"nodeType":"301","messageId":"302","endLine":148,"endColumn":39},{"ruleId":"221","severity":1,"message":"233","line":150,"column":68,"nodeType":"223","messageId":"224","endLine":150,"endColumn":70},{"ruleId":"207","severity":1,"message":"242","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":26},{"ruleId":"207","severity":1,"message":"303","line":6,"column":12,"nodeType":"209","messageId":"210","endLine":6,"endColumn":28},{"ruleId":"207","severity":1,"message":"304","line":6,"column":30,"nodeType":"209","messageId":"210","endLine":6,"endColumn":49},{"ruleId":"207","severity":1,"message":"305","line":15,"column":9,"nodeType":"209","messageId":"210","endLine":15,"endColumn":20},{"ruleId":"217","severity":1,"message":"306","line":29,"column":7,"nodeType":"219","endLine":29,"endColumn":16,"suggestions":"307"},{"ruleId":"221","severity":1,"message":"222","line":38,"column":18,"nodeType":"223","messageId":"224","endLine":38,"endColumn":20},{"ruleId":"207","severity":1,"message":"237","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"308","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":24},{"ruleId":"207","severity":1,"message":"264","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":17},"no-unused-vars","'reload' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["309"],"no-negated-in-lhs",["310"],"'useLayoutEffect' is defined but never used.","'payloadGenerator' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.","ArrayExpression",["311"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["312"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["313"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["315"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useEffect' is defined but never used.","'generateInputs' is defined but never used.","'unit' is assigned a value but never used.",["309"],["310"],"React Hook useEffect has a missing dependency: 'setProp'. Either include it or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],"React Hook useEffect has missing dependencies: 'prop' and 'setProp'. Either include them or remove the dependency array. If 'setProp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["317"],"'id' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'globalState' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'initialRender' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'payload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'input', 'label', 'mainProperty', and 'type'. Either include them or remove the dependency array.",["318"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'_uniqueId' is defined but never used.","'uuidv4' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["319"],"'hasButton' is assigned a value but never used.","'maxLimit' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dragPos' and 'reveredRemap'. Either include them or remove the dependency array.",["320"],["309"],["310"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["322"],"React Hook useEffect has a missing dependency: 'globalState.MaterialPorperties'. Either include it or remove the dependency array.",["323"],["309"],["310"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["325"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'Switch' is defined but never used.","'useContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'legacyCodeLoader' is assigned a value but never used.","'setLegacyCodeLoader' is assigned a value but never used.","'colorSlider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inputid' and 'progress'. Either include them or remove the dependency array.",["326"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"353","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"358","text":"359"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"362","text":"363"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"364","text":"365"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"366","text":"367"},"Update the dependencies array to be: [ref, setProp]",{"range":"368","text":"369"},"Update the dependencies array to be: [prop, ref, setProp]",{"range":"370","text":"371"},"Update the dependencies array to be: [input, label, mainProperty, type]",{"range":"372","text":"373"},"Update the dependencies array to be: [WorkSpaceRef, dispatch]",{"range":"374","text":"375"},"Update the dependencies array to be: [dragPos, progress, reveredRemap]",{"range":"376","text":"377"},"Update the dependencies array to be: [ref, globalState, dispatch]",{"range":"378","text":"379"},"Update the dependencies array to be: [globalState, globalState.MetaData.activeTexturePopup]",{"range":"380","text":"381"},"Update the dependencies array to be: [activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",{"range":"382","text":"383"},"Update the dependencies array to be: [progress, propName]",{"range":"384","text":"385"},{"range":"386","text":"385"},"Update the dependencies array to be: [inputid, progress, toInput]",{"range":"387","text":"388"},[1593,1595],"[dispatch, newId, propName]",[2425,2436],"[dispatch, globalState, id, openPopup, path, propName]",[2736,2746],"[dispatch, id, path, progress]",[2889,2930],"[globalState.MetaData.activeTexturePopup, id, propName]",[3466,3481],"[progress, max, maximum]",[829,834],"[ref, setProp]",[1336,1341],"[prop, ref, setProp]",[1326,1328],"[input, label, mainProperty, type]",[1243,1257],"[WorkSpaceRef, dispatch]",[1366,1376],"[dragPos, progress, reveredRemap]",[1199,1217],"[ref, globalState, dispatch]",[2692,2733],"[globalState, globalState.MetaData.activeTexturePopup]",[3752,3811],"[activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",[1414,1424],"[progress, propName]",[2018,2028],[802,811],"[inputid, progress, toInput]"]