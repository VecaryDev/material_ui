[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx":"11"},{"size":10601,"mtime":1610709991446,"results":"12","hashOfConfig":"13"},{"size":718,"mtime":1610114473846,"results":"14","hashOfConfig":"13"},{"size":942,"mtime":1610362481792,"results":"15","hashOfConfig":"13"},{"size":197,"mtime":1610548403904,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1608257534771,"results":"17","hashOfConfig":"13"},{"size":2723,"mtime":1610035759123,"results":"18","hashOfConfig":"13"},{"size":3669,"mtime":1610023436721,"results":"19","hashOfConfig":"13"},{"size":8302,"mtime":1610626504004,"results":"20","hashOfConfig":"13"},{"size":2588,"mtime":1610359212155,"results":"21","hashOfConfig":"13"},{"size":1224,"mtime":1610035606263,"results":"22","hashOfConfig":"13"},{"size":827,"mtime":1610362226250,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11grfy6",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["52","53","54","55","56","57","58","59","60","61"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["62"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["63","64"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js",[],["65","66"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider.jsx",["67","68","69","70"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["71","72","73","74","75","76","77"],"import React, { useEffect, useState } from \"react\"\r\nimport Draggable from 'react-draggable';\r\n\r\nimport {gradients} from \"../TestData/DefaultData\"\r\n\r\nimport {map_range, map_float_range} from \"../TestData/functions\"\r\n\r\n\r\nfunction ColoredSlider(props){\r\n    const {\r\n        setProgress,\r\n        progress,\r\n        disabled,\r\n        min,\r\n        max,\r\n        decimal,\r\n        propName,\r\n        hasButton\r\n    } = props\r\n\r\n    const maximumPosition = 171\r\n\r\n    const[drag, setDrag] = useState(false)\r\n    const [lastPosition, setLastPosition] = useState(0)\r\n    const [dragPos, setDragPos] = useState(0)\r\n\r\n    const [background, setBackground] = useState(\"\")\r\n\r\n    const [knotColor, setKnotColor] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n      \r\n\r\n        switch(propName.toLowerCase()) {\r\n            case \"hue\":\r\n                setKnotColor(`hsl(${map_range(progress, -180, 180, 0, 360 )}, 100%, 50%)`)\r\n                setBackground(gradients.hue)\r\n            break;\r\n            case \"saturation\":\r\n                setKnotColor(`hsl(180, ${map_range(progress, -100, 100, 0, 100 )}%, 50%)`)\r\n                setBackground(gradients.saturation)\r\n            break;\r\n            case \"brightness\":\r\n                setKnotColor(` hsl(180, 0%, ${map_range(progress, -100, 100, 0, 100 )}%)`)\r\n                setBackground(gradients.brightness)\r\n            break;\r\n            \r\n        }\r\n        \r\n    }, [propName])\r\n\r\n\r\n    useEffect(()=>{\r\n        switch(propName.toLowerCase()) {\r\n            case \"hue\":\r\n                setKnotColor(`hsl(${map_range(progress, -180, 180, 0, 360 )}, 100%, 50%)`)\r\n               \r\n            break;\r\n            case \"saturation\":\r\n                setKnotColor(`hsl(180, ${map_range(progress, -100, 100, 0, 100 )}%, 50%)`)\r\n               \r\n            break;\r\n            case \"brightness\":\r\n                setKnotColor(`hsl(180, 0%, ${map_range(progress, -100, 100, 0, 100 )}%)`)\r\n              \r\n            break;\r\n            \r\n        }\r\n       \r\n       \r\n    }, [progress])\r\n\r\n    useEffect(() => {\r\n        \r\n            setDragPos(maximumPosition/2)\r\n        \r\n    }, [max])\r\n\r\n\r\n    function Drag(){\r\n        setDrag(true)\r\n    }\r\n\r\n    function DragOff(){\r\n        setDrag(false)\r\n    }\r\n\r\n    function setValue(e, o){\r\n       \r\n\r\n        \r\n        if(!disabled){\r\n            if(o.x < maximumPosition) {\r\n                setDragPos(o.x)\r\n            }else{\r\n                setDragPos(maximumPosition)\r\n            }\r\n            if(decimal === true){\r\n                setProgress(map_float_range(o.x, 0,maximumPosition,0,max))\r\n            }else{\r\n                setProgress(map_range(o.x, 0,maximumPosition, min || 0,max))\r\n            }\r\n           \r\n            setLastPosition(o.x)\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"flex items-center h_16 w-full\">\r\n        <Draggable\r\n        axis={disabled ? \"none\" : \"x\"}\r\n        bounds={{left: 0, top: 0, right: maximumPosition, bottom: 0}}\r\n        onStart={Drag}\r\n        onStop={DragOff}\r\n        onDrag={setValue}\r\n        position={{x: dragPos, y: 0}}\r\n        >\r\n            \r\n                <div className={`absolute  ${drag ? \"knotBig\" : \"knot\" } b_border flex justify-center items-center border-solid border-2 border-almostWhite`} \r\n                style={{\r\n                    backgroundColor: knotColor\r\n                }}>\r\n                \r\n                </div>\r\n            \r\n        </Draggable>\r\n        <div className={`w-full h-1 rounded-xl`} style={{\r\n            background: \"rgb(255,0,0)\",\r\n            background: `${background}`\r\n        }}></div>\r\n        \r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ColoredSlider","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx",["78","79","80","81"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\n\r\n\r\n\r\n\r\nfunction Input(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n    const [update, setUpdate] = useState(0)\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n    const [indicator, setIndicator] = useState(false)\r\n    \r\n    const inputRef = useRef(null)\r\n\r\n\r\n\r\n    let limit = 0.1\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\n    let num = 0\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(multiplyer > 0) {\r\n            setGrowIcon(ArrowGrowUp)\r\n        }else{\r\n            setGrowIcon(ArrowGrowDown)\r\n        }\r\n\r\n      \r\n\r\n\r\n       \r\n        if(dynamicValue === false){\r\n            setDynamicValue(0 + unit )\r\n        }else{\r\n            const processedDynamicValue = parseInt(dynamicValue.split(`${unit}`).join(\"\"))\r\n            \r\n            if(processedDynamicValue === 0) {\r\n                setDynamicValue(Math.ceil(2 * multiplyer) + unit)\r\n            }else{\r\n               if(multiplyer > 0.005){\r\n                    setDynamicValue(Math.ceil(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n               }else if (multiplyer < -0.005) {\r\n                     setDynamicValue(Math.floor(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n                \r\n               }else{\r\n                    setDynamicValue(processedDynamicValue + unit)    \r\n               }\r\n            }\r\n            \r\n        }\r\n        \r\n    }, [multiplyer, update])\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n      \r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location, dynamicData) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - location\r\n           let changingFactor = map_float_range(difference, -100, 100, -limit, limit)\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            counter++\r\n           \r\n           \r\n            if(changingFactor > 0){\r\n\r\n                if(changingFactor > limit){\r\n                    return limit\r\n                }else{\r\n                    return changingFactor\r\n                }\r\n\r\n            }else{\r\n                \r\n                if(changingFactor < -limit){\r\n                    return limit * -1\r\n                }else{\r\n                   return changingFactor\r\n                }\r\n\r\n            }\r\n\r\n            \r\n           }\r\n           setTimeout(() => {\r\n              \r\n            //console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            //num += parseInt( adjustChange() )\r\n            setMultiplyer(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    function pauseEvent(e){\r\n        if(e.stopPropagation) e.stopPropagation();\r\n        if(e.preventDefault) e.preventDefault();\r\n        e.cancelBubble=true;\r\n        e.returnValue=false;\r\n        return false;\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        inputRef.current.select()\r\n        console.log(selection)\r\n        \r\n        document.exitPointerLock = document.exitPointerLock ||\r\n        document.mozExitPointerLock ||\r\n        document.webkitExitPointerLock;\r\n        \r\n        document.exitPointerLock();\r\n      \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n     \r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n        const element = e.target\r\n\r\n        element.requestPointerLock = element.requestPointerLock ||\r\n\t\t\t     element.mozRequestPointerLock ||\r\n\t\t\t     element.webkitRequestPointerLock;\r\n        // Ask the browser to lock the pointer\r\n        element.requestPointerLock();\r\n        \r\n\r\n\r\n        dragOver = false\r\n\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        if(selection === \"\") {\r\n      \r\n        function infinity() {\r\n           \r\n            if(!dragOver ){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                  // e.target.select()\r\n                    handleDrag(userLocation)\r\n                    \r\n                   // console.log(\"down\")\r\n                    if(counter % 2 === 0){\r\n                        setUpdate(update+ 1)\r\n                       }else{\r\n                        setUpdate(false)\r\n                       }\r\n                      \r\n                    infinity()\r\n                }, 50)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            infinity()\r\n           \r\n        }, 100)\r\n    }\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={pauseEvent}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={pauseEvent}\r\n            onFocus={() => {setIndicator(true)}}\r\n            onBlur={() => {setIndicator(false)}}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            { hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n            {(!hover && indicator) &&\r\n              <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n              <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n          </div>}\r\n            \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Slider_Param_Prop.jsx",["82","83","84"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["85","86"],"import React from \"react\"\r\n\r\nexport const MaterialPropertyReducer =(state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ONE_PROP\":\r\n            return [\r\n               ...state,\r\n             state.filter(x => x.id === action.payload.id).length === 0 &&\r\n             {       \r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                textureTypes: action.payload.textureTypes,\r\n                images: action.payload.images ? action.payload.images : [] \r\n     }           \r\n                    \r\n                \r\n            ]\r\n            case \"REMOVE_ONE_PROP\": \r\n            return state.filter(item => item.id !== action.id)\r\n\r\n            case \"UPDATE_POPUP_PROPERTY\": \r\n            const path = action.payload.path\r\n            \r\n            const newState = state\r\n            newState[path.activeProperty]\r\n            .textureTypes[path.activeTexture]\r\n            .tabTypes[path.activeTab]\r\n            .properties.filter(x => x.id === action.payload.id)[0]\r\n            .progress = action.payload.progress\r\n      \r\n            return newState\r\n            break;\r\n\r\n            default: \r\n            return state\r\n            \r\n    } \r\n        \r\n\r\n}","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Tab.jsx",[],{"ruleId":"87","severity":1,"message":"88","line":16,"column":24,"nodeType":"89","messageId":"90","endLine":16,"endColumn":32},{"ruleId":"87","severity":1,"message":"91","line":29,"column":10,"nodeType":"89","messageId":"90","endLine":29,"endColumn":26},{"ruleId":"87","severity":1,"message":"92","line":35,"column":7,"nodeType":"89","messageId":"90","endLine":35,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":67,"column":6,"nodeType":"95","endLine":67,"endColumn":26,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":120,"column":6,"nodeType":"95","endLine":120,"endColumn":8,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"99","line":123,"column":9,"nodeType":"89","messageId":"90","endLine":123,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":184,"column":36,"nodeType":"102","messageId":"103","endLine":184,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":186,"column":34,"nodeType":"106","messageId":"107","endLine":186,"endColumn":38},{"ruleId":"108","severity":1,"message":"109","line":229,"column":52,"nodeType":"110","messageId":"107","endLine":229,"endColumn":54},{"ruleId":"111","severity":1,"message":"112","line":352,"column":11,"nodeType":"113","endLine":352,"endColumn":66},{"ruleId":"87","severity":1,"message":"114","line":9,"column":7,"nodeType":"89","messageId":"90","endLine":9,"endColumn":13},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"87","severity":1,"message":"121","line":13,"column":9,"nodeType":"89","messageId":"90","endLine":13,"endColumn":18},{"ruleId":"87","severity":1,"message":"122","line":15,"column":9,"nodeType":"89","messageId":"90","endLine":15,"endColumn":17},{"ruleId":"87","severity":1,"message":"123","line":21,"column":12,"nodeType":"89","messageId":"90","endLine":21,"endColumn":24},{"ruleId":"93","severity":1,"message":"124","line":55,"column":8,"nodeType":"95","endLine":55,"endColumn":18,"suggestions":"125"},{"ruleId":"87","severity":1,"message":"121","line":18,"column":9,"nodeType":"89","messageId":"90","endLine":18,"endColumn":18},{"ruleId":"87","severity":1,"message":"123","line":24,"column":12,"nodeType":"89","messageId":"90","endLine":24,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":35,"column":9,"nodeType":"128","messageId":"129","endLine":49,"endColumn":10},{"ruleId":"93","severity":1,"message":"130","line":51,"column":8,"nodeType":"95","endLine":51,"endColumn":18,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"127","line":55,"column":9,"nodeType":"128","messageId":"129","endLine":69,"endColumn":10},{"ruleId":"93","severity":1,"message":"132","line":72,"column":8,"nodeType":"95","endLine":72,"endColumn":18,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":129,"column":13,"nodeType":"136","messageId":"107","endLine":129,"endColumn":23},{"ruleId":"87","severity":1,"message":"137","line":40,"column":9,"nodeType":"89","messageId":"90","endLine":40,"endColumn":12},{"ruleId":"93","severity":1,"message":"138","line":76,"column":8,"nodeType":"95","endLine":76,"endColumn":28,"suggestions":"139"},{"ruleId":"111","severity":1,"message":"112","line":272,"column":17,"nodeType":"113","endLine":272,"endColumn":72},{"ruleId":"111","severity":1,"message":"112","line":281,"column":15,"nodeType":"113","endLine":281,"endColumn":70},{"ruleId":"87","severity":1,"message":"140","line":15,"column":9,"nodeType":"89","messageId":"90","endLine":15,"endColumn":20},{"ruleId":"93","severity":1,"message":"141","line":29,"column":7,"nodeType":"95","endLine":29,"endColumn":16,"suggestions":"142"},{"ruleId":"108","severity":1,"message":"109","line":38,"column":18,"nodeType":"110","messageId":"107","endLine":38,"endColumn":20},{"ruleId":"87","severity":1,"message":"143","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":33,"column":13,"nodeType":"146","messageId":"147","endLine":33,"endColumn":19},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'inputCoordinates' is assigned a value but never used.","'limit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cursorPos', 'dynamicValue', and 'sliderCursor.style'. Either include them or remove the dependency array. You can also do a functional update 'setDynamicValue(d => ...)' if you only need 'dynamicValue' in the 'setDynamicValue' call.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'changeCallback'. Either include it or remove the dependency array.",["149"],"'newInput' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'reload' is assigned a value but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],"'hasButton' is assigned a value but never used.","'maxLimit' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dragPos' and 'reveredRemap'. Either include them or remove the dependency array.",["152"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["154"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'num' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dynamicValue' and 'unit'. Either include them or remove the dependency array.",["155"],"'colorSlider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inputid' and 'progress'. Either include them or remove the dependency array.",["156"],"'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [cursorPos, dynamicValue, multiplyer, sliderCursor.style, update]",{"range":"170","text":"171"},"Update the dependencies array to be: [changeCallback]",{"range":"172","text":"173"},"Update the dependencies array to be: [dragPos, progress, reveredRemap]",{"range":"174","text":"175"},"Update the dependencies array to be: [progress, propName]",{"range":"176","text":"177"},{"range":"178","text":"177"},"Update the dependencies array to be: [dynamicValue, multiplyer, unit, update]",{"range":"179","text":"180"},"Update the dependencies array to be: [inputid, progress, toInput]",{"range":"181","text":"182"},[2097,2117],"[cursorPos, dynamicValue, multiplyer, sliderCursor.style, update]",[3829,3831],"[changeCallback]",[1366,1376],"[dragPos, progress, reveredRemap]",[1414,1424],"[progress, propName]",[2018,2028],[1974,1994],"[dynamicValue, multiplyer, unit, update]",[802,811],"[inputid, progress, toInput]"]