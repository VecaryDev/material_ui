[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Material.jsx":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\RangeInput.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"16","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx":"17","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx":"18","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInputByPercentage.jsx":"19","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"20","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"21"},{"size":2456,"mtime":1610529642629,"results":"22","hashOfConfig":"23"},{"size":718,"mtime":1610114473846,"results":"24","hashOfConfig":"23"},{"size":995,"mtime":1610362864192,"results":"25","hashOfConfig":"23"},{"size":8810,"mtime":1610369243197,"results":"26","hashOfConfig":"23"},{"size":942,"mtime":1610362481792,"results":"27","hashOfConfig":"23"},{"size":532,"mtime":1609763545216,"results":"28","hashOfConfig":"23"},{"size":9518,"mtime":1610543554198,"results":"29","hashOfConfig":"23"},{"size":865,"mtime":1610525829527,"results":"30","hashOfConfig":"23"},{"size":735,"mtime":1610529538283,"results":"31","hashOfConfig":"23"},{"size":1606,"mtime":1610528171043,"results":"32","hashOfConfig":"23"},{"size":3669,"mtime":1610023436721,"results":"33","hashOfConfig":"23"},{"size":1139,"mtime":1610098659398,"results":"34","hashOfConfig":"23"},{"size":6670,"mtime":1610538065446,"results":"35","hashOfConfig":"23"},{"size":4510,"mtime":1610529775382,"results":"36","hashOfConfig":"23"},{"size":5190,"mtime":1610362870507,"results":"37","hashOfConfig":"23"},{"size":5251,"mtime":1610369303384,"results":"38","hashOfConfig":"23"},{"size":5787,"mtime":1610543572917,"results":"39","hashOfConfig":"23"},{"size":1162,"mtime":1610353544886,"results":"40","hashOfConfig":"23"},{"size":7961,"mtime":1610545635956,"results":"41","hashOfConfig":"23"},{"size":195,"mtime":1610125874422,"results":"42","hashOfConfig":"23"},{"size":1224,"mtime":1610035606263,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"11grfy6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Input.jsx",["97"],"import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\n\r\nfunction Input(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        setDynamicValue(0)\r\n    }, [value])\r\n\r\n    const handleInputChange = (e) => {\r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n        e.target.select()\r\n\r\n\r\n    }\r\n    const handleDrag = (e) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - e.clientY\r\n           let changingFactor = parseInt(map_float_range(difference, -1000, 1000, -5, 5))\r\n           const adjustChange = () => {\r\n               console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n               if(difference > 0) {\r\n                   \r\n                    return Math.ceil(dynamicValue +  Math.pow(2, Math.log10(difference )- 1 ))\r\n               }\r\n               else if(difference < 0 ){\r\n                return  Math.floor(dynamicValue -  Math.pow(2, Math.log10(difference  * -1) - 1))\r\n               }\r\n               else{\r\n                   return dynamicValue;\r\n                    \r\n               }\r\n           }\r\n           setTimeout(() => {\r\n            console.log(adjustChange());\r\n            setDynamicValue(adjustChange() )\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    const preventDefaultBehavior =(e) => {\r\n       e.preventDefault()\r\n    }\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect} onDrag={handleDrag} onDrop={preventDefaultBehavior} ref={inputRef} value={dynamicValue} onChange={handleInputChange} defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input",["98","99"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["100"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledSwitch.jsx",["101","102"],"import React, { useEffect, useState } from \"react\"\r\nimport { generateInputs, defaultInputs } from \"../TestData/generators\"\r\n\r\nimport Switch from \"../components/Switch\"\r\n\r\n\r\nfunction LabeledSwitch(props){\r\n    const {\r\n        label,\r\n        labelType,\r\n        padding,\r\n        handleChange,\r\n        input\r\n        } = props\r\n    const [inputs, setInputs] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        setInputs(generateInputs(input  || defaultInputs.single(), \"switch\"))\r\n    }, [input])\r\n\r\n    return(\r\n        <div className={` ${padding && \"px-4 my-2\"} flex w-full h_24 normal-font font-semibold justify-between items-center text-almostBlack`}>\r\n\r\n            <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"}`}>{label}</p>\r\n            <div className=\"flex h_24\">\r\n                {inputs.map((elem, index) => {\r\n                    return elem\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledSwitch","C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\DefaultData.js",["103","104","105"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\App.js",["106","107","108","109","110"],"import React, { useEffect, useRef, useContext, useState } from \"react\"\n\nimport {defaultInputs} from \"./TestData/generators\"\nimport _uniqueId from 'lodash/uniqueId';\nimport TextSlider from \"./containers/TextSlider\"\nimport TexturePopup from \"./containers/TexturePopup\"\nimport LabeledInput from \"./containers/LabeledInput\"\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Background from \"./img/Background.png\"\nimport Toolbar from \"./img/toolbar.png\"\nimport Navbar from \"./img/navBar.png\"\nimport leftSideBar from \"./img/leftSidebar.png\"\n\nimport MaterialList  from \"./containers/MaterialList\"\n\nimport {TexturePorpertyContext} from \"./context/texturePropertyContext\"\n\nimport AddMaterial from \"./containers/AddMaterial\"\nimport DashedLine from \"./components/DashedLine\"\nimport LabeledSwitch from \"./containers/LabeledSwitch\"\nimport Expand from \"./containers/Expand\"\n\nimport RangeInput from \"./components/RangeInput\"\nimport GrowingInput from \"./components/GrowingInput\"\nimport GrowingInputByPercentage from \"./components/GrowingInputByPercentage\"\n\n\nfunction App() {\n  const WorkSpaceRef = useRef(null)\n  const {globalState, dispatch} = useContext(TexturePorpertyContext)\n  const [firstChildInitialPos, setFirstChildInitialPos] = useState(0)\n  const rightPanel = useRef(null)\n\n  const advancedOptionSections= \"overflow-auto px-2\"\n\n  useEffect(() => {\n    dispatch({type: \"ADD_WORKSPACE_REF\", payload: {\n      ref: WorkSpaceRef\n    }})\n  }, [WorkSpaceRef])\n  useEffect( () => {\n    \n    setFirstChildInitialPos(rightPanel !== null && rightPanel.current.children[0].getBoundingClientRect().top)\n  }, [])\n\n  function handleScroll(e){\n    const firstChildCurrentPos = rightPanel.current.children[0].getBoundingClientRect()\n    let offset = 0\n    if(firstChildCurrentPos <= firstChildInitialPos + 56) {\n      rightPanel.current.scrollTop = 0\n    }else{\n      offset = firstChildCurrentPos.top - 74 + window.scrollY\n    }\n\n    \n    console.log(firstChildCurrentPos.top + window.scrollY )\n    dispatch({type: \"SET_SCROLL_OFFSET\", payload: {\n      offsetY: offset\n    }})\n  }\n\n  return (\n    <div  className=\"App font-inter overflow-hidden transition-none \">\n\n      <div id=\"MenuBar\" className=\"w-full h_56 bg-primary z-10 relative\" style={{ background: `url(${Navbar}) no-repeat center top/100% auto`}}></div>\n      <div id=\"Workspace\" className=\"flex\">\n\n        <div id=\"leftSidebarAnd3DSpace\" className=\"w-full h-screen\">\n          <div id=\"toolbar\" className=\"w-full h_40 bg-primaryLight\" style={{ background: `url(${Toolbar}) no-repeat center top/100% auto`}}></div>\n          <div className=\"w-full h-full flex\">\n              <div id=\"leftSideBar\" className=\"w_prop h-full bg-almostWhite\" style={{ background: `url(${leftSideBar}) no-repeat center top/100% auto`}}></div>\n              <div id=\"3DSpace\" ref={WorkSpaceRef} className=\" h-full bg-almostBlack p-3\" style={{\n                width: \"calc(100% - 248px)\", \n                height: \"calc(100% )\",\n                background: `url(${Background}) no-repeat center top/100% auto`\n                }}>\n\n\n                <TexturePopup />\n              </div>\n          </div>\n        </div>\n\n        <div id=\"right_panel\" className=\"bg-almostWhite \">\n\n              <div onScroll={handleScroll}  ref={rightPanel} id=\"sliders\" \n              className=\"w_prop h-full items-center flex flex-col overflow-y-scroll overflow-x-hidden hideScrollBar select-none dark:bg-almostBlack\" style={{height: \"calc(100vh - 70px)\"}}>\n\n             \n\n                <AddMaterial />\n\n                <MaterialList />\n\n                <DashedLine />\n\n                    {/* If no properties are passed down the default slider is shown */}\n                    <TextSlider  />\n\n                    {/* Prop name is only set if specified. By default it will say \"Property\", \n                    you would need to write propName=\"Something\" in order to name the slider \"Something\"\n\n                    ----------------------------\n\n                    a slider is only inactive if you specify, in this case active must equal to -- false --\n                    */}\n                    <TextSlider  propName=\"Roughness\" active={false} unit={\"\"}/>\n\n                    {/* \n                    All props\n\n                    propName => The name of the property e.g. Hue or Base Color or Metalness (if not set or the field is empty -> \"Property\")\n                    active => decides if a slider is active or not. if not must be set to false (if not set it is --true--)\n                    decimal => If the value should be decimal (0.001) --true-- or integer (1) --false-- / not set\n                    maximum => the default maximum of the slider, the values can never be less then this, but can exceed if set manually\n                    unit => \"%\" -> 50% ||   \"$\" -> 50$ || null -> 50 || if not set it will be % (e.g. 50%) by default\n\n                    */}\n\n                    <TextSlider  propName=\"Base\" active={true} decimal={true} maximum={100} unit={\"%\"}/>\n                    <TextSlider  propName=\"Metalness\" active={true} decimal={false} maximum={100} unit={\"%\"}/>\n                    <TextSlider  propName=\"Opacity\" active={true} decimal={false} maximum={100} unit={\"%\"}/>\n                    <TextSlider  propName=\"Emission\" active={true} decimal={false} maximum={1000} unit={\"%\"}/>\n                    <TextSlider  propName=\"Normal\" active={false} decimal={false} maximum={100} unit={\"%\"}/>\n\n                    <TextSlider  propName=\"Metalness\" active={true} decimal={false} maximum={100} unit={\"%\"}/>\n                   \n                  \n                    <LabeledSwitch label=\"Double Sided Material\"  padding={true}/>\n                    <DashedLine />\n\n                        <div className=\"flex w-full justify-between px-4 normal-font my-4\">\n                      <div>\n                        <p>Range (0-100)</p>\n                        <RangeInput />\n                      </div>\n                      <div>\n                       \n                       \n                      </div>\n                      <div>\n                        <p>Growing input</p>\n                        <GrowingInputByPercentage />\n                      </div>\n                    </div>\n\n                    <DashedLine />\n\n                    <Expand label=\"Advanced Options\">\n                        <div className={advancedOptionSections} >\n\n                        <LabeledInput label=\"Anisotropy\" labelType=\"title\"  hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Rotation\" type=\"buttonless\"  input={defaultInputs.single(\"°\")}  />\n\n                        </div>\n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Clearcoat\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Roughness\" type=\"buttonless\"  input={defaultInputs.single(\"%\")}  />\n\n                        </div>\n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Subsurface\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Radius / Thickness\" type=\"buttonless\"  input={defaultInputs.single(\"mm\")}  />\n\n                        </div>  \n\n                        <div className={advancedOptionSections} style={{overflowY: \"hidden\", overflowX: \"hidden\"}}>\n\n                        <LabeledInput label=\"Refraction\" labelType=\"title\" hasButton={true} icon=\"dropdown\"   input={defaultInputs.single(\"%\")} />\n                        <LabeledInput  label=\"Absorbtion\" hasButton={true} plus={true} icon=\"solid\" input={defaultInputs.double(\"mm\")}  />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Reflectivity\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Ambient Occlusion\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Lightmap\" labelType=\"title\" hasButton={true} plus={true}   input={defaultInputs.single(\"%\")} />\n\n                        </div> \n                    </Expand>\n\n                    <Expand label=\"Texture Transformations\" padding={true}>\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Tiling\" hasButton={true} icon=\"link\"  input={defaultInputs.double(null, true)} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Offset\"type=\"buttonless\"   input={defaultInputs.double(null, true)} />\n\n                        </div> \n\n                        <div className={advancedOptionSections}>\n\n                        <LabeledInput label=\"Rotation\" type=\"buttonless\"   input={defaultInputs.single(\"°\")} />\n\n                        </div> \n                      \n\n                    </Expand>\n\n                   \n                   \n\n                    </div>\n        </div>\n\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\TextureButton.jsx",["111"],"import React from \"react\"\r\nimport  Plus from \"../img/Symbols/Sprites/Signs_Plus_1.svg\"\r\n\r\n\r\n\r\nfunction TextureButton(props) {\r\n    const {\r\n        setOpenPopup,\r\n        openPopup,\r\n        type,\r\n        className,\r\n    \r\n    } = props\r\n\r\n    function handleClick(){\r\n        setOpenPopup(!openPopup)\r\n    }\r\n    return(\r\n        <>\r\n        <button onClick={handleClick}  className={`${className !== undefined ? className : \"ml-2\"} ${type == \"circle\" ? \"rounded-xl overflow-hidden bg-lightGrey\" \r\n        : type=== \"transparent\" ? \"\" : \"bg-lightGrey\"} \r\n        icon  focus:outline-none  focus:ring-1 focus:ring-primary  focus:almostBlack rounded-sm flex justify-center items-center `}>\r\n            <img src={`${props.img || Plus}`}  alt={`${props.alt || \"add texture\"}`}/>\r\n        </button>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TextureButton",["112","113"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx",["114","115","116","117"],"import React, { useEffect, useState } from \"react\"\r\n\r\nimport Material from \"../components/Material\"\r\n\r\n\r\nfunction MaterialList(){\r\n    const [legacyCodeLoader, setLegacyCodeLoader] = useState(\"\")\r\n\r\n    const iframe = `<iframe src=\"https://vecarydev.github.io/MaterialList/\" width=\"248\" height=\"225\"> </iframe>`\r\n   \r\n    return(\r\n        <div id=\"matList\" className=\"material_list\" dangerouslySetInnerHTML={{__html: iframe}}>\r\n            \r\n       \r\n        </div>\r\n        // <div id=\"materialList\" className=\"flex flex-col justify-start w-full px-2\">\r\n\r\n        //     <Material />\r\n        //     <Material />\r\n        //     <Material />\r\n        //     <Material />\r\n\r\n        // </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialList","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Material.jsx",["118","119","120","121"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["122","123","124","125","126","127","128"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\popUpView.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx",["129","130","131"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\n\r\n\r\nfunction GrowingInput(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n    const [update, setUpdate] = useState(0)\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n\r\n\r\n    let limit = 1\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\n    let num = 0\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(multiplyer > 0) {\r\n            setGrowIcon(ArrowGrowUp)\r\n        }else{\r\n            setGrowIcon(ArrowGrowDown)\r\n        }\r\n\r\n        console.log(dynamicValue, multiplyer)\r\n        if(dynamicValue === false){\r\n            setDynamicValue(0 + multiplyer)\r\n        }else{\r\n            setDynamicValue(dynamicValue + multiplyer)\r\n        }\r\n        \r\n    }, [multiplyer, update])\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n        e.target.select()\r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location, dynamicData) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 60 + window.scrollY - location\r\n           let changingFactor = () => {\r\n               const growthRate = parseInt(map_float_range(difference, -100, 100, -limit, limit))\r\n               if(Math.abs(growthRate) < 2){\r\n                   return 0\r\n               }else{\r\n                   return growthRate\r\n               }\r\n           }\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor() ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor() * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            counter++\r\n           \r\n            if(changingFactor() > 0){\r\n             \r\n                if(changingFactor() > 5){\r\n                    return Math.pow(2, 5)\r\n                }else{\r\n                    return Math.pow(2, changingFactor())\r\n                }\r\n\r\n            }else if(changingFactor < 0){\r\n                if(changingFactor() < -5){\r\n                    return Math.pow(2, 5) * -1\r\n                }else{\r\n                    return Math.pow(2, Math.abs(changingFactor())) * -1\r\n                }\r\n\r\n            }\r\n            \r\n            \r\n            else{\r\n                return 0\r\n               \r\n            }\r\n\r\n            \r\n           }\r\n           setTimeout(() => {\r\n              \r\n            //console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            //num += parseInt( adjustChange() )\r\n            setMultiplyer(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    const handleDragEnd = (e) => {\r\n       e.preventDefault();\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n     \r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n        \r\n        dragOver = false\r\n        function infinity() {\r\n           \r\n            if(!dragOver){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                   \r\n                    handleDrag(userLocation)\r\n                    \r\n                    console.log(\"down\")\r\n                    if(counter % 2 === 0){\r\n                        setUpdate(update+ 1)\r\n                       }else{\r\n                        setUpdate(false)\r\n                       }\r\n                      \r\n                    infinity()\r\n                }, 100)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            infinity()\r\n        }, 500)\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={handleDragEnd}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={handleDragEnd}\r\n            \r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            {hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={handleDragEnd} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n            \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GrowingInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\RangeInput.jsx",["132","133"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\n\r\nfunction RangeInput(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\nlet num = 0\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setDynamicValue(0)\r\n    }, [value])\r\n\r\n    const handleInputChange = (e) => {\r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n        e.target.select()\r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - location\r\n           let changingFactor = parseInt(map_float_range(difference, -100, 100, 0, 100))\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            if(changingFactor > 100){\r\n                return 100\r\n            }else if(changingFactor < 0 ){\r\n                return 0\r\n            }else{\r\n                return changingFactor\r\n            }\r\n           }\r\n           setTimeout(() => {\r\n              \r\n            console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            num += parseInt( adjustChange() )\r\n            setDynamicValue(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    const handleDragEnd = (e) => {\r\n       e.preventDefault();\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n        dragOver = false\r\n        function infinity() {\r\n            if(!dragOver){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                    handleDrag(userLocation)\r\n                    \r\n                    console.log(\"down\")\r\n                    infinity()\r\n                }, 10)\r\n            }\r\n        }\r\n        setTimeout(infinity, 500)\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={handleDrag}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={handleDragEnd}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n\r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RangeInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["134","135","136","137","138","139","140","141","142","143","144"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["145","146","147","148","149","150","151","152"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx",["153","154","155","156","157","158"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Switch.jsx",["159","160","161"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { generateInputs } from \"../TestData/generators\"\r\n\r\n\r\n\r\nfunction Switch(props){\r\n    const {\r\n        id,\r\n        axis,\r\n        unit\r\n        } = props\r\n        const checkboxRef = useRef(null)\r\n        const [state, setState] = useState(false)\r\n\r\n        console.log(id, axis)\r\n        function handleChange(e){\r\n            console.log(checkboxRef.current.checked)\r\n            \r\n            setState(!state)\r\n            checkboxRef.current.checked = state\r\n        }\r\n\r\n    return(\r\n        <div id={id} onClick={handleChange} className={` w_56 h-full flex justify-between items-center ml-2`}>\r\n            <p className=\"font-normal normal-font text-midGrey pl-1\">{axis}</p>\r\n            <div  className={` ${state ? \"bg-primary justify-end\" :  \"bg-midGrey\"}  rounded-xl w_24 h-3 flex `}>\r\n\r\n                <div id=\"knot\" className=\"w-2 h-2 bg-almostWhite m-0.5 rounded-xl\">\r\n                        <input ref={checkboxRef} className=\"opacity-0 w-0 h-0\" type=\"checkbox\" />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Switch","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInputByPercentage.jsx",["162","163","164","165","166"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["167","168"],{"ruleId":"169","severity":1,"message":"170","line":36,"column":16,"nodeType":"171","messageId":"172","endLine":36,"endColumn":30},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":9,"column":7,"nodeType":"171","messageId":"172","endLine":9,"endColumn":13},{"ruleId":"169","severity":1,"message":"178","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":14},{"ruleId":"169","severity":1,"message":"179","line":12,"column":9,"nodeType":"171","messageId":"172","endLine":12,"endColumn":21},{"ruleId":"169","severity":1,"message":"180","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"181","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":24},{"ruleId":"169","severity":1,"message":"182","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":17},{"ruleId":"169","severity":1,"message":"182","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":17},{"ruleId":"169","severity":1,"message":"183","line":9,"column":16,"nodeType":"171","messageId":"172","endLine":9,"endColumn":22},{"ruleId":"169","severity":1,"message":"184","line":26,"column":8,"nodeType":"171","messageId":"172","endLine":26,"endColumn":20},{"ruleId":"169","severity":1,"message":"185","line":32,"column":10,"nodeType":"171","messageId":"172","endLine":32,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":42,"column":6,"nodeType":"188","endLine":42,"endColumn":20,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":20,"column":107,"nodeType":"192","messageId":"193","endLine":20,"endColumn":109},{"ruleId":"173","replacedBy":"194"},{"ruleId":"175","replacedBy":"195"},{"ruleId":"169","severity":1,"message":"196","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"197","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":16},{"ruleId":"169","severity":1,"message":"198","line":7,"column":12,"nodeType":"171","messageId":"172","endLine":7,"endColumn":28},{"ruleId":"169","severity":1,"message":"199","line":7,"column":30,"nodeType":"171","messageId":"172","endLine":7,"endColumn":49},{"ruleId":"169","severity":1,"message":"196","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":33,"column":122,"nodeType":"202","endLine":33,"endColumn":145},{"ruleId":"200","severity":1,"message":"201","line":34,"column":122,"nodeType":"202","endLine":34,"endColumn":145},{"ruleId":"200","severity":1,"message":"201","line":35,"column":97,"nodeType":"202","endLine":35,"endColumn":116},{"ruleId":"169","severity":1,"message":"203","line":18,"column":9,"nodeType":"171","messageId":"172","endLine":18,"endColumn":18},{"ruleId":"169","severity":1,"message":"204","line":24,"column":12,"nodeType":"171","messageId":"172","endLine":24,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":35,"column":9,"nodeType":"207","messageId":"208","endLine":49,"endColumn":10},{"ruleId":"186","severity":1,"message":"209","line":51,"column":8,"nodeType":"188","endLine":51,"endColumn":18,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"206","line":55,"column":9,"nodeType":"207","messageId":"208","endLine":69,"endColumn":10},{"ruleId":"186","severity":1,"message":"211","line":72,"column":8,"nodeType":"188","endLine":72,"endColumn":18,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":129,"column":13,"nodeType":"215","messageId":"193","endLine":129,"endColumn":23},{"ruleId":"169","severity":1,"message":"216","line":37,"column":9,"nodeType":"171","messageId":"172","endLine":37,"endColumn":12},{"ruleId":"186","severity":1,"message":"217","line":57,"column":8,"nodeType":"188","endLine":57,"endColumn":28,"suggestions":"218"},{"ruleId":"200","severity":1,"message":"201","line":233,"column":17,"nodeType":"202","endLine":233,"endColumn":75},{"ruleId":"169","severity":1,"message":"219","line":17,"column":12,"nodeType":"171","messageId":"172","endLine":17,"endColumn":22},{"ruleId":"169","severity":1,"message":"220","line":17,"column":24,"nodeType":"171","messageId":"172","endLine":17,"endColumn":37},{"ruleId":"169","severity":1,"message":"221","line":1,"column":58,"nodeType":"171","messageId":"172","endLine":1,"endColumn":73},{"ruleId":"169","severity":1,"message":"222","line":10,"column":9,"nodeType":"171","messageId":"172","endLine":10,"endColumn":25},{"ruleId":"186","severity":1,"message":"223","line":61,"column":8,"nodeType":"188","endLine":61,"endColumn":10,"suggestions":"224"},{"ruleId":"190","severity":1,"message":"191","line":78,"column":75,"nodeType":"192","messageId":"193","endLine":78,"endColumn":77},{"ruleId":"186","severity":1,"message":"225","line":83,"column":8,"nodeType":"188","endLine":83,"endColumn":19,"suggestions":"226"},{"ruleId":"186","severity":1,"message":"227","line":94,"column":8,"nodeType":"188","endLine":94,"endColumn":18,"suggestions":"228"},{"ruleId":"186","severity":1,"message":"229","line":100,"column":8,"nodeType":"188","endLine":100,"endColumn":49,"suggestions":"230"},{"ruleId":"186","severity":1,"message":"231","line":123,"column":8,"nodeType":"188","endLine":123,"endColumn":23,"suggestions":"232"},{"ruleId":"190","severity":1,"message":"233","line":129,"column":42,"nodeType":"192","messageId":"193","endLine":129,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":143,"column":17,"nodeType":"236","endLine":143,"endColumn":36},{"ruleId":"190","severity":1,"message":"233","line":162,"column":34,"nodeType":"192","messageId":"193","endLine":162,"endColumn":36},{"ruleId":"169","severity":1,"message":"237","line":1,"column":38,"nodeType":"171","messageId":"172","endLine":1,"endColumn":44},{"ruleId":"169","severity":1,"message":"221","line":1,"column":58,"nodeType":"171","messageId":"172","endLine":1,"endColumn":73},{"ruleId":"169","severity":1,"message":"238","line":48,"column":11,"nodeType":"171","messageId":"172","endLine":48,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":55,"column":14,"nodeType":"192","messageId":"193","endLine":55,"endColumn":16},{"ruleId":"186","severity":1,"message":"239","line":83,"column":8,"nodeType":"188","endLine":83,"endColumn":10,"suggestions":"240"},{"ruleId":"190","severity":1,"message":"191","line":98,"column":75,"nodeType":"192","messageId":"193","endLine":98,"endColumn":77},{"ruleId":"186","severity":1,"message":"241","line":106,"column":8,"nodeType":"188","endLine":106,"endColumn":19,"suggestions":"242"},{"ruleId":"200","severity":1,"message":"201","line":123,"column":13,"nodeType":"202","endLine":123,"endColumn":49},{"ruleId":"169","severity":1,"message":"221","line":1,"column":57,"nodeType":"171","messageId":"172","endLine":1,"endColumn":72},{"ruleId":"169","severity":1,"message":"243","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":17},{"ruleId":"186","severity":1,"message":"244","line":33,"column":8,"nodeType":"188","endLine":33,"endColumn":26,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":36,"column":1,"nodeType":"248","messageId":"193","endLine":38,"endColumn":4},{"ruleId":"186","severity":1,"message":"249","line":72,"column":8,"nodeType":"188","endLine":72,"endColumn":49,"suggestions":"250"},{"ruleId":"186","severity":1,"message":"251","line":103,"column":7,"nodeType":"188","endLine":103,"endColumn":66,"suggestions":"252"},{"ruleId":"169","severity":1,"message":"196","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"253","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":24},{"ruleId":"169","severity":1,"message":"254","line":10,"column":9,"nodeType":"171","messageId":"172","endLine":10,"endColumn":13},{"ruleId":"169","severity":1,"message":"255","line":25,"column":12,"nodeType":"171","messageId":"172","endLine":25,"endColumn":24},{"ruleId":"169","severity":1,"message":"216","line":39,"column":9,"nodeType":"171","messageId":"172","endLine":39,"endColumn":12},{"ruleId":"186","severity":1,"message":"217","line":71,"column":8,"nodeType":"188","endLine":71,"endColumn":28,"suggestions":"256"},{"ruleId":"200","severity":1,"message":"201","line":258,"column":17,"nodeType":"202","endLine":258,"endColumn":72},{"ruleId":"200","severity":1,"message":"201","line":267,"column":15,"nodeType":"202","endLine":267,"endColumn":70},{"ruleId":"169","severity":1,"message":"180","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":33,"column":13,"nodeType":"259","messageId":"260","endLine":33,"endColumn":19},"no-unused-vars","'changingFactor' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["261"],"no-negated-in-lhs",["262"],"'reload' is assigned a value but never used.","'Switch' is defined but never used.","'handleChange' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'_uniqueId' is defined but never used.","'uuidv4' is defined but never used.","'GrowingInput' is defined but never used.","'globalState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["263"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["261"],["262"],"'useEffect' is defined but never used.","'Material' is defined but never used.","'legacyCodeLoader' is assigned a value but never used.","'setLegacyCodeLoader' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'hasButton' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["264"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["265"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'num' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dynamicValue'. Either include it or remove the dependency array. You can also do a functional update 'setDynamicValue(d => ...)' if you only need 'dynamicValue' in the 'setDynamicValue' call.",["266"],"'multiplyer' is assigned a value but never used.","'setMultiplyer' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'payloadGenerator' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["269"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["270"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["271"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'payload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'icon', 'input', 'label', 'mainProperty', 'newId', and 'type'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'icon', 'id', 'label', 'path', and 'toggleDorpdown'. Either include them or remove the dependency array. You can also do a functional update 'setToggleDropdown(t => ...)' if you only need 'toggleDorpdown' in the 'setToggleDropdown' call.",["273"],"'Draggable' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["274"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has a missing dependency: 'globalState.MaterialPorperties'. Either include it or remove the dependency array.",["276"],"'generateInputs' is defined but never used.","'unit' is assigned a value but never used.","'editableText' is assigned a value but never used.",["277"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"283","fix":"305"},"Update the dependencies array to be: [WorkSpaceRef, dispatch]",{"range":"306","text":"307"},"Update the dependencies array to be: [progress, propName]",{"range":"308","text":"309"},{"range":"310","text":"309"},"Update the dependencies array to be: [dynamicValue, multiplyer, update]",{"range":"311","text":"312"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"313","text":"314"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"315","text":"316"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"317","text":"318"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"319","text":"320"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, icon, input, label, mainProperty, newId, type]",{"range":"323","text":"324"},"Update the dependencies array to be: [dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",{"range":"325","text":"326"},"Update the dependencies array to be: [ref, globalState, dispatch]",{"range":"327","text":"328"},"Update the dependencies array to be: [globalState, globalState.MetaData.activeTexturePopup]",{"range":"329","text":"330"},"Update the dependencies array to be: [activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",{"range":"331","text":"332"},{"range":"333","text":"312"},[1428,1442],"[WorkSpaceRef, dispatch]",[1414,1424],"[progress, propName]",[2018,2028],[1277,1297],"[dynamicValue, multiplyer, update]",[1593,1595],"[dispatch, newId, propName]",[2425,2436],"[dispatch, globalState, id, openPopup, path, propName]",[2736,2746],"[dispatch, id, path, progress]",[2889,2930],"[globalState.MetaData.activeTexturePopup, id, propName]",[3466,3481],"[progress, max, maximum]",[2474,2476],"[dispatch, icon, input, label, mainProperty, newId, type]",[3443,3454],"[dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",[1199,1217],"[ref, globalState, dispatch]",[2692,2733],"[globalState, globalState.MetaData.activeTexturePopup]",[3752,3811],"[activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",[1929,1949]]