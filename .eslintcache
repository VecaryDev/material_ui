[{"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx":"1","C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js":"2","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx":"3","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx":"4","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx":"5","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx":"6","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx":"7","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx":"8","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx":"9","C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js":"10","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx":"11","C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx":"12","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\OpeningDialog.jsx":"13","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx":"14","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GradientView.jsx":"15","C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx":"16"},{"size":6107,"mtime":1611330165463,"results":"17","hashOfConfig":"18"},{"size":718,"mtime":1610114473846,"results":"19","hashOfConfig":"18"},{"size":927,"mtime":1610960014681,"results":"20","hashOfConfig":"18"},{"size":6070,"mtime":1611329978045,"results":"21","hashOfConfig":"18"},{"size":197,"mtime":1610548403904,"results":"22","hashOfConfig":"18"},{"size":8302,"mtime":1610626504004,"results":"23","hashOfConfig":"18"},{"size":6558,"mtime":1611330467197,"results":"24","hashOfConfig":"18"},{"size":735,"mtime":1610529538283,"results":"25","hashOfConfig":"18"},{"size":5197,"mtime":1611326112577,"results":"26","hashOfConfig":"18"},{"size":362,"mtime":1608257534771,"results":"27","hashOfConfig":"18"},{"size":532,"mtime":1609763545216,"results":"28","hashOfConfig":"18"},{"size":1224,"mtime":1610035606263,"results":"29","hashOfConfig":"18"},{"size":920,"mtime":1611695402220,"results":"30","hashOfConfig":"18"},{"size":762,"mtime":1610959992710,"results":"31","hashOfConfig":"18"},{"size":10275,"mtime":1611325020762,"results":"32","hashOfConfig":"18"},{"size":3669,"mtime":1610023436721,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11grfy6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\Vectary\\backup\\material_ui\\src\\TestData\\generators.jsx",["77","78","79","80","81","82"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\index.js",["83"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {TexturePoropertyProvider} from \"./context/texturePropertyContext\"\n\nconst reload = () => window.location.reload()\n\nReactDOM.render(\n  <React.StrictMode >\n    \n    <TexturePoropertyProvider>\n      \n            <App />\n      \n    </TexturePoropertyProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["84","85"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\Expand.jsx",[],["86","87"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TexturePopup.jsx",["88","89","90","91","92","93"],"import React, { useContext, useEffect, useRef, useState } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n \r\nimport {generateProperties} from \"../TestData/generators\"\r\n\r\nimport Dropdown from \"../components/dropdown\"\r\nimport PopUpView from \"../components/popUpView\"\r\nimport Tab from \"../components/Tab\"\r\n\r\nfunction useOutsideAlerter(ref, dispatch, globalState) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if(globalState.MetaData.WorkspaceRef && event.target === globalState.MetaData.WorkspaceRef.current){\r\n                    \r\n                    dispatch({type: \"CLOSE_POPUP\"})\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, globalState]);\r\n}\r\n\r\nArray.prototype.move = function (from, to) {\r\n    this.splice(to, 0, this.splice(from, 1)[0]);\r\n  };\r\n\r\nfunction TexturePopup(props) {\r\n    const {globalState, dispatch}= useContext(TexturePorpertyContext)\r\n    \r\n    const [open, setOpen] = useState(true)\r\n    const [hover, setHover] = useState(false)\r\n    const popUpWindow = useRef(null)\r\n    \r\n    const [activeProperty, setActiveProperty] = useState(0) // The index of the active property e.g. Metalness\r\n    const [activeTexture, setActiveTexture] = useState(0) //The index of the active TextureType (Solid / Gradient / Image)\r\n    const [activeTab, setActiveTab] = useState(0) //The index of the active submenu currently open (e.g. Adjust / Transform)\r\n    const [activeType, setActiveType] = useState(0) // \r\n\r\n\r\n    const [properties, setProperties] = useState([])\r\n\r\n    useOutsideAlerter(popUpWindow, dispatch, globalState)\r\n    \r\n   useEffect(() => {\r\n    setActiveTab(0)\r\n    console.log(activeTab, activeTexture, activeProperty, activeType)\r\n}, [activeTexture])\r\n\r\n    useEffect(() => {\r\n     \r\n\r\n           setOpen(globalState.MetaData.activeTexturePopup !== \"\")\r\n           setActiveTab(0)\r\n           setActiveType(0)\r\n           setActiveTexture(0)\r\n           if(globalState.MetaData.activeTexturePopup !== \"\") {\r\n               const globalStateCopy = globalState\r\n            let currentSelection = globalStateCopy.MaterialPorperties.filter(x => x.id === globalState.MetaData.activeTexturePopup)[0]\r\n            setActiveProperty(globalState.MaterialPorperties.indexOf(currentSelection))\r\n\r\n            \r\n           }\r\n        \r\n    }, [globalState.MetaData.activeTexturePopup])\r\n\r\n   useEffect(() => {\r\n   \r\n    if(activeProperty !== undefined \r\n        && globalState.MaterialPorperties[activeProperty] !== undefined \r\n        && globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes[activeTab] !== undefined) {\r\n\r\n        const path = {\r\n            activeProperty: activeProperty,\r\n            activeTexture: activeTexture,\r\n            activeTab: activeTab,\r\n        }\r\n            const currentlySelectedProps = globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes[activeTab]\r\n            setProperties(currentlySelectedProps)\r\n            const newProperties = generateProperties(currentlySelectedProps, path)\r\n            setProperties(newProperties)\r\n\r\n\r\n            \r\n    }\r\n    const test = {\r\n        activeProperty: activeProperty,\r\n        activeTexture: activeTexture,\r\n        activeTab: activeTab,\r\n        activeType: activeType\r\n    }\r\n\r\n    console.table(activeTab, activeTexture, activeType, \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\r\n\r\n    if( globalState.MaterialPorperties[activeProperty] !== undefined) {\r\n        console.log(globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture])\r\n    }\r\n\r\n    \r\n   }, [activeProperty,activeTexture, activeTab, activeType, open])\r\n\r\n\r\n    function handleHoverStart() {\r\n       \r\n        setHover(true)\r\n    }\r\n\r\n    function handleHoverEnd(){\r\n        \r\n        setHover(false)\r\n    }\r\n\r\n\r\n  \r\n    return(\r\n        <div className=\"flex justify-end pt-60 select-none \"\r\n   >\r\n       {globalState.MaterialPorperties[activeType] ? \r\n         <div ref={popUpWindow} \r\n         className={`${open ? \"\" : \"hidden\"} \r\n         w_props-row  bg-white absolute rounded-sm  `} \r\n         style={{minHeight: \"350px\"}}>\r\n\r\n               <PopUpView  \r\n                       globalState={globalState}\r\n                       activeType={activeType}\r\n                       handleHoverStart={handleHoverStart}\r\n                       handleHoverEnd={handleHoverEnd}\r\n                       hover={hover}\r\n                       activeTexture={activeTexture}\r\n                       setActiveTexture={setActiveType}\r\n                       activeProperty={activeProperty}\r\n                       type={globalState.MaterialPorperties[activeProperty].textureTypes[activeType]}\r\n               />  \r\n           \r\n               \r\n             <div id=\"popUp_Properties transition-all duration-100 \" className=\"p-4 \">\r\n                \r\n                 \r\n                <Dropdown list={globalState.MaterialPorperties[activeProperty].textureTypes} type=\"solid\" dropdownSelection={activeTexture} setDropdownSelection={setActiveTexture} />\r\n                \r\n\r\n               {globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes.length > 1 && \r\n                <Tab tabOptions={ globalState.MaterialPorperties[activeProperty].textureTypes[activeTexture].tabTypes} active={activeTab} setActive={setActiveTab}/>\r\n                } \r\n                \r\n\r\n               {properties && properties.map((prop) => {\r\n                   return prop\r\n               })}\r\n\r\n             </div>\r\n         </div>\r\n         : <div></div> }\r\n   </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TexturePopup",["94","95"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\DashedLine.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GrowingInput.jsx",["96","97","98","99"],"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport {map_float_range} from \"../TestData/functions\"\r\n\r\nimport ArrowGrowUp from \"../img/Symbols/Sprites/ArrowGrowUp.svg\"\r\nimport ArrowGrowDown from \"../img/Symbols/Sprites/ArrowGrowDown.svg\"\r\nimport ArrowGrow from \"../img/Symbols/Sprites/ArrowUpDown.svg\"\r\n\r\n\r\n\r\n\r\nfunction Input(props) {\r\n    const {\r\n        iterable,\r\n        unit,\r\n        color,\r\n        value\r\n    } = props\r\n    \r\n    const [dynamicValue, setDynamicValue] = useState(false)\r\n    const [multiplyer, setMultiplyer] = useState(0)\r\n    const [update, setUpdate] = useState(0)\r\n    const [hover, setHover] = useState(false)\r\n    const [growIcon, setGrowIcon] = useState(ArrowGrow)\r\n    const [indicator, setIndicator] = useState(false)\r\n    \r\n    const inputRef = useRef(null)\r\n\r\n\r\n\r\n    let limit = 0.1\r\n\r\n    let counter = 0\r\n\r\n    let dragOver = true\r\n    let userLocation = 0\r\n\r\n    let num = 0\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(multiplyer > 0) {\r\n            setGrowIcon(ArrowGrowUp)\r\n        }else{\r\n            setGrowIcon(ArrowGrowDown)\r\n        }\r\n\r\n      \r\n\r\n\r\n       \r\n        if(dynamicValue === false){\r\n            setDynamicValue(0 + unit )\r\n        }else{\r\n            const processedDynamicValue = parseInt(dynamicValue.split(`${unit}`).join(\"\"))\r\n            \r\n            if(processedDynamicValue === 0) {\r\n                setDynamicValue(Math.ceil(2 * multiplyer) + unit)\r\n            }else{\r\n               if(multiplyer > 0.005){\r\n                    setDynamicValue(Math.ceil(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n               }else if (multiplyer < -0.005) {\r\n                     setDynamicValue(Math.floor(processedDynamicValue + (processedDynamicValue * multiplyer)) + unit)\r\n                \r\n               }else{\r\n                    setDynamicValue(processedDynamicValue + unit)    \r\n               }\r\n            }\r\n            \r\n        }\r\n        \r\n    }, [multiplyer, update])\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        let newInput = e.target.value.split(`${unit}`).join(\"\")\r\n       \r\n        setDynamicValue(newInput )\r\n       \r\n    }\r\n    const handleSelect = (e) => {\r\n      \r\n\r\n\r\n    }\r\n\r\n \r\n    const handleDrag = (location, dynamicData) => {\r\n       if(inputRef !== null) {\r\n           const difference = inputRef.current.getBoundingClientRect().top + 12 + window.scrollY - location\r\n           let changingFactor = map_float_range(difference, -100, 100, -limit, limit)\r\n           //console.log(dynamicValue)\r\n          \r\n           const adjustChange = () => {\r\n              // console.log(dynamicValue +  Math.pow(2, Math.log10(difference )- 1))\r\n             //  console.log(Math.pow(2, Math.log10(difference)), Math.log10(difference - 1), difference)\r\n            //    if(difference > 0) {\r\n                   \r\n            //         return Math.ceil( Math.pow(2, changingFactor ))\r\n            //    }\r\n            //    else if(difference < 0 ){\r\n            //     return  Math.floor( Math.pow(2, changingFactor * -1)) * -1\r\n            //    }\r\n            //    else{\r\n            //        return 0;\r\n                    \r\n            //    }\r\n\r\n            counter++\r\n           \r\n           \r\n            if(changingFactor > 0){\r\n\r\n                if(changingFactor > limit){\r\n                    return limit\r\n                }else{\r\n                    return changingFactor\r\n                }\r\n\r\n            }else{\r\n                \r\n                if(changingFactor < -limit){\r\n                    return limit * -1\r\n                }else{\r\n                   return changingFactor\r\n                }\r\n\r\n            }\r\n\r\n            \r\n           }\r\n           setTimeout(() => {\r\n              \r\n            //console.log(dynamicValue, adjustChange(),  parseInt(dynamicValue + adjustChange() ), counter, num);\r\n            //num += parseInt( adjustChange() )\r\n            setMultiplyer(adjustChange())\r\n           }, 50)\r\n          \r\n          \r\n\r\n       }\r\n       \r\n    }\r\n    function pauseEvent(e){\r\n        if(e.stopPropagation) e.stopPropagation();\r\n        if(e.preventDefault) e.preventDefault();\r\n        e.cancelBubble=true;\r\n        e.returnValue=false;\r\n        return false;\r\n    }\r\n    \r\n    let addSelfDestructingEventListener = (element, eventType, callback) => {\r\n        let handler = (e) => {\r\n            callback(e);\r\n            element.removeEventListener(eventType, handler);\r\n        };\r\n        element.addEventListener(eventType, handler);\r\n    };\r\n\r\n    function tryit() {\r\n      //  console.log(\"UP\")\r\n        dragOver = true\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        inputRef.current.select()\r\n        console.log(selection)\r\n        \r\n        document.exitPointerLock = document.exitPointerLock ||\r\n        document.mozExitPointerLock ||\r\n        document.webkitExitPointerLock;\r\n        \r\n        document.exitPointerLock();\r\n      \r\n       // counter = 0\r\n       \r\n    }\r\n\r\n    function logUserLocation(e) {\r\n        console.log(e.clientY)\r\n     \r\n       if(e.clientY !== undefined){\r\n             userLocation = e.clientY\r\n       }\r\n       \r\n    }\r\n\r\n    function exprimental(e) {\r\n        const element = e.target\r\n\r\n        element.requestPointerLock = element.requestPointerLock ||\r\n\t\t\t     element.mozRequestPointerLock ||\r\n\t\t\t     element.webkitRequestPointerLock;\r\n        // Ask the browser to lock the pointer\r\n        element.requestPointerLock();\r\n        \r\n\r\n\r\n        dragOver = false\r\n\r\n        const selection = inputRef.current.value.substring(inputRef.current.selectionStart, inputRef.current.selectionEnd);\r\n        \r\n        if(selection === \"\") {\r\n      \r\n        function infinity() {\r\n           \r\n            if(!dragOver ){\r\n                setTimeout(() => {\r\n                    addSelfDestructingEventListener(window, \"mousemove\", logUserLocation) \r\n                   // setDynamicValue(num += multiplyer)\r\n                  // e.target.select()\r\n                    handleDrag(userLocation)\r\n                    \r\n                   // console.log(\"down\")\r\n                    if(counter % 2 === 0){\r\n                        setUpdate(update+ 1)\r\n                       }else{\r\n                        setUpdate(false)\r\n                       }\r\n                      \r\n                    infinity()\r\n                }, 50)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            infinity()\r\n           \r\n        }, 100)\r\n    }\r\n        \r\n        addSelfDestructingEventListener(window, \"mouseup\", tryit) \r\n    }\r\n\r\n    function experimentalEnd() {\r\n        console.log(\"up\")\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      // console.log(dynamicValue)\r\n    }, [dynamicValue])\r\n\r\n    return (\r\n        <div \r\n\r\n        onMouseOver={() => { setHover(true); setGrowIcon(ArrowGrow) } }\r\n        onMouseLeave={() => { setHover(false) } } \r\n        \r\n        className={`${color ? \"w_32 ml-1\" : \"w_56 ml-1\"} h_24  relative flex items-center `}>\r\n\r\n\r\n            <input onClick={handleSelect}\r\n             onDrag={pauseEvent}\r\n             onMouseDown={exprimental}\r\n             onMouseUp={experimentalEnd}\r\n            onDrop={pauseEvent}\r\n            onFocus={() => {setIndicator(true)}}\r\n            onBlur={() => {setIndicator(false)}}\r\n            ref={inputRef}\r\n            value={dynamicValue} \r\n            onChange={handleInputChange}\r\n            defaultValue={`${color ? value : `0${unit}`}`} \r\n            className={`bg-lightGrey w-full h-full rounded ${iterable ? \"pl-4\" : \"pl-1\"}  normal-font` } />\r\n            \r\n            { hover && \r\n            <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n                <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n            {(!hover && indicator) &&\r\n              <div className=\"absolute right-0 h_24 flex items-center pointer-events-none \"> \r\n\r\n              <img onDrag={pauseEvent} className=\"\" src={growIcon} />\r\n\r\n          </div>}\r\n            \r\n            \r\n            {iterable &&  <p className=\"normal-font absolute pl-1 text-midGrey\">{iterable}</p>   }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\LabeledInput.jsx",["100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { useEffect, useState, useRef, useContext, useLayoutEffect } from \"react\"\r\n\r\nimport {TexturePorpertyContext} from \"../context/texturePropertyContext\"\r\n\r\nimport DownArrow from \"../img/Symbols/Sprites/ArrowDown.svg\"\r\n\r\nimport {generateInputs, payloadGenerator} from \"../TestData/generators\"\r\n\r\nimport colorPicker from \"../img/Symbols/Sprites/PipetteColor.svg\"\r\n\r\nimport Plus from \"../img/Symbols/Sprites/Plus.svg\"\r\n\r\nimport ColorPlaceholder from \"../img/colorPlaceholder.png\"\r\n\r\nimport Link from \"../img/Symbols/Sprites/Link.svg\"\r\nimport Unlink from \"../img/Symbols/Sprites/Unlink.svg\"\r\n\r\nimport TextureButton from \"../components/TextureButton\"\r\n\r\nimport {AnisotropyDefaults} from \"../TestData/DefaultData\"\r\n\r\n\r\nimport {TextureTypes, defaultImages} from \"../TestData/DefaultData\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Dropdown from \"../components/dropdown\"\r\n\r\nfunction LabeledInput(props) {\r\n    const {\r\n        id,\r\n        label,\r\n        labelType,\r\n        input,\r\n        type,\r\n        icon,\r\n        path,\r\n        plus,\r\n        hasButton,\r\n        buttonClick\r\n    } = props\r\n    const mainProperty = props.mainProperty !== undefined ? props.mainProperty : true\r\n    const [inputs, setInputs] = useState([])\r\n    const {globalState, dispatch} = useContext(TexturePorpertyContext)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [localLabel, setLocalLabel] = useState(\"\")\r\n\r\n    const [buttonIcon, setButtonIcon] = useState(Plus)\r\n    const [reducedValue, setReducedValue] = useState([])\r\n\r\n    const [toggleDorpdown, setToggleDropdown] = useState(false)\r\n\r\n    const payload = payloadGenerator(label)\r\n   \r\n   \r\n    const newId =  id ? id : uuidv4()\r\n\r\n    useEffect(()=>{\r\n        console.log(mainProperty)\r\n        type == \"colorPicker\" ? setLocalLabel(input.iterable[0].label) : setLocalLabel(label)\r\n       \r\n        switch (icon) {\r\n            \r\n            case \"colorPicker\":\r\n                setButtonIcon(colorPicker)\r\n                break;\r\n            case \"dropdown\":\r\n                setButtonIcon(DownArrow)\r\n                break;\r\n            case \"solid\": \r\n                setButtonIcon(ColorPlaceholder)\r\n                break;\r\n            case \"link\":\r\n                setButtonIcon(Link)\r\n                break;\r\n            case \"empty\": \r\n                setButtonIcon(Plus)\r\n                break;\r\n            default:\r\n                setButtonIcon(Plus)\r\n        }\r\n\r\n        dispatch({type: \"ADD_ONE_PROP\", payload:{\r\n            id: newId,\r\n            name: label,\r\n            textureTypes: TextureTypes(),\r\n            images: defaultImages\r\n        }}) \r\n\r\n        setInputs(generateInputs(input, type || null))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const globalStateCopy = globalState\r\n\r\n       if(path){\r\n           const loadEditedProperties = globalState.MaterialPorperties[path.activeProperty].textureTypes[path.activeTexture].tabTypes[path.activeTab]\r\n           const editedPropertyProgress = loadEditedProperties.properties.filter(x => x.id === id)[0]\r\n           console.log(editedPropertyProgress.progress, editedPropertyProgress.id)\r\n           //setProgress(editedPropertyProgress.progress)\r\n       }\r\n        \r\n        if(globalStateCopy.MaterialPorperties.length > 0 && id === undefined && openPopup && (icon === undefined || icon === \"empty\")){\r\n         \r\n            dispatch({type: \"ADD_ACTIVE_MATERIAL_POPUP\", payload: {\r\n                id: globalStateCopy.MaterialPorperties.filter(x => x.name == label)[0].id\r\n            }})\r\n        }\r\n        else if(openPopup && icon === \"dropdown\"){\r\n            setToggleDropdown(!toggleDorpdown)\r\n        }else if( icon === \"link\"){\r\n            if(openPopup){\r\n                setButtonIcon(Unlink)\r\n            }else{\r\n                setButtonIcon(Link)\r\n            }\r\n        }\r\n            \r\n        \r\n    }, [openPopup])\r\n\r\n    useEffect(() => {\r\n        if(input !== undefined && type=== \"colorPicker\"){\r\n           const newList = []\r\n           for(const [key, value] of Object.entries(input.iterable)){\r\n               newList.push({\r\n                   name: value.label\r\n               })\r\n           }\r\n           \r\n           setReducedValue(newList)\r\n        }\r\n    }, [input])\r\n\r\n\r\n    return(\r\n        <div className={`w-full h_24 flex ${ type=== \"colorPicker\" ? \"mt-5\" : \"my-2\"} ${mainProperty ? \"my-2\" : \"my-4\"} text-almostBlack  `}>\r\n            <div className={` w-full flex items-center justify-between relative`}>\r\n               \r\n               {type !== \"colorPicker\" ?\r\n               \r\n               \r\n               <p className={`${labelType === \"title\" ? \"font-semibold\" : \"font-normal\"} normal-font`}>{localLabel}</p>\r\n               \r\n            :\r\n            <div   \r\n            onClick={() => {setToggleDropdown(!toggleDorpdown)}}\r\n            className={` bg-lightGrey h-full w_48 flex justify-center items-center normal-font`}>\r\n            { localLabel} \r\n            <img className=\"\" src={DownArrow} />\r\n            <Dropdown \r\n                setToggleDropdown={setToggleDropdown} \r\n                list={reducedValue} \r\n                defaultState={true} \r\n                style={{\r\n                    width: \"48px\",\r\n                    marginLeft: \"0px\",\r\n                    marginTop: \"16px\"}}\r\n                className={`absolute z-10 w-28 bg-almostBlack text-almostWhite ${!toggleDorpdown && \"hidden\"}`}/>\r\n            </div>\r\n         \r\n            }\r\n                    \r\n\r\n        <div className={`flex ${type === \"buttonless\" && \"pr-8\"}`}>\r\n                <div className=\"flex\">\r\n\r\n                    {inputs && inputs.map((inp) => {\r\n                        return inp\r\n                    })}\r\n\r\n                </div>\r\n                {hasButton && <TextureButton \r\n                type={icon === undefined || icon !== \"dropdown\" && \"transparent\"}\r\n                openPopup={openPopup} \r\n                className={`${!mainProperty ? \"ml-1\" : \"ml-2\" }`} \r\n                img={buttonIcon} \r\n                alt=\"\" \r\n                setOpenPopup={setOpenPopup}/>}\r\n                {icon === \"dropdown\" && <Dropdown \r\n                setToggleDropdown={setToggleDropdown} \r\n                list={AnisotropyDefaults} \r\n                defaultState={toggleDorpdown} \r\n                style={{marginTop: \"-4px\"}}\r\n                className={`absolute z-10 w-28 bg-almostBlack text-almostWhite ${!toggleDorpdown && \"hidden\"}`}/>}\r\n        </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LabeledInput","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\MaterialList.jsx",["114","115","116","117"],"import React, { useEffect, useState } from \"react\"\r\n\r\nimport Material from \"../components/Material\"\r\n\r\n\r\nfunction MaterialList(){\r\n    const [legacyCodeLoader, setLegacyCodeLoader] = useState(\"\")\r\n\r\n    const iframe = `<iframe src=\"https://vecarydev.github.io/MaterialList/\" width=\"248\" height=\"225\"> </iframe>`\r\n   \r\n    return(\r\n        <div id=\"matList\" className=\"material_list\" dangerouslySetInnerHTML={{__html: iframe}}>\r\n            \r\n       \r\n        </div>\r\n        // <div id=\"materialList\" className=\"flex flex-col justify-start w-full px-2\">\r\n\r\n        //     <Material />\r\n        //     <Material />\r\n        //     <Material />\r\n        //     <Material />\r\n\r\n        // </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialList","C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\TextSlider.jsx",["118","119","120","121","122","123","124","125","126","127","128"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reportWebVitals.js",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\AddMaterial.jsx",[],"C:\\Work\\Vectary\\backup\\material_ui\\src\\reducers\\MaterialPropertyReducer.jsx",["129","130"],"import React from \"react\"\r\n\r\nexport const MaterialPropertyReducer =(state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ONE_PROP\":\r\n            return [\r\n               ...state,\r\n             state.filter(x => x.id === action.payload.id).length === 0 &&\r\n             {       \r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                textureTypes: action.payload.textureTypes,\r\n                images: action.payload.images ? action.payload.images : [] \r\n     }           \r\n                    \r\n                \r\n            ]\r\n            case \"REMOVE_ONE_PROP\": \r\n            return state.filter(item => item.id !== action.id)\r\n\r\n            case \"UPDATE_POPUP_PROPERTY\": \r\n            const path = action.payload.path\r\n            \r\n            const newState = state\r\n            newState[path.activeProperty]\r\n            .textureTypes[path.activeTexture]\r\n            .tabTypes[path.activeTab]\r\n            .properties.filter(x => x.id === action.payload.id)[0]\r\n            .progress = action.payload.progress\r\n      \r\n            return newState\r\n            break;\r\n\r\n            default: \r\n            return state\r\n            \r\n    } \r\n        \r\n\r\n}",["131","132"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\containers\\OpeningDialog.jsx",[],["133","134"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\Button.jsx",["135"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\GradientView.jsx",["136","137","138","139","140","141","142","143"],"C:\\Work\\Vectary\\backup\\material_ui\\src\\components\\ColoredSlider.jsx",["144","145","146","147","148","149","150"],{"ruleId":"151","severity":1,"message":"152","line":62,"column":5,"nodeType":"153","messageId":"154","endLine":69,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":75,"column":55,"nodeType":"157","messageId":"158","endLine":75,"endColumn":57},{"ruleId":"151","severity":1,"message":"152","line":77,"column":9,"nodeType":"153","messageId":"154","endLine":147,"endColumn":10},{"ruleId":"151","severity":1,"message":"152","line":110,"column":21,"nodeType":"153","messageId":"154","endLine":123,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":160,"column":37,"nodeType":"157","messageId":"158","endLine":160,"endColumn":39},{"ruleId":"159","severity":1,"message":"160","line":162,"column":68,"nodeType":"161","messageId":"162","endLine":162,"endColumn":70},{"ruleId":"163","severity":1,"message":"164","line":9,"column":7,"nodeType":"165","messageId":"166","endLine":9,"endColumn":13},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"169","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":32,"column":8,"nodeType":"175","endLine":32,"endColumn":26,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":35,"column":1,"nodeType":"179","messageId":"162","endLine":37,"endColumn":4},{"ruleId":"173","severity":1,"message":"180","line":59,"column":4,"nodeType":"175","endLine":59,"endColumn":19,"suggestions":"181"},{"ruleId":"173","severity":1,"message":"182","line":76,"column":8,"nodeType":"175","endLine":76,"endColumn":49,"suggestions":"183"},{"ruleId":"163","severity":1,"message":"184","line":97,"column":11,"nodeType":"165","messageId":"166","endLine":97,"endColumn":15},{"ruleId":"173","severity":1,"message":"185","line":111,"column":7,"nodeType":"175","endLine":111,"endColumn":66,"suggestions":"186"},{"ruleId":"167","replacedBy":"187"},{"ruleId":"169","replacedBy":"188"},{"ruleId":"163","severity":1,"message":"189","line":40,"column":9,"nodeType":"165","messageId":"166","endLine":40,"endColumn":12},{"ruleId":"173","severity":1,"message":"190","line":76,"column":8,"nodeType":"175","endLine":76,"endColumn":28,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":272,"column":17,"nodeType":"194","endLine":272,"endColumn":72},{"ruleId":"192","severity":1,"message":"193","line":281,"column":15,"nodeType":"194","endLine":281,"endColumn":70},{"ruleId":"163","severity":1,"message":"195","line":1,"column":38,"nodeType":"165","messageId":"166","endLine":1,"endColumn":44},{"ruleId":"163","severity":1,"message":"196","line":1,"column":58,"nodeType":"165","messageId":"166","endLine":1,"endColumn":73},{"ruleId":"163","severity":1,"message":"197","line":36,"column":9,"nodeType":"165","messageId":"166","endLine":36,"endColumn":13},{"ruleId":"163","severity":1,"message":"198","line":38,"column":9,"nodeType":"165","messageId":"166","endLine":38,"endColumn":20},{"ruleId":"163","severity":1,"message":"199","line":51,"column":11,"nodeType":"165","messageId":"166","endLine":51,"endColumn":18},{"ruleId":"159","severity":1,"message":"200","line":58,"column":14,"nodeType":"161","messageId":"162","endLine":58,"endColumn":16},{"ruleId":"173","severity":1,"message":"201","line":89,"column":8,"nodeType":"175","endLine":89,"endColumn":10,"suggestions":"202"},{"ruleId":"159","severity":1,"message":"200","line":104,"column":75,"nodeType":"161","messageId":"162","endLine":104,"endColumn":77},{"ruleId":"173","severity":1,"message":"203","line":118,"column":8,"nodeType":"175","endLine":118,"endColumn":19,"suggestions":"204"},{"ruleId":"163","severity":1,"message":"205","line":123,"column":23,"nodeType":"165","messageId":"166","endLine":123,"endColumn":26},{"ruleId":"173","severity":1,"message":"206","line":131,"column":8,"nodeType":"175","endLine":131,"endColumn":15,"suggestions":"207"},{"ruleId":"192","severity":1,"message":"193","line":148,"column":13,"nodeType":"194","endLine":148,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":172,"column":42,"nodeType":"210","messageId":"211","endLine":172,"endColumn":44},{"ruleId":"208","severity":1,"message":"209","line":172,"column":65,"nodeType":"210","messageId":"211","endLine":172,"endColumn":67},{"ruleId":"163","severity":1,"message":"212","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"213","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":16},{"ruleId":"163","severity":1,"message":"214","line":7,"column":12,"nodeType":"165","messageId":"166","endLine":7,"endColumn":28},{"ruleId":"163","severity":1,"message":"215","line":7,"column":30,"nodeType":"165","messageId":"166","endLine":7,"endColumn":49},{"ruleId":"163","severity":1,"message":"196","line":1,"column":58,"nodeType":"165","messageId":"166","endLine":1,"endColumn":73},{"ruleId":"163","severity":1,"message":"216","line":10,"column":9,"nodeType":"165","messageId":"166","endLine":10,"endColumn":25},{"ruleId":"173","severity":1,"message":"217","line":62,"column":8,"nodeType":"175","endLine":62,"endColumn":10,"suggestions":"218"},{"ruleId":"159","severity":1,"message":"200","line":79,"column":75,"nodeType":"161","messageId":"162","endLine":79,"endColumn":77},{"ruleId":"173","severity":1,"message":"219","line":84,"column":8,"nodeType":"175","endLine":84,"endColumn":19,"suggestions":"220"},{"ruleId":"173","severity":1,"message":"221","line":95,"column":8,"nodeType":"175","endLine":95,"endColumn":18,"suggestions":"222"},{"ruleId":"173","severity":1,"message":"223","line":101,"column":8,"nodeType":"175","endLine":101,"endColumn":49,"suggestions":"224"},{"ruleId":"173","severity":1,"message":"225","line":124,"column":8,"nodeType":"175","endLine":124,"endColumn":23,"suggestions":"226"},{"ruleId":"159","severity":1,"message":"160","line":130,"column":42,"nodeType":"161","messageId":"162","endLine":130,"endColumn":44},{"ruleId":"227","severity":1,"message":"228","line":144,"column":17,"nodeType":"229","endLine":144,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":163,"column":34,"nodeType":"161","messageId":"162","endLine":163,"endColumn":36},{"ruleId":"163","severity":1,"message":"230","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":33,"column":13,"nodeType":"233","messageId":"234","endLine":33,"endColumn":19},{"ruleId":"167","replacedBy":"235"},{"ruleId":"169","replacedBy":"236"},{"ruleId":"167","replacedBy":"237"},{"ruleId":"169","replacedBy":"238"},{"ruleId":"159","severity":1,"message":"200","line":12,"column":54,"nodeType":"161","messageId":"162","endLine":12,"endColumn":56},{"ruleId":"163","severity":1,"message":"239","line":17,"column":12,"nodeType":"165","messageId":"166","endLine":17,"endColumn":27},{"ruleId":"163","severity":1,"message":"240","line":24,"column":12,"nodeType":"165","messageId":"166","endLine":24,"endColumn":24},{"ruleId":"163","severity":1,"message":"241","line":101,"column":15,"nodeType":"165","messageId":"166","endLine":101,"endColumn":29},{"ruleId":"155","severity":1,"message":"156","line":101,"column":109,"nodeType":"157","messageId":"158","endLine":101,"endColumn":111},{"ruleId":"163","severity":1,"message":"242","line":139,"column":15,"nodeType":"165","messageId":"166","endLine":139,"endColumn":39},{"ruleId":"173","severity":1,"message":"243","line":174,"column":8,"nodeType":"175","endLine":174,"endColumn":42,"suggestions":"244"},{"ruleId":"151","severity":1,"message":"152","line":227,"column":9,"nodeType":"153","messageId":"154","endLine":234,"endColumn":10},{"ruleId":"163","severity":1,"message":"245","line":259,"column":14,"nodeType":"165","messageId":"166","endLine":259,"endColumn":29},{"ruleId":"163","severity":1,"message":"246","line":18,"column":9,"nodeType":"165","messageId":"166","endLine":18,"endColumn":18},{"ruleId":"163","severity":1,"message":"247","line":24,"column":12,"nodeType":"165","messageId":"166","endLine":24,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":35,"column":9,"nodeType":"153","messageId":"154","endLine":49,"endColumn":10},{"ruleId":"173","severity":1,"message":"248","line":51,"column":8,"nodeType":"175","endLine":51,"endColumn":18,"suggestions":"249"},{"ruleId":"151","severity":1,"message":"152","line":55,"column":9,"nodeType":"153","messageId":"154","endLine":69,"endColumn":10},{"ruleId":"173","severity":1,"message":"250","line":72,"column":8,"nodeType":"175","endLine":72,"endColumn":18,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":129,"column":13,"nodeType":"254","messageId":"162","endLine":129,"endColumn":23},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'reload' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["255"],"no-negated-in-lhs",["256"],["255"],["256"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["257"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","React Hook useEffect has missing dependencies: 'activeProperty', 'activeTab', and 'activeType'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["259"],"'test' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'globalState.MaterialPorperties'. Either include it or remove the dependency array.",["260"],["255"],["256"],"'num' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dynamicValue' and 'unit'. Either include them or remove the dependency array.",["261"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'useLayoutEffect' is defined but never used.","'plus' is assigned a value but never used.","'buttonClick' is assigned a value but never used.","'payload' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatch', 'icon', 'input', 'label', 'mainProperty', 'newId', and 'type'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'icon', 'id', 'label', 'path', and 'toggleDorpdown'. Either include them or remove the dependency array. You can also do a functional update 'setToggleDropdown(t => ...)' if you only need 'toggleDorpdown' in the 'setToggleDropdown' call.",["263"],"'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["264"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'useEffect' is defined but never used.","'Material' is defined but never used.","'legacyCodeLoader' is assigned a value but never used.","'setLegacyCodeLoader' is assigned a value but never used.","'payloadGenerator' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newId', and 'propName'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'dispatch', 'globalState', 'id', 'path', and 'propName'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'path'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'id' and 'propName'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'maximum'. Either include it or remove the dependency array.",["269"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["255"],["256"],["255"],["256"],"'lineCoordinates' is assigned a value but never used.","'vectorLength' is assigned a value but never used.","'collisionEdges' is assigned a value but never used.","'invertIfAboveCertanAngle' is defined but never used.","React Hook useEffect has a missing dependency: 'gradientAngle'. Either include it or remove the dependency array.",["270"],"'handleMouseDown' is defined but never used.","'hasButton' is assigned a value but never used.","'lastPosition' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'propName'. Either include it or remove the dependency array.",["272"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},"Update the dependencies array to be: [ref, globalState, dispatch]",{"range":"304","text":"305"},"Update the dependencies array to be: [activeProperty, activeTab, activeTexture, activeType]",{"range":"306","text":"307"},"Update the dependencies array to be: [globalState, globalState.MetaData.activeTexturePopup]",{"range":"308","text":"309"},"Update the dependencies array to be: [activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",{"range":"310","text":"311"},"Update the dependencies array to be: [dynamicValue, multiplyer, unit, update]",{"range":"312","text":"313"},"Update the dependencies array to be: [dispatch, icon, input, label, mainProperty, newId, type]",{"range":"314","text":"315"},"Update the dependencies array to be: [dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",{"range":"316","text":"317"},"Update the dependencies array to be: [input, type]",{"range":"318","text":"319"},"Update the dependencies array to be: [dispatch, newId, propName]",{"range":"320","text":"321"},"Update the dependencies array to be: [dispatch, globalState, id, openPopup, path, propName]",{"range":"322","text":"323"},"Update the dependencies array to be: [dispatch, id, path, progress]",{"range":"324","text":"325"},"Update the dependencies array to be: [globalState.MetaData.activeTexturePopup, id, propName]",{"range":"326","text":"327"},"Update the dependencies array to be: [progress, max, maximum]",{"range":"328","text":"329"},"Update the dependencies array to be: [gradientAngle, knotEndPos, knotStartPos, update]",{"range":"330","text":"331"},"Update the dependencies array to be: [progress, propName]",{"range":"332","text":"333"},{"range":"334","text":"333"},[1142,1160],"[ref, globalState, dispatch]",[2178,2193],"[activeProperty, activeTab, activeTexture, activeType]",[2776,2817],"[globalState, globalState.MetaData.activeTexturePopup]",[4048,4107],"[activeProperty, activeTexture, activeTab, activeType, open, globalState.MaterialPorperties]",[1974,1994],"[dynamicValue, multiplyer, unit, update]",[2704,2706],"[dispatch, icon, input, label, mainProperty, newId, type]",[3870,3881],"[dispatch, globalState, icon, id, label, openPopup, path, toggleDorpdown]",[4240,4247],"[input, type]",[1600,1602],"[dispatch, newId, propName]",[2432,2443],"[dispatch, globalState, id, openPopup, path, propName]",[2743,2753],"[dispatch, id, path, progress]",[2896,2937],"[globalState.MetaData.activeTexturePopup, id, propName]",[3473,3488],"[progress, max, maximum]",[5716,5750],"[gradientAngle, knotEndPos, knotStartPos, update]",[1414,1424],"[progress, propName]",[2018,2028]]